<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.1 20151215//EN"  "JATS-archivearticle1.dtd"><article article-type="research-article" dtd-version="1.1" xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink"><front><journal-meta><journal-id journal-id-type="nlm-ta">elife</journal-id><journal-id journal-id-type="publisher-id">eLife</journal-id><journal-title-group><journal-title>eLife</journal-title></journal-title-group><issn pub-type="epub" publication-format="electronic">2050-084X</issn><publisher><publisher-name>eLife Sciences Publications, Ltd</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="publisher-id">51121</article-id><article-id pub-id-type="doi">10.7554/eLife.51121</article-id><article-categories><subj-group subj-group-type="display-channel"><subject>Short Report</subject></subj-group><subj-group subj-group-type="heading"><subject>Computational and Systems Biology</subject></subj-group><subj-group subj-group-type="heading"><subject>Neuroscience</subject></subj-group></article-categories><title-group><article-title>Stable task information from an unstable neural population</article-title></title-group><contrib-group><contrib contrib-type="author" id="author-154447"><name><surname>Rule</surname><given-names>Michael E</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0002-4196-774X</contrib-id><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="other" rid="fund1"/><xref ref-type="fn" rid="con1"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" id="author-154448"><name><surname>Loback</surname><given-names>Adrianna R</given-names></name><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="other" rid="fund1"/><xref ref-type="fn" rid="con2"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" id="author-126946"><name><surname>Raman</surname><given-names>Dhruva V</given-names></name><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="other" rid="fund2"/><xref ref-type="fn" rid="con3"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" id="author-154449"><name><surname>Driscoll</surname><given-names>Laura N</given-names></name><xref ref-type="aff" rid="aff2">2</xref><xref ref-type="fn" rid="con4"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" id="author-19050"><name><surname>Harvey</surname><given-names>Christopher D</given-names></name><xref ref-type="aff" rid="aff3">3</xref><xref ref-type="other" rid="fund1"/><xref ref-type="other" rid="fund3"/><xref ref-type="other" rid="fund4"/><xref ref-type="other" rid="fund5"/><xref ref-type="fn" rid="con5"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" corresp="yes" id="author-49705"><name><surname>O'Leary</surname><given-names>Timothy</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0002-1029-0158</contrib-id><email>tso24@cam.ac.uk</email><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="other" rid="fund1"/><xref ref-type="other" rid="fund2"/><xref ref-type="fn" rid="con6"/><xref ref-type="fn" rid="conf1"/></contrib><aff id="aff1"><label>1</label><institution>Department of Engineering, University of Cambridge</institution><addr-line><named-content content-type="city">Cambridge</named-content></addr-line><country>United Kingdom</country></aff><aff id="aff2"><label>2</label><institution>Department of Electrical Engineering, Stanford University</institution><addr-line><named-content content-type="city">Stanford</named-content></addr-line><country>United States</country></aff><aff id="aff3"><label>3</label><institution>Department of Neurobiology, Harvard Medical School</institution><addr-line><named-content content-type="city">Boston</named-content></addr-line><country>United States</country></aff></contrib-group><contrib-group content-type="section"><contrib contrib-type="editor"><name><surname>Palmer</surname><given-names>Stephanie</given-names></name><role>Reviewing Editor</role><aff><institution>University of Chicago</institution><country>United States</country></aff></contrib><contrib contrib-type="senior_editor"><name><surname>Calabrese</surname><given-names>Ronald L</given-names></name><role>Senior Editor</role><aff><institution>Emory University</institution><country>United States</country></aff></contrib></contrib-group><pub-date date-type="publication" publication-format="electronic"><day>14</day><month>07</month><year>2020</year></pub-date><pub-date pub-type="collection"><year>2020</year></pub-date><volume>9</volume><elocation-id>e51121</elocation-id><history><date date-type="received" iso-8601-date="2019-08-15"><day>15</day><month>08</month><year>2019</year></date><date date-type="accepted" iso-8601-date="2020-06-17"><day>17</day><month>06</month><year>2020</year></date></history><permissions><copyright-statement>© 2020, Rule et al</copyright-statement><copyright-year>2020</copyright-year><copyright-holder>Rule et al</copyright-holder><ali:free_to_read/><license xlink:href="http://creativecommons.org/licenses/by/4.0/"><ali:license_ref>http://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>This article is distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use and redistribution provided that the original author and source are credited.</license-p></license></permissions><self-uri content-type="pdf" xlink:href="elife-51121-v2.pdf"/><abstract><p>Over days and weeks, neural activity representing an animal’s position and movement in sensorimotor cortex has been found to continually reconfigure or ‘drift’ during repeated trials of learned tasks, with no obvious change in behavior. This challenges classical theories, which assume stable engrams underlie stable behavior. However, it is not known whether this drift occurs systematically, allowing downstream circuits to extract consistent information. Analyzing long-term calcium imaging recordings from posterior parietal cortex in mice (<italic>Mus musculus</italic>), we show that drift is systematically constrained far above chance, facilitating a linear weighted readout of behavioral variables. However, a significant component of drift continually degrades a fixed readout, implying that drift is not confined to a null coding space. We calculate the amount of plasticity required to compensate drift independently of any learning rule, and find that this is within physiologically achievable bounds. We demonstrate that a simple, biologically plausible local learning rule can achieve these bounds, accurately decoding behavior over many days.</p></abstract><kwd-group kwd-group-type="author-keywords"><kwd>spatial navigation</kwd><kwd>learning and memory</kwd><kwd>neural coding</kwd><kwd>computational neuroscience</kwd><kwd>plasticity</kwd><kwd>systems modeling</kwd></kwd-group><kwd-group kwd-group-type="research-organism"><title>Research organism</title><kwd>Mouse</kwd></kwd-group><funding-group><award-group id="fund1"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100000854</institution-id><institution>Human Frontier Science Program</institution></institution-wrap></funding-source><award-id>RGY0069</award-id><principal-award-recipient><name><surname>Rule</surname><given-names>Michael E</given-names></name><name><surname>Loback</surname><given-names>Adrianna R</given-names></name><name><surname>Harvey</surname><given-names>Christopher D</given-names></name><name><surname>O'Leary</surname><given-names>Timothy</given-names></name></principal-award-recipient></award-group><award-group id="fund2"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100010663</institution-id><institution>H2020 European Research Council</institution></institution-wrap></funding-source><award-id>FLEXNEURO 716643</award-id><principal-award-recipient><name><surname>Raman</surname><given-names>Dhruva</given-names></name><name><surname>O'Leary</surname><given-names>Timothy</given-names></name></principal-award-recipient></award-group><award-group id="fund3"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000002</institution-id><institution>National Institutes of Health</institution></institution-wrap></funding-source><award-id>NS089521</award-id><principal-award-recipient><name><surname>Harvey</surname><given-names>Christopher D</given-names></name></principal-award-recipient></award-group><award-group id="fund4"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000002</institution-id><institution>National Institutes of Health</institution></institution-wrap></funding-source><award-id>MH107620</award-id><principal-award-recipient><name><surname>Harvey</surname><given-names>Christopher D</given-names></name></principal-award-recipient></award-group><award-group id="fund5"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000002</institution-id><institution>National Institutes of Health</institution></institution-wrap></funding-source><award-id>NS108410</award-id><principal-award-recipient><name><surname>Harvey</surname><given-names>Christopher D</given-names></name></principal-award-recipient></award-group><funding-statement>The funders had no role in study design, data collection and interpretation, or the decision to submit the work for publication.</funding-statement></funding-group><custom-meta-group><custom-meta specific-use="meta-only"><meta-name>Author impact statement</meta-name><meta-value>Analysis and modelling of sensorimotor neural activity shows how ongoing plasticity and appropriately tuned weights can cope with substantial ongoing changes in the neural code.</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="s1" sec-type="intro"><title>Introduction</title><p>A core principle in neuroscience is that behavioral variables are represented in neural activity. Such representations must be maintained to retain learned skills and memories. However, recent work has challenged the idea of long-lasting neural codes (<xref ref-type="bibr" rid="bib35">Rumpel and Triesch, 2016</xref>). In our recent work (<xref ref-type="bibr" rid="bib9">Driscoll et al., 2017</xref>), we found that neural activity–behavior relationships in individual posterior parietal cortex (PPC) neurons continually changed over many days during a repeated virtual navigation task. Similar ‘representational drift’ has been shown in other neocortical areas and hippocampus (<xref ref-type="bibr" rid="bib4">Attardo et al., 2015</xref>; <xref ref-type="bibr" rid="bib43">Ziv et al., 2013</xref>; <xref ref-type="bibr" rid="bib22">Levy et al., 2019</xref>). Importantly, these studies showed that representational drift is observed in brain areas essential for performing the task long after the task has been learned.</p><p>These experimental observations raise the major question of whether drifting representations are fundamentally at odds with the storage of stable memories of behavioral variables (e.g. <xref ref-type="bibr" rid="bib13">Ganguly and Carmena, 2009</xref>; <xref ref-type="bibr" rid="bib38">Tonegawa et al., 2015</xref>). Theoretical work has proposed that a consistent readout of a representation can be achieved if drift in neural activity patterns occurs in dimensions of population activity that are orthogonal to coding dimensions - in a ‘null coding space’ (<xref ref-type="bibr" rid="bib32">Rokni et al., 2007</xref>; <xref ref-type="bibr" rid="bib10">Druckmann and Chklovskii, 2012</xref>; <xref ref-type="bibr" rid="bib1">Ajemian et al., 2013</xref>; <xref ref-type="bibr" rid="bib37">Singh et al., 2019</xref>). This can be facilitated by neural representations that consist of low-dimensional dynamics distributed over many neurons (<xref ref-type="bibr" rid="bib28">Montijn et al., 2016</xref>; <xref ref-type="bibr" rid="bib11">Gallego et al., 2018</xref>; <xref ref-type="bibr" rid="bib15">Hennig et al., 2018</xref>; <xref ref-type="bibr" rid="bib8">Degenhart et al., 2020</xref>). Redundancy could therefore permit substantial reconfiguration of tuning in single cells without disrupting neural codes (<xref ref-type="bibr" rid="bib10">Druckmann and Chklovskii, 2012</xref>; <xref ref-type="bibr" rid="bib18">Huber et al., 2012</xref>; <xref ref-type="bibr" rid="bib20">Kaufman et al., 2014</xref>; <xref ref-type="bibr" rid="bib30">Ni et al., 2018</xref>; <xref ref-type="bibr" rid="bib19">Kappel et al., 2018</xref>). However, the extent to which drift is confined in such a null coding space remains an open question.</p><p>Purely random drift, as would occur if synaptic strengths and other circuit parameters follow independent random walks, would eventually disrupt a population code. Several studies have provided evidence that cortical synaptic weights and synaptic connections exhibit statistics that are consistent with a purely random process (<xref ref-type="bibr" rid="bib27">Moczulska et al., 2013</xref>; <xref ref-type="bibr" rid="bib23">Loewenstein et al., 2011</xref>; <xref ref-type="bibr" rid="bib24">Loewenstein et al., 2015</xref>). Indeed, our previous experimental findings reveal that drift includes cells that lose representations of task relevant variables, suggesting that some component of drift affects coding dimensions (<xref ref-type="bibr" rid="bib9">Driscoll et al., 2017</xref>).</p><p>Together, these observations raise fundamental questions that have not been directly addressed with experimental data, and which we address here. First, to what extent can ongoing drift in task representations be confined to a null coding space over extended periods while maintaining an accurate readout of behavioral variables in a biologically plausible way? Second, how might we estimate how much additional ongoing plasticity (if any) would be required to maintain a stable readout of behavioral variables, irrespective of specific learning rules? Third, is such an estimate of ongoing plasticity biologically feasible for typical levels of connectivity, and typical rates of change observed in synaptic strengths? Fourth, can a local, biologically plausible plasticity mechanism tune readout weights to identify a maximally stable coding subspace and compensate any residual drift away from this subspace?</p><p>We addressed these questions by modelling and analyzing data from <xref ref-type="bibr" rid="bib9">Driscoll et al., 2017</xref>. This dataset consists of optical recordings of calcium activity in populations of hundreds of neurons in Posterior Parietal Cortex (PPC) during repeated trials of a virtual reality T-maze task (<xref ref-type="fig" rid="fig1">Figure 1a</xref>). Mice were trained to associate a visual cue at the start of the maze with turning left or right at a T-junction. Behavioral performance and kinematic variables were stable over time with some per-session variability (mouse four exhibited a slight decrease in forward speed; <xref ref-type="fig" rid="fig2s1">Figure 2—figure supplement 1</xref>). Full experimental details can be found in the original study.</p><fig id="fig1" position="float"><label>Figure 1.</label><caption><title>Neural population coding of spatial navigation reconfigures over time in a virtual-reality maze task.</title><p>(<bold>a</bold>) Mice were trained to use visual cues to navigate to a reward in a virtual-reality maze; neural population activity was recorded using Ca<sup>2+</sup> imaging <xref ref-type="bibr" rid="bib9">Driscoll et al., 2017</xref>. (<bold>b</bold>) (Reprinted from <xref ref-type="bibr" rid="bib9">Driscoll et al., 2017</xref>) Neurons in PPC (vertical axes) fire at various regions in the maze (horizontal axes). Over days to weeks, individual neurons change their tuning, reconfiguring the population code. This occurs even at steady-state behavioral performance (after learning). (<bold>c</bold>) Each plot shows how location-averaged normalized activity changes for single cells over weeks. Missing days are interpolated to the nearest available sessions, and both left and right turns are combined. Neurons show diverse changes in tuning over days, including instability, relocation, long-term stability, gain/loss of selectivity, and intermittent responsiveness.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-51121-fig1-v2.tif"/><permissions><copyright-statement>© 2017 Elsevier</copyright-statement><copyright-year>2017</copyright-year><copyright-holder>Elsevier</copyright-holder><license><license-p>Panel B reprinted from <xref ref-type="bibr" rid="bib9">Driscoll et al., 2017</xref> with permission from Elsevier. They are not covered by the CC-BY 4.0 licence and further reproduction of this panel would need permission from the copyright holder.</license-p></license></permissions></fig><p>Previous studies identified planning and choice-based roles for PPC in the T-maze task (<xref ref-type="bibr" rid="bib14">Harvey et al., 2012</xref>), and stable decoding of such binary variables was explored in <xref ref-type="bibr" rid="bib9">Driscoll et al., 2017</xref>. However, in primates PPC has traditionally been viewed as containing continuous motor-related representations (<xref ref-type="bibr" rid="bib2">Andersen et al., 1997</xref>; <xref ref-type="bibr" rid="bib3">Andersen and Buneo, 2002</xref>; <xref ref-type="bibr" rid="bib29">Mulliken et al., 2008</xref>), and recent work (<xref ref-type="bibr" rid="bib21">Krumin et al., 2018</xref>; <xref ref-type="bibr" rid="bib25">Minderer et al., 2019</xref>) has confirmed that PPC has an equally motor-like role in spatial navigation in rodents (<xref ref-type="bibr" rid="bib5">Calton and Taube, 2009</xref>). It is therefore important to revisit these data in the context of continuous kinematics encoding.</p><p>Previous analyses showed that PPC neurons activated at specific locations in the maze on each day. When peak activation is plotted as a function of (linearized) maze location, the recorded population tiles the maze, as shown in <xref ref-type="fig" rid="fig1">Figure 1b</xref>. However, maintaining the same ordering in the same population of neurons revealed a loss of sequential activity over days to weeks (top row of <xref ref-type="fig" rid="fig1">Figure 1b</xref>). Nonetheless, a different subset of neurons could always be found to tile the maze in these later experimental sessions. In all cases, the same gradual loss of ordered activation was observed (second and third rows, <xref ref-type="fig" rid="fig1">Figure 1b</xref>). <xref ref-type="fig" rid="fig1">Figure 1c</xref> shows that PPC neurons gain or lose selectivity and occasionally change tuning locations. Together, these data show that PPC neurons form a continually reconfiguring representation of a fixed, learned task.</p><sec id="s1-1"><title>PPC representations facilitate a linear readout</title><p>We asked whether precise task information can be extracted from this population of neurons, despite the continual activity reconfiguration evident in these data. We began by fitting a linear decoder for each task variable of interest (animal location, heading, and velocity) for each day. This model has the form <inline-formula><mml:math id="inf1"><mml:mrow><mml:mrow><mml:mi>x</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:msup><mml:mi>M</mml:mi><mml:mo>⊤</mml:mo></mml:msup><mml:mo>⁢</mml:mo><mml:mi>z</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="inf2"><mml:mrow><mml:mi>x</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> is the time-binned estimate of position, velocity or heading (view angle) in the virtual maze, <inline-formula><mml:math id="inf3"><mml:mi>M</mml:mi></mml:math></inline-formula> is a vector of weights, and <inline-formula><mml:math id="inf4"><mml:mrow><mml:mi>z</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> is the normalized time-binned calcium fluorescence (Materials and methods: Decoding analyses).</p><p>Example decoding results for two mice are shown in <xref ref-type="fig" rid="fig2">Figure 2a</xref>, and summaries of decoding performance for four mice in <xref ref-type="fig" rid="fig2">Figure 2b</xref>. Position, speed, and view angle can each be recovered with a separate linear model. The average mean absolute decoding error for all animals included in the analysis was 47.2 cm ±8.8 cm (mean ±1 standard deviation) for position, 9.6 cm/s ±2.2 cm/s for speed, and 13.8° ± 4.0° for view angle (Materials and methods: Decoding analyses).</p><fig-group><fig id="fig2" position="float"><label>Figure 2.</label><caption><title>A linear decoder can extract kinematic information from PPC population activity on a single day.</title><p>(<bold>a</bold>) Example decoding performance for a single session for mice 4 and 5. Grey denotes held-out test data; colors denote the prediction for the corresponding kinematic variable. (<bold>b</bold>) Summary of the decoding performance on single days; each point denotes one mouse. Error bars denote one standard deviation over all sessions that had at least <inline-formula><mml:math id="inf5"><mml:mrow><mml:mi>N</mml:mi><mml:mo>=</mml:mo><mml:mn>200</mml:mn></mml:mrow></mml:math></inline-formula> high-confidence PPC neurons for each mouse. (Mouse two is excluded due to an insufficient number of isolated neurons). Chance level is ∼1.5 m for forward position, and varies across subjects for forward velocity (∼0.2–0.25 m/s) and head direction (∼20-30 ). (<bold>c</bold>) Extrapolation of the performance of the static linear decoder for decoding position as a function of the number of PPC neurons, done via Gaussian process regression (Materials and methods). Red '×' marks denote data; solid black line denotes the inferred mean of the GP. Shaded regions reflect ±1.96σ Gaussian estimates of the 95<sup>th</sup> and 5<sup>th</sup> percentiles. (<bold>d</bold>) Same as panel (<bold>c</bold>), but where the neurons have been ranked such that the ‘best’ subset of size 1≤K≤N is chosen, selected by greedy search based on explained variance (Materials and methods: Best K-Subset Ranking).</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-51121-fig2-v2.tif"/></fig><fig id="fig2s1" position="float" specific-use="child-fig"><label>Figure 2—figure supplement 1.</label><caption><title>Behavioral stability.</title><p>Statistics of forward motion show small daily variations. It is possible that changes in population codes relate to systematic changes in behavior over time. As described in <xref ref-type="bibr" rid="bib9">Driscoll et al., 2017</xref>, these experiments were performed only after mice achieved asymptotic performance in speed and accuracy. Nevertheless, there is some behavioral variability. Each mouse’s velocity in the initial (forward) segment of the ‘T’ maze varies slightly between days. Differences in means (black lines) are often statistically significant (p&lt;0.05 in 91% pairs of sessions; Bonferroni multiple-comparison correction for a 0.05 false discovery rate), but are small (<inline-formula><mml:math id="inf6"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>μ</mml:mi></mml:mrow><mml:mo>/</mml:mo><mml:mi>σ</mml:mi></mml:mrow></mml:math></inline-formula> i.e. Cohen’s d ranges between 10–16% per animal). Systematic drift-like trends appear absent from mice 1 and 3. A statistically significant trend is present for mouse 4 (Pearson’s ρ = − 0.9, p&lt;0.05). We show only forward velocity here, as other kinematics variables exhibited less variability. Daily fluctuations in behavior could be used to weakly predict the recording session. Under cross-validation, linear discriminant analysis based on ten-second windows of kinematics predicted the recording session 9–17% above chance. This suggests that each mouse exhibited small but detectable daily variability in their behavior. Most variability was unsystematic, and therefore unrelated to the slow changes in neural codes studied here. We expect changes in forward speed in mouse four to contribute to apparent drift in some cells. However, the results presented here generalize across mice 1, 3, and 5, which exhibited stable behavior.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-51121-fig2-figsupp1-v2.tif"/></fig></fig-group><p>We chose a linear decoder specifically because it can be interpreted biologically as a single ‘readout’ neuron that receives input from a few hundred PPC neurons, and whose activity approximates a linear weighted sum. The fact that a linear decoder recovers behavioral variables to reasonable accuracy suggests that brain areas with sufficiently dense connectivity to PPC can extract this information via simple weighted sums.</p><p>The number of PPC neurons recorded is a subset of the total PPC population. To assess whether additional neurons might improve decoding accuracy, we evaluated decoding performance of randomly drawn subsets of recorded neurons (<xref ref-type="fig" rid="fig2">Figure 2c</xref>). Extrapolation of the decoding performance suggested that better performance might be possible with a larger population of randomly sampled PPC neurons than we recorded.</p><p>It is possible that a random sample of neurons misses the ‘best’ subset of cells for decoding task variables. When we restricted to optimal subsets of neurons we found that performance improved rapidly up to ∼30 neurons and saturated at ∼30%(50–100 neurons) of the neurons recorded (<xref ref-type="fig" rid="fig2">Figure 2d</xref>). On a given day task variables could be decoded well with relatively few (∼10) neurons. However, the identity of the neurons in this optimal subset changed over days. For all subjects, no more than 1% of cells were consistently ranked in the top 10%, an no more than 13% in the top 50%. We confirmed that this instability was not due to under-regularization in training (Materials and methods: Best K-Subset Ranking).</p><p>Of the neurons with strong location tuning, <xref ref-type="bibr" rid="bib9">Driscoll et al., 2017</xref> found that 60% changed their location tuning over two weeks and a total of 80% changed over the 30- day period examined. We find that even the small remaining ‘stable’ subset of neurons exhibited daily variations in their Signal-to-Noise Ratio (SNR) with respect to task decoding, consistent with other studies (<xref ref-type="bibr" rid="bib6">Carmena et al., 2005</xref>). For example, no more than 8% of neurons that were in the top 25% in terms of tuning-peak stability were also consistently in the top 25% in terms of SNR for all days. If a neuron becomes relatively less reliable, then the weight assigned may become inappropriate for decoding. This affects our analyses, and would also physiologically affect a downstream neuron with fixed synaptic weights.</p></sec><sec id="s1-2"><title>Representational drift is systematic and significantly degrades a fixed readout</title><p>Naively fitting a linear model to data from any given day shows that behavioral variables are encoded in a way that permits a simple readout, but there is no guarantee that this readout will survive long-term drift in the neural code. To illustrate this, we compared the decoding performance of models fitted on a given day with decoders optimized on data from earlier or later days. We restricted this analysis to those neurons that were identified with high confidence on all days considered. We found that decoding performance decreased as the separation between days grew (<xref ref-type="fig" rid="fig3">Figure 3a</xref>). This is unsurprising given the extent of reconfiguration reported in the original study (<xref ref-type="bibr" rid="bib9">Driscoll et al., 2017</xref>) and depicted in <xref ref-type="fig" rid="fig1">Figure 1</xref>. Furthermore, because task-related PPC activity is distributed over many neurons, many different linear decoders can achieve similar error rates due to the degeneracy in the representation (<xref ref-type="bibr" rid="bib32">Rokni et al., 2007</xref>; <xref ref-type="bibr" rid="bib20">Kaufman et al., 2014</xref>; <xref ref-type="bibr" rid="bib28">Montijn et al., 2016</xref>). Since the directions in population activity used for inter-area communication might differ from the directions that maximally encode stimulus information in the local population (<xref ref-type="bibr" rid="bib30">Ni et al., 2018</xref>; <xref ref-type="bibr" rid="bib36">Semedo et al., 2019</xref>), single-day decoders might overlook a long-term stable subspace used for encoding and communication. This motivates the question of whether a drift-invariant linear decoder exists and whether its existence is biologically plausible.</p><fig id="fig3" position="float"><label>Figure 3.</label><caption><title>Single-day decoders generalize poorly to previous and subsequent days, but multi-day decoders exist with good performance.</title><p>(<bold>a</bold>) Blue: % increase in error over the optimal decoder for the testing day (mouse 3, 136 neurons; mouse 4, 166 neurons). Red: Mean absolute error for decoders trained on a single day (‘0’) and tested on past/future days. (<bold>b</bold>) Fixed decoders <inline-formula><mml:math id="inf7"><mml:mi>M</mml:mi></mml:math></inline-formula> for multiple days <inline-formula><mml:math id="inf8"><mml:mrow><mml:mi>d</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>⁢</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>⁢</mml:mo><mml:mi>D</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> (‘concatenated decoders’) are fit to concatenated excerpts from several sessions. The inset equation reflects the objective function to be minimized (Methods). Due to redundancy in the neural code, many decoders can perform well on a single day. Although the single-day optimal decoders vary, a stable subspace with good performance can exist. (<bold>c</bold>) Concatenated decoders (cyan) perform slightly but significantly worse than single-day decoders (ochre; Mann-Whitney U test, p&lt;0.01). They also perform better than expected if neural codes were unrelated across days (permutation tests; red). Plots show the mean absolute decoding error as a percent of the chance-level error (points: median, whiskers: 5<sup>th</sup>–95<sup>th</sup>%). Chance-level error was estimated by shuffling kinematics traces relative to neural time-series (mean of 100 samples). For the permutation tests, 100 random samples were drawn with the neuronal identities randomly permuted. (<bold>d</bold>) Plots show the rate at which concatenated-decoder accuracy (normalized <inline-formula><mml:math id="inf9"><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula>) degrades as the number of days increase. Concatenated decoders (black) degrade more slowly than expected for random drift (ochre). Shaded regions reflect the inner 95% of the data (generated by resampling for the null model). The null model statistics are matched to the within- and between-day variance and sparsity of the experimental data for each animal (Materials and methods).</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-51121-fig3-v2.tif"/></fig><p>To address this, we tested the performance of a single linear decoder optimized across data from multiple days. We concatenated data from different days using the same subset of PPC neurons (<xref ref-type="fig" rid="fig3">Figure 3b</xref>). In all four subjects, we found that such fixed multiple-day linear ‘concatenated’ decoders could recover accurate task variable information despite ongoing changes in PPC neuron tuning. However, the average performance of the multiple-day decoders was significantly worse than single-day linear decoders for each day (<xref ref-type="fig" rid="fig3">Figure 3c</xref>).</p><p>The existence of a fixed, approximate decoder implies a degenerate representation of task variables in the population activity of PPC neurons. In other words, there is a family of linear decoders that can recover behavioral variables while allowing weights to vary in some region of weight space. This situation is illustrated in <xref ref-type="fig" rid="fig3">Figure 3b</xref>, which depicts regions of good performance of single-day linear decoders as ellipsoids. The existence of an approximate concatenated decoder implies that these ellipsoids intersect over several days for some allowable level of error in the decoder. For a sufficiently redundant neural code, one might expect to find an invariant decoder for some specified level of accuracy even if the underlying code drifts. However, there are many qualitative ways in which drift can occur in a neural code: it could resemble a random walk, as some studies suggest (<xref ref-type="bibr" rid="bib27">Moczulska et al., 2013</xref>; <xref ref-type="bibr" rid="bib23">Loewenstein et al., 2011</xref>; <xref ref-type="bibr" rid="bib24">Loewenstein et al., 2015</xref>), or there could be a systematic component. Is the accuracy we observe in the concatenated decoder expected for a random walk? In all subjects, we found that a concatenated decoder performed substantially better on experimental data than on randomly drifting synthetic data with matched sparseness and matched within/between-session variability (<xref ref-type="fig" rid="fig3">Figure 3d</xref>). This suggests that the drift in the neural data is not purely random.</p><p>We further investigated the dynamics of drift by quantifying the direction of changes in neural variability over time (<xref ref-type="fig" rid="fig4">Figure 4c,d</xref>, Materials and methods: Drift alignment). We found that drift is indeed aligned above chance to within-session neural population variability. This suggests that the biological mechanisms underlying drift are in part systematic and constrained by a requirement to keep a consistent population code over time. In comparison, the projection of drift onto behavior-coding directions was small, but still above chance. This is consistent with the hypothesis that ongoing compensation might be needed for a long-term stable readout.</p><fig-group><fig id="fig4" position="float"><label>Figure 4.</label><caption><title>A slowly-varying component of drift disrupts the behavior-coding subspace.</title><p>(<bold>a</bold>) The small error increase when training concatenated decoders (<xref ref-type="fig" rid="fig3">Figure 3</xref>) suggests that plasticity is needed to maintain good decoding in the long term. We assess the minimum rate for this plasticity by training a separate decoder <inline-formula><mml:math id="inf10"><mml:msub><mml:mi>M</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math></inline-formula> for each day, while minimizing the change in weights across days. The parameter λ controls how strongly we constrain weight changes across days (the inset equation reflects the objective function to be minimized; Methods). (<bold>b</bold>) Decoders trained on all days (cyan) perform better than chance (red), but worse than single-day decoders (ochre). Black traces illustrate the plasticity-accuracy trade-off for adaptive decoding. Modest weight changes per day are sufficient to match the performance of single-day decoders (Boxes: inner 50% of data, horizontal lines: median, whiskers: 5–95<sup>th</sup>%). (<bold>c</bold>) Across days, the mean neural activity associated with a particular phase of the task changes (<inline-formula><mml:math id="inf11"><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>μ</mml:mi></mml:mrow></mml:math></inline-formula>). We define an alignment measure <inline-formula><mml:math id="inf12"><mml:mi>ρ</mml:mi></mml:math></inline-formula> (Materials and methods) to assess the extent to which these changes align with behavior-coding directions in the population code (blue) verses directions of noise correlations (ochre). (<bold>d</bold>) Drift is more aligned with noise (ochre) than it is with behavior-coding directions (blue). Nevertheless, drift overlaps this behavior-coding subspace much more than chance (grey; dashed line: 95% Monte-Carlo sample). Each box reflects the distribution over all maze locations, with all consecutive pairs of sessions combined.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-51121-fig4-v2.tif"/></fig><fig id="fig4s1" position="float" specific-use="child-fig"><label>Figure 4—figure supplement 1.</label><caption><title>Concatenated decoder performance depends on the rank of the drift.</title><p>sufficiently low-rank drift resembles the data in terms of the performance of a concatenated decoder. Here, we further explore the null model introduced in <xref ref-type="fig" rid="fig3">Figure 3d</xref>. As in <xref ref-type="fig" rid="fig3">Figure 3d</xref>, we simulated random drift in the neural readout. We matched the null model to the statistics of neural activity, the within-day decoding accuracy, and the performance degradation when generalizing between days. In these simulations, we explore the scenario that the drift may be confined to a (randomly-selected) low-dimensional subspace. We evaluated a range of dimensionalities for the drift subspace (horizontal axes), and evaluated the performance of a concatenated decoder on simulated data. While unconstrained drift prevents the identification of a concatenated decoder with good performance (<xref ref-type="fig" rid="fig3">Figure 3d</xref>), sufficiently constrained drift does not. In these simulations, we found that constraining drift to a subspace of rank 14–26 (red vertical lines) led to similar performance as the data (dashed horizontal lines) in all subjects except for mouse 5. We speculate that this is because Mouse five had limited data and poor generalization of single-day decoders over time, but other scenarios are possible. Black traces reflect the mean over 20 random simulations, and shaded regions reflect one standard deviation.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-51121-fig4-figsupp1-v2.tif"/></fig></fig-group><p>To quantify the systematic nature of drift further, we modified the null model to make drift partially systematic by constraining the null-model drift within a low rank subspace (<xref ref-type="fig" rid="fig4s1">Figure 4—figure supplement 1</xref>). This reflects a scenario in which only a few components of the population code change over time. We found that the performance of a concatenated decoder for low-rank drift better approximated experimental data. For three of the four mice we could match concatenated decoder performance when the dimension of the drift process was constrained within a range of 14–26, a relatively small fraction (around 20%) of the components of the full population.</p></sec><sec id="s1-3"><title>Biologically achievable rates of plasticity can compensate drift, independent of specific learning rules</title><p>Together, these analyses show that the observed dynamics of drift favor a fixed linear readout above what would be expected for random drift. However, our results also show that a substantial component of drift cannot be confined to the null space of a fixed downstream linear readout. We asked how much ongoing weight change would be needed to achieve the performance of single-day decoders while minimizing day-to-day changes in decoding weights. We first approached this without assuming a specific plasticity rule, by simultaneously optimizing linear decoders for all recorded days while penalizing the magnitude of weight change between sessions (<xref ref-type="fig" rid="fig4">Figure 4a</xref>, Materials and methods: Concatenated and constrained analyses). By varying the magnitude of the weight change penalty we interpolated between the concatenated decoder (no weight changes) and the single-day decoders (optimal weights for each day). The result of this is shown in <xref ref-type="fig" rid="fig4">Figure 4b</xref>. Performance improves rapidly once small weight changes are permitted (∼12–25% per session). Thus, relatively modest amounts of synaptic plasticity might suffice to keep encoding consistent with changes in representation, provided a mechanism exists to implement appropriate weight changes.</p></sec><sec id="s1-4"><title>A biologically plausible local learning rule can compensate drift</title><p>The results in <xref ref-type="fig" rid="fig4">Figure 4b</xref> suggest that modest amounts of synaptic plasticity could compensate for drift, but do not suggest a biologically plausible mechanism for this compensation. Could neurons track slow reconfiguration using locally available signals in practice? To test this, we used an adaptive linear neuron model based on the least mean square learning (LMS) rule (<xref ref-type="bibr" rid="bib40">Widrow and Hoff, 1960</xref>; <xref ref-type="bibr" rid="bib41">Widrow and Hoff, 1962</xref>) (Materials and methods). This algorithm is biologically plausible because it only requires each synapse to access its current weight and recent prediction error (<xref ref-type="fig" rid="fig5">Figure 5a</xref>, Materials and methods: Online LMS algorithm).</p><fig-group><fig id="fig5" position="float"><label>Figure 5.</label><caption><title>Local, adaptive decoders can track representational drift over multiple days.</title><p>(<bold>a</bold>) The Least Mean-Squares (LMS) algorithm learns to linearly decode a target kinematic variable based on error feedback. Continued online learning can track gradual reconfiguration in population representations. (<bold>b</bold>) As the average weight change per day (horizontal axis) increases, the average decoding error (vertical axis) of the LMS algorithm improves, shown here for three kinematic variables (Mouse 4, 144 units, 10 sessions over 12 days; Methods: methods:lms). (Dashed line: error for a decoder trained on only the previous session without online learning; Solid line: performance of a decoder trained over all testing days). As the rate of synaptic plasticity is increased, LMS achieves error rates comparable to the concatenated decoder. (<bold>c</bold>) Example LMS decoding results for three kinematic variables. Ground truth is plotted in black, and LMS estimate in color. Sample traces are taken from day six. Dashed traces indicate the performance of the decoder without ongoing re-training. (<bold>d</bold>) (top) Average percent weight-change per session for online decoding of forward position (learning rate: 4 × 10<sup>-4</sup>/sample). The horizontal axis reflects time, with vertical bars separating days. The average weight change is 10.2% per session. To visualize %<inline-formula><mml:math id="inf13"><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>w</mml:mi></mml:mrow></mml:math></inline-formula> continuously in this plot, we use a sliding difference with a window reflecting the average number of samples per session. (bottom) LMS (black) performs comparably to the concatenated decoder (cyan) (LMS mean absolute error of 0.47 m is within ≤ 3% of concatenated decoder error). Without ongoing learning, the performance of the initial decoder degrades (orange). Error traces have been averaged over ten minute intervals within each session. Discontinuities between days reflect day-to-day variability and suggest a small transient increase in error for LMS decoding at the start of each day.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-51121-fig5-v2.tif"/></fig><fig id="fig5s1" position="float" specific-use="child-fig"><label>Figure 5—figure supplement 1.</label><caption><title>Online learning with LMS: additional subjects.</title><p>LMS results for mice 1, 3, 4, and 5. Results of applying the online LMS algorithm with a learning rate of 4 × 10<sup>-4</sup>/sample. Errors reflect the mean absolute error over ten minute intervals. LMS (black) achieves errors comparable to an offline decoder trained on all sessions ('concatenated’, blue), and outperforms a fixed decoder trained on the initial day (red). Only times within a trial were used for training. For the LMS algorithm, we observed inter-day weight changes of 7.6-10.4%, consistent with observed rates of change in the volume of dendritic spines in other studies. We present two spans of time from Mouse 3, reflecting two largely non-overlapping populations of tracked neurons on non-overlapping spans of days.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-51121-fig5-figsupp1-v2.tif"/></fig><fig id="fig5s2" position="float" specific-use="child-fig"><label>Figure 5—figure supplement 2.</label><caption><title>The plasticity level required to track drift varies with population size.</title><p>Smaller populations require more plasticity to achieve target error levels. These plots show the daily weight changes required to track drift when decoding forward positions as a function of population size for mice 3 and 4. Smaller populations require more plasticity. The target error (M3: 0.68 m, M4: 0.48 m) was set based on the performance of LMS on the full population (M3: 114 neurons, M4: 134 neurons). For each sub-population size, 50 random sub-populations were drawn, and the learning rate was optimized to achieve the target error level. Shaded regions reflect the inner 95<sup>th</sup> percentile over all sampled sub-populations. Weight change was assessed as the weight change between the end of consecutive sessions and normalized by the overall average weight magnitude.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-51121-fig5-figsupp2-v2.tif"/></fig><fig id="fig5s3" position="float" specific-use="child-fig"><label>Figure 5—figure supplement 3.</label><caption><title>Extrapolation to larger populations.</title><p>The plasticity required to achieve a fixed error level decreases for larger populations. Typically, the number of inputs to a neuron is much larger than the ∼100 neurons observed here. The ∼10% weight change per day reported by LMS could therefore over-estimate of plasticity needed to track drift. To address this, we combined data from multiple mice to extend the LMS analysis to a synthetic population of 1238 cells over six sessions. Trials were matched based on the current and previous cue, and converted to pseudotime based on the fraction of the maze completed between 0 and 100%. We allowed up to two-day recording gaps between consecutive sessions from the same mouse. These synthetic populations are not equivalent to large recordings from a single mouse, but nevertheless reveal how plasticity scales with population size. We found that larger populations could achieve the same performance as ∼100 cells with a ∼4% weight change per day. (<bold>a</bold>) Trial pseudotime (% of trial complete; black) can be decoded from a synthetic pooled population (1238 cells) using the LMS algorithm (violet: prediction). (<bold>b</bold>) Similarly to the single-subject results, LMS tracks changes in the population code over time. In this case, a learning rate of 8 × 10<sup>-4</sup>/sample achieved comparable error to a concatenated decoder. The larger population permits better decoding error of ∼5%, compared to the ∼15 - 20% error in forward position decoded from ∼100 neurons. (<bold>c</bold>) As population size increases, both the weight magnitudes (left) and the rates of weight change (middle) decrease. Small populations could not achieve the error rates possible using the full population, even with very large learning rates. We therefore set the target error a bit higher, at 13% chance level. This is comparable to the error rates seen in individual mice using ∼100 cells. Overall, the required percentage weight change decreased for larger populations (right).</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-51121-fig5-figsupp3-v2.tif"/></fig></fig-group><p><xref ref-type="fig" rid="fig5">Figure 5b</xref> shows that this online learning rule achieved decoding performance comparable to the offline constrained decoders. Over the timespan of the data, LMS allows a linear decoder to track representational drift observed (<xref ref-type="fig" rid="fig5">Figure 5c</xref>), exhibiting weight changes of ∼10%/day across all animals (learning rate 4 × 10<sup>-4</sup>/sample, <xref ref-type="fig" rid="fig5s1">Figure 5—figure supplement 1</xref>). These results suggest that small weight changes could track representational drift in practice. In contrast, we found that LMS struggled to match the unconstrained drift of the null model explored in <xref ref-type="fig" rid="fig3">Figure 3d</xref>. Calibrating the LMS learning rate on the null model to match the mean performance seen on the true data required an average weight change of 93% per day. In comparison, matching the average percent weight change per day of 10%, the null model produced a normalized mean-squared-error of 1.3 <inline-formula><mml:math id="inf14"><mml:msup><mml:mi>σ</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula> (averaged over all mice), worse than chance. This further indicates that drift is highly structured, facilitating online compensation with a local learning rule.</p><p>We stress that modeling assumptions mean that these results are necessarily a proxy for the rates of synaptic plasticity that are observed in vivo. Nonetheless, we believe these calculations are conservative. We were restricted to a sample of ∼100–200 neurons, at least an order of magnitude less than the typical number of inputs to a pyramidal cell in cortex. The per-synapse magnitude of plasticity necessarily increases when smaller subsets are used for a readout (<xref ref-type="fig" rid="fig5s2">Figure 5—figure supplement 2</xref>). One would therefore expect lower rates of plasticity for larger populations. Indeed, when we combined neurons across mice into a large synthetic population (1238 cells), we found that the plasticity required to achieve target error asymptotes at less than 4% per day (<xref ref-type="fig" rid="fig5s3">Figure 5—figure supplement 3</xref>). Together, these results show a conservatively achievable bound on the rate of plasticity required to compensate drift in a biologically plausible model.</p></sec></sec><sec id="s2" sec-type="discussion"><title>Discussion</title><p>Several theories have been proposed for how stable behavior could be maintained despite ongoing changes in connectivity and neural activity. Here, we found that representational drift occurred in both coding and non-coding subspaces. On a timescale of a few days, redundancy in the neural population could accommodate a significant component of drift, assuming a biological mechanism exists for establishing appropriate readout weights. Simulations suggested that the existence of this approximately stable subspace were not simply a result of population redundancy, since random diffusive drift quickly degraded a downstream readout. Drift being confined to a low-dimensional subspace is one scenario that could give rise to this, although we do not exclude other possibilities. Nevertheless, a non-negligible component of drift resides outside the null space of a linear encoding subspace, implying that drift will eventually destroy any fixed-weight readout.</p><p>However, we showed that this destructive component of drift could be compensated with small and biologically realistic changes in synaptic weights, independently of any specific learning rule. Furthermore, we provided an example of a simple and biologically plausible learning rule that can achieve such compensation over long timescales with modest rates of plasticity. If our modeling results are taken literally, this would suggest that a single unit with connections to ∼100 PPC neurons can accurately decode task information with modest changes in synaptic weights over many days. This provides a concrete and quantitative analysis of the implications of drift on synaptic plasticity and connectivity. Together, our findings provide some of the first evidence from experimental data that representational drift could be compatible with long-term memories of learned behavioral associations.</p><p>A natural question is whether a long-term stable subspace is supported by an unobserved subset of neurons that have stable tuning (<xref ref-type="bibr" rid="bib7">Clopath et al., 2017</xref>). We do not exclude this possibility because we measured a subset of the neural population. However, over multiple samples from different animals our analyses consistently suggest that drift will reconfigure the code entirely over months. Specifically, we found that past reliability in single cells is no guarantee of future stability. This, combined with an abundance of highly-informative cells on a single day, contributes to poor (fixed) decoder generalization, because previously reliable cells eventually drop out or change their tuning. Consistent with this, studies have shown that connectivity in mammalian cortex is surprisingly dynamic. Connections between neurons change on a timescale of hours to days with a small number of stable connections (<xref ref-type="bibr" rid="bib16">Holtmaat et al., 2005</xref>; <xref ref-type="bibr" rid="bib26">Minerbi et al., 2009</xref>; <xref ref-type="bibr" rid="bib17">Holtmaat and Svoboda, 2009</xref>; <xref ref-type="bibr" rid="bib4">Attardo et al., 2015</xref>).</p><p>We stress that the kind of reconfiguration observed in PPC is not seen in all parts of the brain; primary sensory and motor cortices can show remarkable stability in neural representations over time (<xref ref-type="bibr" rid="bib12">Gallego et al., 2020</xref>). However, even if stable representations exist elsewhere in the brain, PPC still must communicate with these areas. We suggest that a component of ongoing plasticity maintains congruent representations across different neural circuits. Such maintenance would be important in a distributed, adaptive system like the brain, in which multiple areas learn in parallel. How this is achieved is the subject of intense debate (<xref ref-type="bibr" rid="bib33">Rule et al., 2019</xref>). We hypothesize that neural circuits have continual access to two kinds of error signals. One kind should reflect mismatch between internal representations and external task variables, and another should reflect prediction mismatch between one neural circuit and another. Our study therefore motivates new experiments to search for neural correlates of error feedback between areas, and suggests further theoretical work to explore the consequences of such feedback.</p></sec><sec id="s3" sec-type="materials|methods"><title>Materials and methods</title><sec id="s3-1"><title>Data acquisition</title><p>The behavioral and two-photon calcium imaging data analyzed here were provided by the Harvey lab. Details regarding the experimental subjects and methods are provided in <xref ref-type="bibr" rid="bib9">Driscoll et al., 2017</xref>.</p></sec><sec id="s3-2"><title>Virtual reality task</title><p>Details of the virtual reality environment, training protocol, and fixed association navigation task are described in <xref ref-type="bibr" rid="bib9">Driscoll et al., 2017</xref>. In brief, virtual reality environments were constructed and operated using the MATLAB-based ViRMEn software (Virtual Reality Mouse Engine) <xref ref-type="bibr" rid="bib14">Harvey et al., 2012</xref>. Data were obtained from mice that had completed the 4–8 week training program for the two-alternative forced choice T-maze task. The length of the virtual reality maze was fixed to have a total length of 4.5 m. The cues were patterns on the walls (black with white dots or white with black dots), and were followed by a gray striped ‘cue recall’ segment (2.25 m long) that was identical across trial types.</p></sec><sec id="s3-3"><title>Data preparation and pre-processing</title><p>Raw Ca<sup>2+</sup> fluorescence videos (sample rate=5.3Hz) were corrected for motion artefacts, and individual sources of Ca<sup>2+</sup> fluorescence were identified and extracted (<xref ref-type="bibr" rid="bib9">Driscoll et al., 2017</xref>). Processed data consisted of normalized Ca<sup>2+</sup> fluorescence transients ('<inline-formula><mml:math id="inf15"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>F</mml:mi></mml:mrow><mml:mo>/</mml:mo><mml:mi>F</mml:mi></mml:mrow></mml:math></inline-formula>') and behavioral variables (mouse position, view angle, and velocity). Inter-trial intervals (ITIs) were removed for all subsequent analyses. For offline decoding, we considered only correct trials, and all signals were centered to zero-mean on each trial as a pre-processing step.</p><p>When considering sequences of days, we restricted analysis to units that were continuously tracked over all days. For <xref ref-type="fig" rid="fig3">Figures 3</xref> and <xref ref-type="fig" rid="fig4">4</xref>, we use the following data: M1: seven sessions, 15 days, 101 neurons; M3: 10 sessions, 13 days, 114 neurons; M4: 10 sessions, 11 days, 146 neurons; M5: seven sessions, 7 days, 112 neurons. We allowed up to two-day recording gaps between consecutive sessions from the same mouse.</p></sec><sec id="s3-4"><title>Quantification and statistical analysis</title><sec id="s3-4-1"><title>Decoding analyses</title><p>We decoded kinematics time-series <inline-formula><mml:math id="inf16"><mml:mrow><mml:mi mathvariant="bold">𝐱</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>T</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="inf17"><mml:mi>T</mml:mi></mml:math></inline-formula> time-points from the vector of instantaneous neural population activity <inline-formula><mml:math id="inf18"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="bold">z</mml:mi></mml:mrow><mml:mrow><mml:mo>=</mml:mo></mml:mrow><mml:mo fence="false" stretchy="false">{</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">}</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula>, using a linear decoder with a fixed set of weights <inline-formula><mml:math id="inf19"><mml:mi>M</mml:mi></mml:math></inline-formula>, that is <inline-formula><mml:math id="inf20"><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold">𝐱</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mrow><mml:msup><mml:mi>M</mml:mi><mml:mo>⊤</mml:mo></mml:msup><mml:mo>⁢</mml:mo><mml:mi mathvariant="bold">𝐳</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. We used the ordinary least-squares (OLS) solution for <inline-formula><mml:math id="inf21"><mml:mi>M</mml:mi></mml:math></inline-formula>, which minimizes the squared (L2) prediction error <inline-formula><mml:math id="inf22"><mml:mrow><mml:mi>ε</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo>∥</mml:mo><mml:mrow><mml:mi mathvariant="bold">𝐱</mml:mi><mml:mo>-</mml:mo><mml:mrow><mml:msup><mml:mi>M</mml:mi><mml:mo>⊤</mml:mo></mml:msup><mml:mo>⁢</mml:mo><mml:mi mathvariant="bold">𝐳</mml:mi></mml:mrow></mml:mrow><mml:mo>∥</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula> over all time-points. For the ‘same-day’ analyses, we optimize a separate <inline-formula><mml:math id="inf23"><mml:msub><mml:mi>M</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math></inline-formula> for each day <inline-formula><mml:math id="inf24"><mml:mi>d</mml:mi></mml:math></inline-formula> (<xref ref-type="fig" rid="fig2">Figure 2</xref>), restricting analysis to sessions with at least 200 identified units. We assessed decoding performance using 10-fold cross-validation, and report the mean absolute error, defined as <inline-formula><mml:math id="inf25"><mml:mrow><mml:mo>⟨</mml:mo><mml:mrow><mml:mo>∣</mml:mo><mml:mrow><mml:mi mathvariant="bold">𝐱</mml:mi><mml:mo>-</mml:mo><mml:mover accent="true"><mml:mi mathvariant="bold">𝐱</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>∣</mml:mo></mml:mrow><mml:mo>⟩</mml:mo></mml:mrow></mml:math></inline-formula>. Here, <inline-formula><mml:math id="inf26"><mml:mrow><mml:mo>∣</mml:mo><mml:mo>.</mml:mo><mml:mo>∣</mml:mo></mml:mrow></mml:math></inline-formula> denotes the element-wise absolute value, and <inline-formula><mml:math id="inf27"><mml:mrow><mml:mo stretchy="false">⟨</mml:mo><mml:mo>.</mml:mo><mml:mo stretchy="false">⟩</mml:mo></mml:mrow></mml:math></inline-formula> denotes expectation.</p></sec></sec><sec id="s3-5"><title>Best K-Subset ranking</title><p>For <xref ref-type="fig" rid="fig2">Figure 2d</xref>, we ranked cells in order of explained variance using a greedy algorithm. Starting with the most predictive cell, we iteratively added the next cell that minimized the MSE under ten-fold cross-validated linear decoding. To accelerate this procedure, we pre-computed the mean and covariance structure for training and testing datasets. MSE fits and decoding performance can be computed directly from these summary statistics, accelerating the several thousand evaluations required for greedy selection. We added L2 regularization to this analysis by adding a constant <inline-formula><mml:math id="inf28"><mml:mrow><mml:mi>λ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>I</mml:mi></mml:mrow></mml:math></inline-formula> to the covariance matrix of the neural data. The optimal regularization strength (λ = 10<sup>-4</sup> to 10<sup>-3</sup>) slightly reduced decoding error, but did not alter the ranking of cells.</p></sec><sec id="s3-6"><title>Extrapolation via GP regression</title><p>To qualitatively assess whether decoding performance saturates with the available number of recorded neurons, we computed decoding performance on a sequence of random subsets of the population of various sizes (<xref ref-type="fig" rid="fig2">Figure 2c,d</xref>). Results for all analyses are reported as the mean over 20 randomly-drawn neuronal sub-populations, and over all sessions that had at least <inline-formula><mml:math id="inf29"><mml:mrow><mml:mi>N</mml:mi><mml:mo>=</mml:mo><mml:mn>150</mml:mn></mml:mrow></mml:math></inline-formula> units. Gaussian process (GP) regression was implemented in Python, using a combination of a Matérn kernel and an additive white noise kernel. Kernel parameters were optimized via maximum likelihood (Scikit-learn, <xref ref-type="bibr" rid="bib31">Pedregosa et al., 2011</xref>).</p></sec><sec id="s3-7"><title>Concatenated and constrained analyses</title><p>For both the concatenated (<xref ref-type="fig" rid="fig3">Figure 3b,e</xref>) and constrained analyses (<xref ref-type="fig" rid="fig4">Figure 4a,b</xref>), we used the set of identified neurons included in all sessions considered. In the concatenated analyses, we solved for a single decoder <inline-formula><mml:math id="inf30"><mml:msub><mml:mi>M</mml:mi><mml:mi>c</mml:mi></mml:msub></mml:math></inline-formula> for all days:<disp-formula id="equ1"><label>(1)</label><mml:math id="m1"><mml:mrow><mml:mrow><mml:mi>ε</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>d</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:msup><mml:mrow><mml:mo>∥</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="bold">𝐱</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mrow><mml:msubsup><mml:mi>M</mml:mi><mml:mi>c</mml:mi><mml:mo>⊤</mml:mo></mml:msubsup><mml:mo>⁢</mml:mo><mml:msub><mml:mi mathvariant="bold">𝐳</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:mrow></mml:mrow><mml:mo>∥</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>where <inline-formula><mml:math id="inf31"><mml:mi>ε</mml:mi></mml:math></inline-formula> denotes the quadratic objective function to be minimized. In the constrained analysis, we optimized a series of different weights <inline-formula><mml:math id="inf32"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mi mathvariant="bold">M</mml:mi></mml:mrow><mml:mrow><mml:mo>=</mml:mo></mml:mrow><mml:mo fence="false" stretchy="false">{</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mrow><mml:mi>D</mml:mi></mml:mrow></mml:msub><mml:mo fence="false" stretchy="false">}</mml:mo></mml:mrow></mml:mstyle></mml:math></inline-formula> for each day <inline-formula><mml:math id="inf33"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>d</mml:mi><mml:mrow><mml:mo>∈</mml:mo></mml:mrow><mml:mn>1...</mml:mn><mml:mi>D</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula>, and added an adjustable L2 penalty <inline-formula><mml:math id="inf34"><mml:mi>λ</mml:mi></mml:math></inline-formula> on the change in weights across days. This problem reduces to the ‘same-day’ analysis for <inline-formula><mml:math id="inf35"><mml:mrow><mml:mi>λ</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>, and approaches the concatenated decoder as <inline-formula><mml:math id="inf36"><mml:mi>λ</mml:mi></mml:math></inline-formula> approaches 1:<disp-formula id="equ2"><label>(2)</label><mml:math id="m2"><mml:mrow><mml:mrow><mml:mi>ε</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mi>λ</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>d</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:msup><mml:mrow><mml:mo>∥</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="bold">𝐱</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mrow><mml:msubsup><mml:mi>M</mml:mi><mml:mi>d</mml:mi><mml:mo>⊤</mml:mo></mml:msubsup><mml:mo>⁢</mml:mo><mml:msub><mml:mi mathvariant="bold">𝐳</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:mrow></mml:mrow><mml:mo>∥</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mi>λ</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:munderover><mml:mo largeop="true" movablelimits="false" symmetric="true">∑</mml:mo><mml:mrow><mml:mi>d</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munderover><mml:msup><mml:mrow><mml:mo>∥</mml:mo><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mrow><mml:mi>d</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:mrow><mml:mo>∥</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mrow></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>For the purposes of the constrained analysis, missing days were ignored and the remaining days treated as if they were contiguous. Two sessions were missing from the 10 and 14 day spans for mice 3 and 4, respectively (<xref ref-type="fig" rid="fig4">Figure 4b</xref>). <xref ref-type="fig" rid="fig3">Figure 3c</xref> also shows the expected performance of a concatenated decoder for completely unrelated neural codes. To assess this, we permuted neuronal identities within individual sessions, so that each day uses a different ”code’.</p></sec><sec id="s3-8"><title>Null model</title><p>We developed a null model to assess whether the performance of the concatenated decoder was consistent with random drift. For this, we matched the amount of day-to-day drift based on the rate at which single-day decoders degrade. We also sampled neural states from the true data to preserve sparsity and correlation statistics. The null model related neural activity to a ’fake’ observable readout (e.g. mouse position) via an arbitrary linear mapping. The null model changed from day to day, reflecting drift in the neural code. The fidelity of single day and across day decoders in inferring a readout from the null model was matched to the true data.</p><p>For each animal, we take the matrix <inline-formula><mml:math id="inf37"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>z</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>×</mml:mo><mml:mi>d</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula> of mean-centered neural activity on day one, where <inline-formula><mml:math id="inf38"><mml:mi>n</mml:mi></mml:math></inline-formula> represents the number of recorded neurons and <inline-formula><mml:math id="inf39"><mml:mi>d</mml:mi></mml:math></inline-formula> represents the number of datapoints. We relate this matrix to pseudo-observations of mouse position <inline-formula><mml:math id="inf40"><mml:mi>z</mml:mi></mml:math></inline-formula> via a null model of the form <inline-formula><mml:math id="inf41"><mml:mrow><mml:msub><mml:mi>z</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:msubsup><mml:mi>M</mml:mi><mml:mi>r</mml:mi><mml:mo>⊤</mml:mo></mml:msubsup><mml:mo>⁢</mml:mo><mml:mi>z</mml:mi></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>ϵ</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="inf42"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msubsup><mml:mi>M</mml:mi><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">⊤</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:msub><mml:mi>ϵ</mml:mi><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>×</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula>. Note that <inline-formula><mml:math id="inf43"><mml:mi>r</mml:mi></mml:math></inline-formula> indexes days. The vector <inline-formula><mml:math id="inf44"><mml:msub><mml:mi>ϵ</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:math></inline-formula> is generated as scaled i.i.d. Gaussian noise. We scale <inline-formula><mml:math id="inf45"><mml:msub><mml:mi>ϵ</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:math></inline-formula> such that the accuracy of a linear decoder trained on the data <inline-formula><mml:math id="inf46"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> matches the average (over days) accuracy of a single-day decoder trained on the true data.</p><p>Next, we consider the choice of the randomly-drifting readout, <inline-formula><mml:math id="inf47"><mml:msub><mml:mi>M</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:math></inline-formula>. On day one, <inline-formula><mml:math id="inf48"><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math></inline-formula> is generated as a vector of uniform random variables on <inline-formula><mml:math id="inf49"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>. Given <inline-formula><mml:math id="inf50"><mml:msub><mml:mi>M</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:math></inline-formula>, we desire an <inline-formula><mml:math id="inf51"><mml:msub><mml:mi>M</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:math></inline-formula> that satisfies.</p><list list-type="bullet"><list-item><p><inline-formula><mml:math id="inf52"><mml:mrow><mml:msub><mml:mrow><mml:mo>∥</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>∥</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mo>∥</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>∥</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><p>The expected coefficient of multiple correlation of <inline-formula><mml:math id="inf53"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:msubsup><mml:mi>M</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>⊤</mml:mo></mml:msubsup><mml:mo>⁢</mml:mo><mml:mi>z</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> against the predictive model <inline-formula><mml:math id="inf54"><mml:mrow><mml:msubsup><mml:mi>M</mml:mi><mml:mi>r</mml:mi><mml:mo>⊤</mml:mo></mml:msubsup><mml:mo>⁢</mml:mo><mml:mi>z</mml:mi></mml:mrow></mml:math></inline-formula> (between day <inline-formula><mml:math id="inf55"><mml:msup><mml:mi>R</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math></inline-formula>) matches the average (over days) of the equivalent statistic generated from the true data.</p></list-item></list><p>To do this, we first generate a candidate <inline-formula><mml:math id="inf56"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:msubsup><mml:mi>M</mml:mi><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msubsup><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>×</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula> as a vector of i.i.d. white noise. The components of <inline-formula><mml:math id="inf57"><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:msubsup><mml:mi>M</mml:mi><mml:mi>r</mml:mi><mml:mo>′</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula> orthogonal and parallel to <inline-formula><mml:math id="inf58"><mml:msub><mml:mi>M</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:math></inline-formula> are then scaled so that <inline-formula><mml:math id="inf59"><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> satisfies the constraints above.</p><p>In <xref ref-type="fig" rid="fig4s1">Figure 4—figure supplement 1, a</xref> modification of the null model that confined inter-day model drift to a predefined subspace was used. Before simulating the null model over days, we randomly chose <inline-formula><mml:math id="inf60"><mml:mi>k</mml:mi></mml:math></inline-formula> orthogonal basis vectors, representing a <inline-formula><mml:math id="inf61"><mml:mi>k</mml:mi></mml:math></inline-formula>-dimensional subspace. We then searched for a candidate <inline-formula><mml:math id="inf62"><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:msubsup><mml:mi>M</mml:mi><mml:mi>r</mml:mi><mml:mo>′</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula>, on each inter-day interval, that was representable as a weighted sum of these basis vectors. This requirement was in addition to those previously posed. Finding such a <inline-formula><mml:math id="inf63"><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:msubsup><mml:mi>M</mml:mi><mml:mi>r</mml:mi><mml:mo>′</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula> corresponds to solving a quadratically-constrained quadratic program. This is non-convex, and thus a solution will not necessarily be found. However, solutions were always found in practice. We used unit Gaussian random variables as our initial guesses for each component of <inline-formula><mml:math id="inf64"><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:msubsup><mml:mi>M</mml:mi><mml:mi>r</mml:mi><mml:mo>′</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula>, before solving the quadratic program using the IPOPT toolbox (<xref ref-type="bibr" rid="bib39">Wächter and Biegler, 2006</xref>).</p></sec><sec id="s3-9"><title>Drift alignment</title><p>We examine how much drift aligns with noise correlations verses directions of neural activity that vary with the task ('behavior-coding directions’). We define an alignment statistic <inline-formula><mml:math id="inf65"><mml:mi>ρ</mml:mi></mml:math></inline-formula> that reflects how much drift projects onto a given subspace (i.e. noise vs. behavior). We normalize <inline-formula><mml:math id="inf66"><mml:mi>ρ</mml:mi></mml:math></inline-formula> so that 0 reflects chance-level alignment and one reflects perfect alignment of the drift with the largest eigenvector of a given subspace (e.g. the principal eigenvector of the noise covariance).</p><p>Let <inline-formula><mml:math id="inf67"><mml:mrow><mml:mi>z</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> denote the neural population activity, where <inline-formula><mml:math id="inf68"><mml:mi>x</mml:mi></mml:math></inline-formula> reflects a normalized measure of maze location, akin to trial pseudotime. Define drift <inline-formula><mml:math id="inf69"><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:msub><mml:mi>μ</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> as the change in the mean neural activity <inline-formula><mml:math id="inf70"><mml:mrow><mml:msub><mml:mi>μ</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> across days. We examine how much drift aligns with noise correlations verses directions of neural activity that vary with task pseudotime (<inline-formula><mml:math id="inf71"><mml:mrow><mml:mrow><mml:mrow><mml:mi>d</mml:mi><mml:mo>⁢</mml:mo><mml:mi>z</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>/</mml:mo><mml:mi>d</mml:mi></mml:mrow><mml:mo>⁢</mml:mo><mml:mi>x</mml:mi></mml:mrow></mml:math></inline-formula>).</p><p>To measure the alignment of a drift vector <inline-formula><mml:math id="inf72"><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>μ</mml:mi></mml:mrow></mml:math></inline-formula> with the distribution of inter-trial variability (i.e. noise), we consider the trial-averaged mean µ and covariance <inline-formula><mml:math id="inf73"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math></inline-formula> of the neural activity (log calcium-fluorescence signals filtered between 0.03 and .3 Hz and z-scored), conditioned on trial location and the current/previous cue direction. We use the mean squared magnitude of the dot product between the change in trial-conditioned means between days (<inline-formula><mml:math id="inf74"><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>μ</mml:mi></mml:mrow></mml:math></inline-formula>), with the directions of inter-trial variability (<inline-formula><mml:math id="inf75"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>z</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mi>z</mml:mi><mml:mo>-</mml:mo><mml:mrow><mml:mo>⟨</mml:mo><mml:mi>z</mml:mi><mml:mo>⟩</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>) on the first day, which is summarized by the product <inline-formula><mml:math id="inf76"><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:msup><mml:mi>μ</mml:mi><mml:mo>⊤</mml:mo></mml:msup><mml:mo>⁢</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo>⁢</mml:mo><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>μ</mml:mi></mml:mrow></mml:math></inline-formula>:<disp-formula id="equ3"><label>(3)</label><mml:math id="m3"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mtable columnalign="left left" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mo>⟨</mml:mo><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:msup><mml:mi>μ</mml:mi><mml:mrow><mml:mi mathvariant="normal">⊤</mml:mi></mml:mrow></mml:msup><mml:mi mathvariant="normal">Δ</mml:mi><mml:mi>z</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mo>⟩</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mo>⟨</mml:mo><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:msup><mml:mi>μ</mml:mi><mml:mrow><mml:mi mathvariant="normal">⊤</mml:mi></mml:mrow></mml:msup><mml:mi mathvariant="normal">Δ</mml:mi><mml:mi>z</mml:mi><mml:mi mathvariant="normal">Δ</mml:mi><mml:msup><mml:mi>z</mml:mi><mml:mrow><mml:mi mathvariant="normal">⊤</mml:mi></mml:mrow></mml:msup><mml:mi mathvariant="normal">Δ</mml:mi><mml:mi>μ</mml:mi></mml:mrow><mml:mo>⟩</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:msup><mml:mi>μ</mml:mi><mml:mrow><mml:mi mathvariant="normal">⊤</mml:mi></mml:mrow></mml:msup><mml:mrow><mml:mrow><mml:mo>⟨</mml:mo><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mi>z</mml:mi><mml:mi mathvariant="normal">Δ</mml:mi><mml:msup><mml:mi>z</mml:mi><mml:mrow><mml:mi mathvariant="normal">⊤</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mo>⟩</mml:mo></mml:mrow></mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mi>μ</mml:mi></mml:mrow></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:msup><mml:mi>μ</mml:mi><mml:mrow><mml:mi mathvariant="normal">⊤</mml:mi></mml:mrow></mml:msup><mml:mi mathvariant="normal">Σ</mml:mi><mml:mi mathvariant="normal">Δ</mml:mi><mml:mi>μ</mml:mi></mml:mrow><mml:mo>.</mml:mo></mml:mstyle></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mstyle></mml:math></disp-formula></p><p>To compare pairs of sessions with different amounts of drift and variability, we normalize the drift vector to unit length, and normalize the trial-conditioned covariance by its largest eigenvalue <inline-formula><mml:math id="inf77"><mml:msub><mml:mi>λ</mml:mi><mml:mtext>max</mml:mtext></mml:msub></mml:math></inline-formula>:<disp-formula id="equ4"><label>(4)</label><mml:math id="m4"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msubsup><mml:mi>ϕ</mml:mi><mml:mrow><mml:mtext>trial</mml:mtext></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:msup><mml:mi>μ</mml:mi><mml:mrow><mml:mi mathvariant="normal">⊤</mml:mi></mml:mrow></mml:msup><mml:mi mathvariant="normal">Σ</mml:mi><mml:mi mathvariant="normal">Δ</mml:mi><mml:mi>μ</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mi>μ</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup><mml:mo>⋅</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mstyle></mml:mstyle></mml:mrow></mml:mstyle></mml:math></disp-formula></p><p>The statistic <inline-formula><mml:math id="inf78"><mml:msub><mml:mi>ϕ</mml:mi><mml:mtext>trial</mml:mtext></mml:msub></mml:math></inline-formula> equals one if the drift aligns perfectly with the direction of largest inter-trial variability, and can be interpreted as the fraction of drift explained by the directions of noise correlations.</p><p>Random drift can still align with some directions by chance, and the mean squared dot-product between two randomly-oriented <inline-formula><mml:math id="inf79"><mml:mi>D</mml:mi></mml:math></inline-formula>-dimensional unit vectors scales as <inline-formula><mml:math id="inf80"><mml:mrow><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mi>D</mml:mi></mml:mrow></mml:math></inline-formula>. Accounting for the contribution from each dimension of <inline-formula><mml:math id="inf81"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math></inline-formula>, the expected chance alignment is therefore <inline-formula><mml:math id="inf82"><mml:mrow><mml:msubsup><mml:mi>ϕ</mml:mi><mml:mn>0</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mo>tr</mml:mo><mml:mo>⁡</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>/</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>D</mml:mi><mml:mo>⋅</mml:mo><mml:msub><mml:mi>λ</mml:mi><mml:mtext>max</mml:mtext></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. We normalize the alignment coefficient <inline-formula><mml:math id="inf83"><mml:msub><mml:mi>ρ</mml:mi><mml:mtext>noise</mml:mtext></mml:msub></mml:math></inline-formula> such that it is 0 for randomly oriented vectors, and one if the drift aligns perfectly with the direction of largest variability:<disp-formula id="equ5"><label>(5)</label><mml:math id="m5"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:msub><mml:mi>ρ</mml:mi><mml:mrow><mml:mtext>noise</mml:mtext></mml:mrow></mml:msub><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>ϕ</mml:mi><mml:mrow><mml:mtext>trial</mml:mtext></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>ϕ</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>ϕ</mml:mi><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mstyle></mml:mstyle></mml:mrow></mml:mstyle></mml:math></disp-formula></p><p>We define a similar alignment statistic <inline-formula><mml:math id="inf84"><mml:msub><mml:mi>ρ</mml:mi><mml:mtext>coding</mml:mtext></mml:msub></mml:math></inline-formula> to assess how drift aligns with directions of neural variability that encode location. We consider the root-mean-squared dot product between the drift <inline-formula><mml:math id="inf85"><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo><mml:mi>μ</mml:mi></mml:mrow></mml:math></inline-formula>, and the directions of neural activity (<inline-formula><mml:math id="inf86"><mml:mi>z</mml:mi></mml:math></inline-formula>) that vary with location (<inline-formula><mml:math id="inf87"><mml:mi>x</mml:mi></mml:math></inline-formula>) on a given trial, that is <inline-formula><mml:math id="inf88"><mml:mrow><mml:mrow><mml:msub><mml:mo>∇</mml:mo><mml:mi>x</mml:mi></mml:msub><mml:mo>⁡</mml:mo><mml:mi>z</mml:mi></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>:<disp-formula id="equ6"><label>(6)</label><mml:math id="m6"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mtable columnalign="left left" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mo>⟨</mml:mo><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:msup><mml:mi>μ</mml:mi><mml:mrow><mml:mi mathvariant="normal">⊤</mml:mi></mml:mrow></mml:msup><mml:msub><mml:mi mathvariant="normal">∇</mml:mi><mml:mrow><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mi>z</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mo>⟩</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:mtd><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mo>⟨</mml:mo><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:msup><mml:mi>μ</mml:mi><mml:mrow><mml:mi mathvariant="normal">⊤</mml:mi></mml:mrow></mml:msup><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi mathvariant="normal">∇</mml:mi><mml:mrow><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mi>z</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">]</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi mathvariant="normal">∇</mml:mi><mml:mrow><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mi>z</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mo stretchy="false">]</mml:mo><mml:mrow><mml:mi mathvariant="normal">⊤</mml:mi></mml:mrow></mml:msup><mml:mi mathvariant="normal">Δ</mml:mi><mml:mi>μ</mml:mi></mml:mrow><mml:mo>⟩</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:msup><mml:mi>μ</mml:mi><mml:mrow><mml:mi mathvariant="normal">⊤</mml:mi></mml:mrow></mml:msup><mml:mrow><mml:mo>⟨</mml:mo><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi mathvariant="normal">∇</mml:mi><mml:mrow><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mi>z</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">]</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi mathvariant="normal">∇</mml:mi><mml:mrow><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mi>z</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mo stretchy="false">]</mml:mo><mml:mrow><mml:mi mathvariant="normal">⊤</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mo>⟩</mml:mo></mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mi>μ</mml:mi></mml:mrow></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:msup><mml:mi>μ</mml:mi><mml:mrow><mml:mi mathvariant="normal">⊤</mml:mi></mml:mrow></mml:msup><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="normal">Σ</mml:mi><mml:mrow><mml:mi mathvariant="normal">∇</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>μ</mml:mi><mml:mrow><mml:mi mathvariant="normal">∇</mml:mi></mml:mrow></mml:msub><mml:msubsup><mml:mi>μ</mml:mi><mml:mrow><mml:mi mathvariant="normal">∇</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">⊤</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mi>μ</mml:mi></mml:mrow></mml:mstyle></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mstyle></mml:math></disp-formula></p><p>In contrast to the trial-to-trial variability statistic, this statistic depends on the second moment <inline-formula><mml:math id="inf89"><mml:mrow><mml:msub><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo>∇</mml:mo></mml:msub><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi>μ</mml:mi><mml:mo>∇</mml:mo></mml:msub><mml:mo>⁢</mml:mo><mml:msubsup><mml:mi>μ</mml:mi><mml:mo>∇</mml:mo><mml:mo>⊤</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="inf90"><mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mo>∇</mml:mo><mml:mi>x</mml:mi></mml:msub><mml:mo>⁡</mml:mo><mml:mi>z</mml:mi></mml:mrow><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>∼</mml:mo><mml:mrow><mml:mi class="ltx_font_mathcaligraphic">𝒩</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>μ</mml:mi><mml:mo>∇</mml:mo></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo>∇</mml:mo></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. We define a normalized <inline-formula><mml:math id="inf91"><mml:msubsup><mml:mi>ϕ</mml:mi><mml:mtext>coding</mml:mtext><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula> and <inline-formula><mml:math id="inf92"><mml:msub><mml:mi>ρ</mml:mi><mml:mtext>coding</mml:mtext></mml:msub></mml:math></inline-formula> similarly to <inline-formula><mml:math id="inf93"><mml:msubsup><mml:mi>ϕ</mml:mi><mml:mtext>trial</mml:mtext><mml:mn>2</mml:mn></mml:msubsup></mml:math></inline-formula> and <inline-formula><mml:math id="inf94"><mml:msub><mml:mi>ρ</mml:mi><mml:mtext>noise</mml:mtext></mml:msub></mml:math></inline-formula>. For the alignment of drift with behavior, we observed <inline-formula><mml:math id="inf95"><mml:mrow><mml:msub><mml:mi>ρ</mml:mi><mml:mtext>coding</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mi/></mml:mrow></mml:math></inline-formula> 0.11–0.24 (µ=0.15, σ=0.03), which was significantly above chance for all mice. In contrast, the 95<sup>th</sup> percentile for chance alignment (i.e. random drift) ranged from 0.06 to 0.10 (µ=0.07, σ=0.02). Drift aligned substantially more with noise correlations, with ρ=0.29–0.43 (µ=0.36, σ=0.04).</p></sec><sec id="s3-10"><title>Online LMS algorithm</title><p>The Least Mean-Squares (LMS) algorithm is an online approach to training and updating a linear decoder, and corresponds to stochastic gradient-descent (<xref ref-type="fig" rid="fig4">Figure 4a</xref>). The algorithm was originally introduced in <xref ref-type="bibr" rid="bib40">Widrow and Hoff, 1960</xref>; <xref ref-type="bibr" rid="bib41">Widrow and Hoff, 1962</xref>; <xref ref-type="bibr" rid="bib42">Widrow and Stearns, 1985</xref>. Briefly, LMS computes a prediction error for an affine decoder (i.e. a linear decoder with a constant offset feature or bias parameter) at every time-point, which is then used to update the decoding weights. We analyzed twelve contiguous sessions from mouse 4 (144 units in common), and initialized the decoder by training on the first two sessions using OLS.</p><p>By varying the learning rate, we obtained a trade-off (<xref ref-type="fig" rid="fig4">Figure 4b</xref>) between the rate of weight changes and the decoding error, with the most rapid learning rates exceeding the performance of offline (static) decoders. In <xref ref-type="fig" rid="fig4">Figure 4d</xref>, we selected an example with a learning rate of <inline-formula><mml:math id="inf96"><mml:mrow><mml:mi>η</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mn>4</mml:mn><mml:mo>×</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mo>-</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>. To provide a continuous visualization of the rate of weight change in <xref ref-type="fig" rid="fig4">Figure 4d</xref>, we used a sliding difference with a duration matching the average session length. This was normalized by the average weight magnitude to report percent weight change per day. In all other statistics, per-day weight change is assessed as the difference in weights at the end of each session, divided by the days between the sessions.</p></sec><sec id="s3-11"><title>Data and code availability</title><p>Datasets recorded in <xref ref-type="bibr" rid="bib9">Driscoll et al., 2017</xref> are available from the Dryad repository (<ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5061/dryad.gqnk98sjq">https://doi.org/10.5061/dryad.gqnk98sjq</ext-link>). The analysis code generated during this study is available on Github (<ext-link ext-link-type="uri" xlink:href="https://github.com/michaelerule/stable-task-informationgithub.com/michaelerule/stable-task-information">https://github.com/michaelerule/stable-task-information</ext-link>; copy archived at <ext-link ext-link-type="uri" xlink:href="https://github.com/elifesciences-publications/stable-task-information">https://github.com/elifesciences-publications/stable-task-information</ext-link>; <xref ref-type="bibr" rid="bib34">Rule, 2020</xref>).</p></sec></sec></body><back><ack id="ack"><title>Acknowledgements</title><p>We thank Fulvio Forni, Yaniv Ziv and Alon Rubin for in depth discussions. This work was supported by the Human Frontier Science Program (RGY0069), ERC Starting Grant (StG FLEXNEURO 716643) and grants from the NIH (NS089521, MH107620, NS108410)</p></ack><sec id="s4" sec-type="additional-information"><title>Additional information</title><fn-group content-type="competing-interest"><title>Competing interests</title><fn fn-type="COI-statement" id="conf1"><p>No competing interests declared</p></fn></fn-group><fn-group content-type="author-contribution"><title>Author contributions</title><fn fn-type="con" id="con1"><p>Conceptualization, Formal analysis, Validation, Investigation, Visualization, Methodology</p></fn><fn fn-type="con" id="con2"><p>Formal analysis, Investigation, Visualization, Methodology</p></fn><fn fn-type="con" id="con3"><p>Conceptualization, Validation, Investigation, Methodology</p></fn><fn fn-type="con" id="con4"><p>Data curation</p></fn><fn fn-type="con" id="con5"><p>Data curation, Funding acquisition, Project administration</p></fn><fn fn-type="con" id="con6"><p>Conceptualization, Supervision, Funding acquisition, Validation, Investigation, Visualization, Methodology, Project administration</p></fn></fn-group></sec><sec id="s5" sec-type="supplementary-material"><title>Additional files</title><supplementary-material id="transrepform"><label>Transparent reporting form</label><media mime-subtype="docx" mimetype="application" xlink:href="elife-51121-transrepform-v2.docx"/></supplementary-material></sec><sec id="s6" sec-type="data-availability"><title>Data availability</title><p>Datasets recorded in Driscoll et al., 2017, are available from the Dryad repository under the <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5061/dryad.gqnk98sjq">https://doi.org/10.5061/dryad.gqnk98sjq</ext-link>. The analysis code generated during this study is available on Github <ext-link ext-link-type="uri" xlink:href="https://github.com/michaelerule/stable-task-information">https://github.com/michaelerule/stable-task-information</ext-link> (copy archived at <ext-link ext-link-type="uri" xlink:href="https://github.com/elifesciences-publications/stable-task-information">https://github.com/elifesciences-publications/stable-task-information</ext-link>).</p><p>The following dataset was generated:</p><p><element-citation id="dataset1" publication-type="data" specific-use="isSupplementedBy"><person-group person-group-type="author"><name><surname>Driscoll</surname><given-names>LN</given-names></name></person-group><year iso-8601-date="2020">2020</year><data-title>Data from: Stable task information from an unstable neural population</data-title><source>Dryad Digital Repository</source><pub-id assigning-authority="Dryad" pub-id-type="doi">10.5061/dryad.gqnk98sjq</pub-id></element-citation></p></sec><ref-list><title>References</title><ref id="bib1"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ajemian</surname> <given-names>R</given-names></name><name><surname>D'Ausilio</surname> <given-names>A</given-names></name><name><surname>Moorman</surname> <given-names>H</given-names></name><name><surname>Bizzi</surname> <given-names>E</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>A theory for how sensorimotor skills are learned and retained in noisy and nonstationary neural circuits</article-title><source>PNAS</source><volume>110</volume><fpage>E5078</fpage><lpage>E5087</lpage><pub-id pub-id-type="doi">10.1073/pnas.1320116110</pub-id><pub-id pub-id-type="pmid">24324147</pub-id></element-citation></ref><ref id="bib2"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Andersen</surname> <given-names>RA</given-names></name><name><surname>Snyder</surname> <given-names>LH</given-names></name><name><surname>Bradley</surname> <given-names>DC</given-names></name><name><surname>Xing</surname> <given-names>J</given-names></name></person-group><year iso-8601-date="1997">1997</year><article-title>Multimodal representation of space in the posterior parietal cortex and its use in planning movements</article-title><source>Annual Review of Neuroscience</source><volume>20</volume><fpage>303</fpage><lpage>330</lpage><pub-id pub-id-type="doi">10.1146/annurev.neuro.20.1.303</pub-id><pub-id pub-id-type="pmid">9056716</pub-id></element-citation></ref><ref id="bib3"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Andersen</surname> <given-names>RA</given-names></name><name><surname>Buneo</surname> <given-names>CA</given-names></name></person-group><year iso-8601-date="2002">2002</year><article-title>Intentional maps in posterior parietal cortex</article-title><source>Annual Review of Neuroscience</source><volume>25</volume><fpage>189</fpage><lpage>220</lpage><pub-id pub-id-type="doi">10.1146/annurev.neuro.25.112701.142922</pub-id><pub-id pub-id-type="pmid">12052908</pub-id></element-citation></ref><ref id="bib4"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Attardo</surname> <given-names>A</given-names></name><name><surname>Fitzgerald</surname> <given-names>JE</given-names></name><name><surname>Schnitzer</surname> <given-names>MJ</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Impermanence of dendritic spines in live adult CA1 Hippocampus</article-title><source>Nature</source><volume>523</volume><fpage>592</fpage><lpage>596</lpage><pub-id pub-id-type="doi">10.1038/nature14467</pub-id><pub-id pub-id-type="pmid">26098371</pub-id></element-citation></ref><ref id="bib5"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Calton</surname> <given-names>JL</given-names></name><name><surname>Taube</surname> <given-names>JS</given-names></name></person-group><year iso-8601-date="2009">2009</year><article-title>Where am I and how will I get there from here? A role for posterior parietal cortex in the integration of spatial information and route planning</article-title><source>Neurobiology of Learning and Memory</source><volume>91</volume><fpage>186</fpage><lpage>196</lpage><pub-id pub-id-type="doi">10.1016/j.nlm.2008.09.015</pub-id><pub-id pub-id-type="pmid">18929674</pub-id></element-citation></ref><ref id="bib6"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Carmena</surname> <given-names>JM</given-names></name><name><surname>Lebedev</surname> <given-names>MA</given-names></name><name><surname>Henriquez</surname> <given-names>CS</given-names></name><name><surname>Nicolelis</surname> <given-names>MA</given-names></name></person-group><year iso-8601-date="2005">2005</year><article-title>Stable ensemble performance with single-neuron variability during reaching movements in primates</article-title><source>Journal of Neuroscience</source><volume>25</volume><fpage>10712</fpage><lpage>10716</lpage><pub-id pub-id-type="doi">10.1523/JNEUROSCI.2772-05.2005</pub-id><pub-id pub-id-type="pmid">16291944</pub-id></element-citation></ref><ref id="bib7"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Clopath</surname> <given-names>C</given-names></name><name><surname>Bonhoeffer</surname> <given-names>T</given-names></name><name><surname>Hübener</surname> <given-names>M</given-names></name><name><surname>Rose</surname> <given-names>T</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Variance and invariance of neuronal long-term representations</article-title><source>Philosophical Transactions of the Royal Society B: Biological Sciences</source><volume>372</volume><elocation-id>20160161</elocation-id><pub-id pub-id-type="doi">10.1098/rstb.2016.0161</pub-id></element-citation></ref><ref id="bib8"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Degenhart</surname> <given-names>AD</given-names></name><name><surname>Bishop</surname> <given-names>WE</given-names></name><name><surname>Oby</surname> <given-names>ER</given-names></name><name><surname>Tyler-Kabara</surname> <given-names>EC</given-names></name><name><surname>Chase</surname> <given-names>SM</given-names></name><name><surname>Batista</surname> <given-names>AP</given-names></name><name><surname>Yu</surname> <given-names>BM</given-names></name><name><surname>Byron</surname> <given-names>MY</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>Stabilization of a brain–computer interface via the alignment of low-dimensional spaces of neural activity</article-title><source>Nature Biomedical Engineering</source><volume>381</volume><fpage>1</fpage><lpage>14</lpage><pub-id pub-id-type="doi">10.1038/s41551-020-0542-9</pub-id></element-citation></ref><ref id="bib9"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Driscoll</surname> <given-names>LN</given-names></name><name><surname>Pettit</surname> <given-names>NL</given-names></name><name><surname>Minderer</surname> <given-names>M</given-names></name><name><surname>Chettih</surname> <given-names>SN</given-names></name><name><surname>Harvey</surname> <given-names>CD</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Dynamic reorganization of neuronal activity patterns in parietal cortex</article-title><source>Cell</source><volume>170</volume><fpage>986</fpage><lpage>999</lpage><pub-id pub-id-type="doi">10.1016/j.cell.2017.07.021</pub-id><pub-id pub-id-type="pmid">28823559</pub-id></element-citation></ref><ref id="bib10"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Druckmann</surname> <given-names>S</given-names></name><name><surname>Chklovskii</surname> <given-names>DB</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>Neuronal circuits underlying persistent representations despite time varying activity</article-title><source>Current Biology</source><volume>22</volume><fpage>2095</fpage><lpage>2103</lpage><pub-id pub-id-type="doi">10.1016/j.cub.2012.08.058</pub-id><pub-id pub-id-type="pmid">23084992</pub-id></element-citation></ref><ref id="bib11"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gallego</surname> <given-names>JA</given-names></name><name><surname>Perich</surname> <given-names>MG</given-names></name><name><surname>Naufel</surname> <given-names>SN</given-names></name><name><surname>Ethier</surname> <given-names>C</given-names></name><name><surname>Solla</surname> <given-names>SA</given-names></name><name><surname>Miller</surname> <given-names>LE</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Cortical population activity within a preserved neural manifold underlies multiple motor behaviors</article-title><source>Nature Communications</source><volume>9</volume><elocation-id>4233</elocation-id><pub-id pub-id-type="doi">10.1038/s41467-018-06560-z</pub-id><pub-id pub-id-type="pmid">30315158</pub-id></element-citation></ref><ref id="bib12"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gallego</surname> <given-names>JA</given-names></name><name><surname>Perich</surname> <given-names>MG</given-names></name><name><surname>Chowdhury</surname> <given-names>RH</given-names></name><name><surname>Solla</surname> <given-names>SA</given-names></name><name><surname>Miller</surname> <given-names>LE</given-names></name></person-group><year iso-8601-date="2020">2020</year><article-title>Long-term stability of cortical population dynamics underlying consistent behavior</article-title><source>Nature Neuroscience</source><volume>23</volume><fpage>260</fpage><lpage>270</lpage><pub-id pub-id-type="doi">10.1038/s41593-019-0555-4</pub-id><pub-id pub-id-type="pmid">31907438</pub-id></element-citation></ref><ref id="bib13"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ganguly</surname> <given-names>K</given-names></name><name><surname>Carmena</surname> <given-names>JM</given-names></name></person-group><year iso-8601-date="2009">2009</year><article-title>Emergence of a stable cortical map for neuroprosthetic control</article-title><source>PLOS Biology</source><volume>7</volume><elocation-id>e1000153</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pbio.1000153</pub-id><pub-id pub-id-type="pmid">19621062</pub-id></element-citation></ref><ref id="bib14"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Harvey</surname> <given-names>CD</given-names></name><name><surname>Coen</surname> <given-names>P</given-names></name><name><surname>Tank</surname> <given-names>DW</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>Choice-specific sequences in parietal cortex during a virtual-navigation decision task</article-title><source>Nature</source><volume>484</volume><fpage>62</fpage><lpage>68</lpage><pub-id pub-id-type="doi">10.1038/nature10918</pub-id><pub-id pub-id-type="pmid">22419153</pub-id></element-citation></ref><ref id="bib15"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hennig</surname> <given-names>JA</given-names></name><name><surname>Golub</surname> <given-names>MD</given-names></name><name><surname>Lund</surname> <given-names>PJ</given-names></name><name><surname>Sadtler</surname> <given-names>PT</given-names></name><name><surname>Oby</surname> <given-names>ER</given-names></name><name><surname>Quick</surname> <given-names>KM</given-names></name><name><surname>Ryu</surname> <given-names>SI</given-names></name><name><surname>Tyler-Kabara</surname> <given-names>EC</given-names></name><name><surname>Batista</surname> <given-names>AP</given-names></name><name><surname>Yu</surname> <given-names>BM</given-names></name><name><surname>Chase</surname> <given-names>SM</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Constraints on neural redundancy</article-title><source>eLife</source><volume>7</volume><elocation-id>e36774</elocation-id><pub-id pub-id-type="doi">10.7554/eLife.36774</pub-id><pub-id pub-id-type="pmid">30109848</pub-id></element-citation></ref><ref id="bib16"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Holtmaat</surname> <given-names>AJ</given-names></name><name><surname>Trachtenberg</surname> <given-names>JT</given-names></name><name><surname>Wilbrecht</surname> <given-names>L</given-names></name><name><surname>Shepherd</surname> <given-names>GM</given-names></name><name><surname>Zhang</surname> <given-names>X</given-names></name><name><surname>Knott</surname> <given-names>GW</given-names></name><name><surname>Svoboda</surname> <given-names>K</given-names></name></person-group><year iso-8601-date="2005">2005</year><article-title>Transient and persistent dendritic spines in the neocortex in vivo</article-title><source>Neuron</source><volume>45</volume><fpage>279</fpage><lpage>291</lpage><pub-id pub-id-type="doi">10.1016/j.neuron.2005.01.003</pub-id><pub-id pub-id-type="pmid">15664179</pub-id></element-citation></ref><ref id="bib17"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Holtmaat</surname> <given-names>A</given-names></name><name><surname>Svoboda</surname> <given-names>K</given-names></name></person-group><year iso-8601-date="2009">2009</year><article-title>Experience-dependent structural synaptic plasticity in the mammalian brain</article-title><source>Nature Reviews Neuroscience</source><volume>10</volume><fpage>647</fpage><lpage>658</lpage><pub-id pub-id-type="doi">10.1038/nrn2699</pub-id><pub-id pub-id-type="pmid">19693029</pub-id></element-citation></ref><ref id="bib18"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Huber</surname> <given-names>D</given-names></name><name><surname>Gutnisky</surname> <given-names>DA</given-names></name><name><surname>Peron</surname> <given-names>S</given-names></name><name><surname>O'Connor</surname> <given-names>DH</given-names></name><name><surname>Wiegert</surname> <given-names>JS</given-names></name><name><surname>Tian</surname> <given-names>L</given-names></name><name><surname>Oertner</surname> <given-names>TG</given-names></name><name><surname>Looger</surname> <given-names>LL</given-names></name><name><surname>Svoboda</surname> <given-names>K</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>Multiple dynamic representations in the motor cortex during sensorimotor learning</article-title><source>Nature</source><volume>484</volume><fpage>473</fpage><lpage>478</lpage><pub-id pub-id-type="doi">10.1038/nature11039</pub-id><pub-id pub-id-type="pmid">22538608</pub-id></element-citation></ref><ref id="bib19"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kappel</surname> <given-names>D</given-names></name><name><surname>Legenstein</surname> <given-names>R</given-names></name><name><surname>Habenschuss</surname> <given-names>S</given-names></name><name><surname>Hsieh</surname> <given-names>M</given-names></name><name><surname>Maass</surname> <given-names>W</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>A dynamic connectome supports the emergence of stable computational function of neural circuits through Reward-Based learning</article-title><source>Eneuro</source><volume>5</volume><elocation-id>ENEURO.0301-17.2018</elocation-id><pub-id pub-id-type="doi">10.1523/ENEURO.0301-17.2018</pub-id><pub-id pub-id-type="pmid">29696150</pub-id></element-citation></ref><ref id="bib20"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kaufman</surname> <given-names>MT</given-names></name><name><surname>Churchland</surname> <given-names>MM</given-names></name><name><surname>Ryu</surname> <given-names>SI</given-names></name><name><surname>Shenoy</surname> <given-names>KV</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Cortical activity in the null space: permitting preparation without movement</article-title><source>Nature Neuroscience</source><volume>17</volume><fpage>440</fpage><lpage>448</lpage><pub-id pub-id-type="doi">10.1038/nn.3643</pub-id><pub-id pub-id-type="pmid">24487233</pub-id></element-citation></ref><ref id="bib21"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Krumin</surname> <given-names>M</given-names></name><name><surname>Lee</surname> <given-names>JJ</given-names></name><name><surname>Harris</surname> <given-names>KD</given-names></name><name><surname>Carandini</surname> <given-names>M</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Decision and navigation in mouse parietal cortex</article-title><source>eLife</source><volume>7</volume><elocation-id>e42583</elocation-id><pub-id pub-id-type="doi">10.7554/eLife.42583</pub-id><pub-id pub-id-type="pmid">30468146</pub-id></element-citation></ref><ref id="bib22"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Levy</surname> <given-names>SJ</given-names></name><name><surname>Kinsky</surname> <given-names>NR</given-names></name><name><surname>Mau</surname> <given-names>W</given-names></name><name><surname>Sullivan</surname> <given-names>DW</given-names></name><name><surname>Hasselmo</surname> <given-names>ME</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Hippocampal spatial memory representations in mice are heterogeneously stable</article-title><source>bioRxiv</source><pub-id pub-id-type="doi">10.1101/843037</pub-id></element-citation></ref><ref id="bib23"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Loewenstein</surname> <given-names>Y</given-names></name><name><surname>Kuras</surname> <given-names>A</given-names></name><name><surname>Rumpel</surname> <given-names>S</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>Multiplicative dynamics underlie the emergence of the log-normal distribution of spine sizes in the neocortex in vivo</article-title><source>Journal of Neuroscience</source><volume>31</volume><fpage>9481</fpage><lpage>9488</lpage><pub-id pub-id-type="doi">10.1523/JNEUROSCI.6130-10.2011</pub-id><pub-id pub-id-type="pmid">21715613</pub-id></element-citation></ref><ref id="bib24"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Loewenstein</surname> <given-names>Y</given-names></name><name><surname>Yanover</surname> <given-names>U</given-names></name><name><surname>Rumpel</surname> <given-names>S</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Predicting the dynamics of network connectivity in the neocortex</article-title><source>Journal of Neuroscience</source><volume>35</volume><fpage>12535</fpage><lpage>12544</lpage><pub-id pub-id-type="doi">10.1523/JNEUROSCI.2917-14.2015</pub-id><pub-id pub-id-type="pmid">26354919</pub-id></element-citation></ref><ref id="bib25"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Minderer</surname> <given-names>M</given-names></name><name><surname>Brown</surname> <given-names>KD</given-names></name><name><surname>Harvey</surname> <given-names>CD</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>The spatial structure of neural encoding in mouse posterior cortex during navigation</article-title><source>Neuron</source><volume>102</volume><fpage>232</fpage><lpage>248</lpage><pub-id pub-id-type="doi">10.1016/j.neuron.2019.01.029</pub-id><pub-id pub-id-type="pmid">30772081</pub-id></element-citation></ref><ref id="bib26"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Minerbi</surname> <given-names>A</given-names></name><name><surname>Kahana</surname> <given-names>R</given-names></name><name><surname>Goldfeld</surname> <given-names>L</given-names></name><name><surname>Kaufman</surname> <given-names>M</given-names></name><name><surname>Marom</surname> <given-names>S</given-names></name><name><surname>Ziv</surname> <given-names>NE</given-names></name></person-group><year iso-8601-date="2009">2009</year><article-title>Long-term relationships between synaptic tenacity, synaptic remodeling, and network activity</article-title><source>PLOS Biology</source><volume>7</volume><elocation-id>e1000136</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pbio.1000136</pub-id><pub-id pub-id-type="pmid">19554080</pub-id></element-citation></ref><ref id="bib27"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Moczulska</surname> <given-names>KE</given-names></name><name><surname>Tinter-Thiede</surname> <given-names>J</given-names></name><name><surname>Peter</surname> <given-names>M</given-names></name><name><surname>Ushakova</surname> <given-names>L</given-names></name><name><surname>Wernle</surname> <given-names>T</given-names></name><name><surname>Bathellier</surname> <given-names>B</given-names></name><name><surname>Rumpel</surname> <given-names>S</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Dynamics of dendritic spines in the mouse auditory cortex during memory formation and memory recall</article-title><source>PNAS</source><volume>110</volume><fpage>18315</fpage><lpage>18320</lpage><pub-id pub-id-type="doi">10.1073/pnas.1312508110</pub-id><pub-id pub-id-type="pmid">24151334</pub-id></element-citation></ref><ref id="bib28"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Montijn</surname> <given-names>JS</given-names></name><name><surname>Meijer</surname> <given-names>GT</given-names></name><name><surname>Lansink</surname> <given-names>CS</given-names></name><name><surname>Pennartz</surname> <given-names>CM</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Population-Level neural codes are robust to Single-Neuron variability from a multidimensional coding perspective</article-title><source>Cell Reports</source><volume>16</volume><fpage>2486</fpage><lpage>2498</lpage><pub-id pub-id-type="doi">10.1016/j.celrep.2016.07.065</pub-id><pub-id pub-id-type="pmid">27545876</pub-id></element-citation></ref><ref id="bib29"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mulliken</surname> <given-names>GH</given-names></name><name><surname>Musallam</surname> <given-names>S</given-names></name><name><surname>Andersen</surname> <given-names>RA</given-names></name></person-group><year iso-8601-date="2008">2008</year><article-title>Forward estimation of movement state in posterior parietal cortex</article-title><source>PNAS</source><volume>105</volume><fpage>8170</fpage><lpage>8177</lpage><pub-id pub-id-type="doi">10.1073/pnas.0802602105</pub-id><pub-id pub-id-type="pmid">18499800</pub-id></element-citation></ref><ref id="bib30"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ni</surname> <given-names>AM</given-names></name><name><surname>Ruff</surname> <given-names>DA</given-names></name><name><surname>Alberts</surname> <given-names>JJ</given-names></name><name><surname>Symmonds</surname> <given-names>J</given-names></name><name><surname>Cohen</surname> <given-names>MR</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Learning and attention reveal a general relationship between population activity and behavior</article-title><source>Science</source><volume>359</volume><fpage>463</fpage><lpage>465</lpage><pub-id pub-id-type="doi">10.1126/science.aao0284</pub-id></element-citation></ref><ref id="bib31"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pedregosa</surname> <given-names>F</given-names></name><name><surname>Varoquaux</surname> <given-names>G</given-names></name><name><surname>Gramfort</surname> <given-names>A</given-names></name><name><surname>Michel</surname> <given-names>V</given-names></name><name><surname>Thirion</surname> <given-names>B</given-names></name><name><surname>Grisel</surname> <given-names>O</given-names></name><name><surname>Blondel</surname> <given-names>M</given-names></name><name><surname>Prettenhofer</surname> <given-names>P</given-names></name><name><surname>Weiss</surname> <given-names>R</given-names></name><name><surname>Dubourg</surname> <given-names>V</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>Scikit-learn: machine learning in Python</article-title><source>Journal of Machine Learning Research</source><volume>12</volume><fpage>2825</fpage><lpage>2830</lpage></element-citation></ref><ref id="bib32"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rokni</surname> <given-names>U</given-names></name><name><surname>Richardson</surname> <given-names>AG</given-names></name><name><surname>Bizzi</surname> <given-names>E</given-names></name><name><surname>Seung</surname> <given-names>HS</given-names></name></person-group><year iso-8601-date="2007">2007</year><article-title>Motor learning with unstable neural representations</article-title><source>Neuron</source><volume>54</volume><fpage>653</fpage><lpage>666</lpage><pub-id pub-id-type="doi">10.1016/j.neuron.2007.04.030</pub-id><pub-id pub-id-type="pmid">17521576</pub-id></element-citation></ref><ref id="bib33"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rule</surname> <given-names>ME</given-names></name><name><surname>O'Leary</surname> <given-names>T</given-names></name><name><surname>Harvey</surname> <given-names>CD</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Causes and consequences of representational drift</article-title><source>Current Opinion in Neurobiology</source><volume>58</volume><fpage>141</fpage><lpage>147</lpage><pub-id pub-id-type="doi">10.1016/j.conb.2019.08.005</pub-id><pub-id pub-id-type="pmid">31569062</pub-id></element-citation></ref><ref id="bib34"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Rule</surname> <given-names>ME</given-names></name></person-group><year iso-8601-date="2020">2020</year><data-title>Stable Task Information from an Unstable Neural Population</data-title><source>GitHub</source><version designator="3.0">3.0</version><ext-link ext-link-type="uri" xlink:href="https://github.com/michaelerule/stable-task-information">https://github.com/michaelerule/stable-task-information</ext-link></element-citation></ref><ref id="bib35"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rumpel</surname> <given-names>S</given-names></name><name><surname>Triesch</surname> <given-names>J</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>The dynamic connectome</article-title><source>E-Neuroforum</source><volume>22</volume><fpage>48</fpage><lpage>53</lpage><pub-id pub-id-type="doi">10.1515/s13295-016-0026-2</pub-id></element-citation></ref><ref id="bib36"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Semedo</surname> <given-names>JD</given-names></name><name><surname>Zandvakili</surname> <given-names>A</given-names></name><name><surname>Machens</surname> <given-names>CK</given-names></name><name><surname>Yu</surname> <given-names>BM</given-names></name><name><surname>Kohn</surname> <given-names>A</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Cortical Areas interact through a communication subspace</article-title><source>Neuron</source><volume>102</volume><fpage>249</fpage><lpage>259</lpage><pub-id pub-id-type="doi">10.1016/j.neuron.2019.01.026</pub-id><pub-id pub-id-type="pmid">30770252</pub-id></element-citation></ref><ref id="bib37"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Singh</surname> <given-names>A</given-names></name><name><surname>Peyrache</surname> <given-names>A</given-names></name><name><surname>Humphries</surname> <given-names>MD</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Medial prefrontal cortex population activity is plastic irrespective of learning</article-title><source>The Journal of Neuroscience</source><volume>39</volume><fpage>1370-17</fpage><lpage>1373483</lpage><pub-id pub-id-type="doi">10.1523/JNEUROSCI.1370-17.2019</pub-id></element-citation></ref><ref id="bib38"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tonegawa</surname> <given-names>S</given-names></name><name><surname>Pignatelli</surname> <given-names>M</given-names></name><name><surname>Roy</surname> <given-names>DS</given-names></name><name><surname>Ryan</surname> <given-names>TJ</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Memory Engram storage and retrieval</article-title><source>Current Opinion in Neurobiology</source><volume>35</volume><fpage>101</fpage><lpage>109</lpage><pub-id pub-id-type="doi">10.1016/j.conb.2015.07.009</pub-id><pub-id pub-id-type="pmid">26280931</pub-id></element-citation></ref><ref id="bib39"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wächter</surname> <given-names>A</given-names></name><name><surname>Biegler</surname> <given-names>LT</given-names></name></person-group><year iso-8601-date="2006">2006</year><article-title>On the implementation of an interior-point filter line-search algorithm for large-scale nonlinear programming</article-title><source>Mathematical Programming</source><volume>106</volume><fpage>25</fpage><lpage>57</lpage><pub-id pub-id-type="doi">10.1007/s10107-004-0559-y</pub-id></element-citation></ref><ref id="bib40"><element-citation publication-type="report"><person-group person-group-type="author"><name><surname>Widrow</surname> <given-names>B</given-names></name><name><surname>Hoff</surname> <given-names>ME</given-names></name></person-group><year iso-8601-date="1960">1960</year><source>Adaptive Switching Circuits</source><publisher-name>Stanford Univ Ca Stanford Electronics Labs</publisher-name></element-citation></ref><ref id="bib41"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Widrow</surname> <given-names>B</given-names></name><name><surname>Hoff</surname> <given-names>ME</given-names></name></person-group><year iso-8601-date="1962">1962</year><chapter-title>Associative storage and retrieval of digital information in networks of adaptive ‘neurons’</chapter-title><person-group person-group-type="editor"><name><surname>Bernard</surname> <given-names>E. E</given-names></name><name><surname>Kare</surname> <given-names>M. R</given-names></name></person-group><source>Biological Prototypes and Synthetic Systems</source><publisher-name>Springer</publisher-name><fpage>160</fpage><lpage>161</lpage><pub-id pub-id-type="doi">10.1007/978-1-4684-1716-6_25</pub-id></element-citation></ref><ref id="bib42"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Widrow</surname> <given-names>B</given-names></name><name><surname>Stearns</surname> <given-names>SD</given-names></name></person-group><year iso-8601-date="1985">1985</year><source>Adaptive Signal Processing</source><publisher-name>Prentice-Hall, Inc</publisher-name></element-citation></ref><ref id="bib43"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ziv</surname> <given-names>Y</given-names></name><name><surname>Burns</surname> <given-names>LD</given-names></name><name><surname>Cocker</surname> <given-names>ED</given-names></name><name><surname>Hamel</surname> <given-names>EO</given-names></name><name><surname>Ghosh</surname> <given-names>KK</given-names></name><name><surname>Kitch</surname> <given-names>LJ</given-names></name><name><surname>El Gamal</surname> <given-names>A</given-names></name><name><surname>Schnitzer</surname> <given-names>MJ</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Long-term dynamics of CA1 hippocampal place codes</article-title><source>Nature Neuroscience</source><volume>16</volume><fpage>264</fpage><lpage>266</lpage><pub-id pub-id-type="doi">10.1038/nn.3329</pub-id><pub-id pub-id-type="pmid">23396101</pub-id></element-citation></ref></ref-list></back><sub-article article-type="decision-letter" id="sa1"><front-stub><article-id pub-id-type="doi">10.7554/eLife.51121.sa1</article-id><title-group><article-title>Decision letter</article-title></title-group><contrib-group><contrib contrib-type="editor"><name><surname>Palmer</surname><given-names>Stephanie</given-names></name><role>Reviewing Editor</role><aff><institution>University of Chicago</institution><country>United States</country></aff></contrib></contrib-group></front-stub><body><boxed-text><p>In the interests of transparency, eLife publishes the most substantive revision requests and the accompanying author responses.</p></boxed-text><p><bold>Acceptance summary:</bold></p><p>This work addresses how accurate readout in the brain can be maintained despite shifts in neural population tuning and variability. The work reanalyzes previous data from posterior parietal cortex and digs deeper to show that a simple linear readout can, in fact, recover kinematic variables like animal position and speed from this drifting population. While this simple readout works well, it does slowly degrade over days. This work also shows how to ameliorate this degradation: plasticity that operates via a biologically plausible mechanism can maintain accurate readout.</p><p><bold>Decision letter after peer review:</bold></p><p>[Editors’ note: the authors submitted for reconsideration following the decision after peer review. What follows is the decision letter after the first round of review.]</p><p>Thank you for submitting your work entitled &quot;Stable task information from an unstable neural population&quot; for consideration by <italic>eLife</italic>. Your article has been reviewed by three peer reviewers, one of whom is a member of our Board of Reviewing Editors, and the evaluation has been overseen by a Senior Editor. The reviewers have opted to remain anonymous.</p><p>Our decision has been reached after consultation between the reviewers. Based on these discussions and the individual reviews below, we regret to inform you that your work will not be considered further for publication in <italic>eLife</italic>.</p><p>This is a clearly-presented initial study on how stable readout across days might be achieved despite shifting neural representations. The results have been judged to be sound, analytically, but the potential impact of the work falls short of threshold for a Short Report. Individual reviewer comments are listed below, but the main critiques are summarized here:</p><p>1) There are only data on 1 mouse to support the key result, which itself is not surprising given previous work from Driscoll et al., 2017.</p><p>2) The present work lacks a null model against which one can properly interpret the success of the concatenated decoder.</p><p><italic>Reviewer #1:</italic></p><p>This is a well-written, short manuscript about changes in neuronal activity patterns in PPC over days, and how stable readout can be achieved with a simple, linear decoder despite these shifting sands. The idea is that a single, best compromise, linear decoder can be found that is immune to the reconfiguration in the neural population. The work posits, but doesn't prove that the reconfiguration exists in the &quot;null space&quot; of the task.</p><p>There are a number of theoretical papers (as nicely referenced in this document) about how accurate decoders might be maintained in changing neural populations, but the upside of this work is that:</p><p>a) The results are taken from experimental data with large enough N's and over enough days that decoding accuracy can be traced, and</p><p>b) This is the simplest of all possible theories of how performance is maintained, and it's reasonably plausible.</p><p>I have some substantive concerns :</p><p>1) Given that the consensus decoder had to perform better across days than any single day decoder, it's not clear how surprising these results are.</p><p>2) It wasn't clear how well this extrapolates across different mice. In some figures, 3 or 4 individuals are compared, others just 2, others yet, just 1 mouse (mouse 4) is mentioned. This is central to the generality of the paper and should be laid out more clearly. Do the concatenated decoder and LMS decoder results hold for more than one individual?</p><p>3) The arguments about the scaling of the biologically plausible weight adjustments seem a little problematic. It's not clear why the results here form an upper bound on the weight changes needed to maintain accurate decoding. Also, it wasn't clear how the interactions between networks, maintaining congruence, is achieved. That final part of the Discussion was a bit vague.</p><p><italic>Reviewer #2:</italic></p><p>Loback et al. re-analyze data from Driscoll et al., 2017, which had previously shown that PPC representations are unstable over days during a delayed VR T-maze task. Here, using linear decoders, they find that a static decoder can do a reasonable job if trained on data from all days, and that an old model of synaptic weight updates can be applied to maintain decoder performance. The analyses seem to have been done reasonably, but the results strike me as rather shallow and are based on limited data.</p><p>The first main result is simply that unstable representations cause single-day (linear) decoders to generalize poorly, but a multi-day decoder to perform somewhat better. I have two issues with this result:</p><p>1) Given that activity is sparse and does not have systematic shifts in tuning, this decoding result is very nearly a mathematical necessity. Because of sparsity, the decoder likely ends up built so that different units drive the decoder performance on different sessions. This would not be news. Further, there are no null models analyzed for what would happen under different patterns of tuning shifts, which would be a helpful comparison. It is therefore not clear whether there is anything to be surprised at here.</p><p>2) How stable is the behavior within and across sessions? Details of behavior matter all over the brain (Stringer, Pachitariu et al., 2019, Musall, Kaufman et al., 2019), so it is possible that drift in behavioral details could lead to these shifts as well. At least, it should really be shown whether the parameters the authors track are stable over time.</p><p>These points said, there is value in this section. The quantifications of instability and of how many neurons are required for good decoder quality are helpful, and the point that only 6% of neurons are even in the top 50% of informativeness is surprising and interesting.</p><p>The second major result is the application of the Widrow and Hoff, 1962 model. If I understand correctly, this is primarily a different way of quantifying how fast the tuning changes occur (requiring ~2%/minute weight changes), and secondarily a proof of principle for that model. However, unless I'm missing something, this is a one-mouse result. That would not meet the standard for the field. In addition, comment #2 above applies to this result as well, making it harder to interpret.</p><p><italic>Reviewer #3:</italic></p><p>In their report, Loback and colleagues reanalyze data from Driscoll et al., 2017. They confirm the finding of that paper, namely that neuronal representations in the parietal cortex of mice reorganize over the time scale of days, while the overall information content is preserved. The authors then more specifically study the dynamics of these changes and relate them to simplified synaptic plasticity rules.</p><p>Overall, I find that the paper is clearly written and everything seems technically correct. However, I also find that it lacks scientific novelty. While I find the idea of linking the observed reorganization of neural activity with synaptic plasticity exciting, I find that the paper does not quite achieve that. I think the authors would need to work out some concrete consequences/constraints on plasticity for</p><p>this paper to become viable.</p><p>Broadly speaking, the current study is divided into two parts. The first part is a re-analysis of the data of Driscoll et al., 2017, which is performed in Figures 1-3. The authors use decoding methods to retrieve task information from the population activity. While some of the details of the population decoding methods are different to those used by the Driscoll et al., the overall conclusions are the same. The strongest point of the re-analysis is that the authors more clearly quantify the strength of the day-to-day changes using decoders that are constrained to change only little over days. That is a nice twist that was not performed in the Driscoll paper.</p><p>The second part of the paper is an attempt to relate these day-to-day changes to synaptic plasticity (Figures 3, 4). This part is rather brief and quite sketchy. Roughly, the authors simply reformulate the constrained decoder as an adaptive decoder. Conceptually, that is similar to the ideas brought forward by Rokni et al., Ajemian et al., and others. What could make this part interesting, is if this link could be made stronger, i.e., if it could really be a link to synaptic plasticity, rather than a link to a hypothetical readout. But even if the authors limit themselves to a single readout neuron, many questions are left unaddressed, e.g. how to extrapolate the adaptation rules for the decoder to realistic network sizes.</p><p>Other comments:</p><p>1) It was not clear to me what happens with the decoders within a session and between days. Do decoders 'jump' between days or stay roughly the same? How does that influence the adaptation rules?</p><p>2) Legend of Figure 4 and subsection “Biologically plausible weight adjustment can compensate for ongoing reconfiguration of PPC activity”. You repeatedly state that you approach the 'concatenated decoder.' I guess that should be the 'constrained decoder', otherwise it makes no sense to me.</p><p>[Editors’ note: further revisions were suggested prior to acceptance, as described below.]</p><p>Thank you for choosing to send your work entitled &quot;Stable task information from an unstable neural population&quot; for consideration at <italic>eLife</italic>. Your letter of appeal has been considered by a Senior Editor and a Reviewing editor, and we are prepared to consider a revised submission with no guarantees of acceptance.</p><p>Please address the following concerns that were raised in the discussion of your appeal and revised manuscript:</p><p>The null model added is a very nice one (Figure 3—figure supplement 2). It seems there has been a good effort to match it to properties of the data while incorporating a random walk. This is a crucial control. In addition, the new analysis of how drift aligns with coding vs. noise vs. chance (Figure 3—figure supplement 3) is also of substantial interest. Both of these new results are for 4 mice, which is excellent. The framing in the new manuscript also makes it somewhat clearer what the point of this paper is.</p><p>Points left to address in full:</p><p>1) Please go back and consider the more interesting null model in the other analyses and quantifications in this manuscript. This will improve many other parts of the paper. Please also place this new null model result in the main text of the paper.</p><p>2) Regarding the new null model:</p><p>Past evidence has clearly shown that neural tuning (or population activity) changes both randomly (assumed to be due to plasticity noise) and directionally (assumed to be due to feedback and learning). With the new null model, the analyses attempts to rule out a random walk. This is valuable effort. However, please add commentary on how this null model is useful despite ignoring the influence of the systematic, directional changes which were already demonstrated in the past, including the authors' own data, and which have usually been related to ongoing learning.</p><p>3) Please address in full the expanded review comments sent during the initial appeal. That text is reproduced here:</p><p>Thank you for sending us your thoughts and questions about the reviewer comments. This is an excellent piece of work, and the rejection is in no way about whether or not this is solid and publishable. The debate amongst the reviewers revolved around whether it was a significant enough advance for <italic>eLife</italic>. I have consulted with the reviewers in question and have a more thorough explanation of their comments. Please feel free to reach out if you have further questions.</p><p>This manuscript does, indeed, have some basic controls / null models. The shuffle control shows that the decoding is better than chance, and the static same-day model gives an idea of how much the weights have to change per session to do as well as freshly retrained decoders. The null models we'd like to see would compare results with more specific models. This is explained below:</p><p>The issue that I think all of the reviewers had is that it wasn't clear how much we should be surprised by these results, and we weren't clear on what new beliefs we should have after reading this paper if we've already read Driscoll, 2017.</p><p>There are two basic results that are claimed to be original. First: we should be surprised by the success of a concatenated decoder. On reviewer commented:</p><p>&quot;Given that activity is sparse and does not have systematic shifts in tuning, this decoding result is very nearly a mathematical necessity. Because of sparsity, the decoder likely ends up built so that different units drive the decoder performance on different sessions. This would not be news.&quot;</p><p>In other words, to believe that there's something novel here, we would want to see a null model that can recapitulate the changes seen in Driscoll, 2017, with similar sparsity in the responses, where there <italic>isn't</italic> an ability to obtain a good concatenated decoder. We'd like to see what's required to have a different result. Without that, we would have expected that the concatenated decoder would work well.</p><p>Second, as it was understood by the reviewers, the manuscript argues that we should be surprised that updating decoder weights with the Widrow and Hoff model works here. From Driscoll, 2017, we have an idea of how rapidly location selectivity changes, and how rapidly a static decoder decays. Given that we know this, how rapidly would you expect to have to change the decoder? We didn't see much in the paper that wasn't just a different way of quantifying the same tuning changes. One reviewer suggested adding more specific null models because they think this would let the authors answer these deeper questions. For example, are all of the neurons smoothly changing their tuning? Do some change fast and others slow, and is this a continuous distribution? Is there coordination between neurons' tuning changes or are neurons changing independently? The current null models are extremes: the shuffle is related to a model where everything changes instantly (obviously wrong), and the same-day decoder is equivalent to there being no changes ever (which we know is wrong from Driscoll, 2017). So, what new have we learned?</p><p>Finally, regarding the result that only 6% of neurons are in the top 50% all 10 days: again, we lack the context to know how surprised we should be. If we suppose that the informative neurons are chosen randomly each day, then we'd expect the number of neurons that are in the top 50% for 10 days to be 0.5 ^ 9 = ~0.2%. In that case, 6% is surprisingly high. Looking at Driscoll's Figure 2B, ~40% of neurons keep their place preference for 10 days. In that case, 6% is surprisingly low. In fact, why is it so low? Could this just mean the decoder is under-regularized?</p></body></sub-article><sub-article article-type="reply" id="sa2"><front-stub><article-id pub-id-type="doi">10.7554/eLife.51121.sa2</article-id><title-group><article-title>Author response</article-title></title-group></front-stub><body><p>Editors’ note: The authors appealed the original decision. What follows is the authors’ response to the first round of review.]</p><disp-quote content-type="editor-comment"><p>This is a clearly-presented initial study on how stable readout across days might be achieved despite shifting neural representations. The results have been judged to be sound, analytically, but the potential impact of the work falls short of threshold for a Short Report. Individual reviewer comments are listed below, but the main critiques are summarized here:</p><p>1) There are only data on 1 mouse to support the key result, which itself is not surprising given previous work from Driscoll et al., 2017.</p><p>2) The present work lacks a null model against which one can properly interpret the success of the concatenated decoder.</p></disp-quote><p>We have completely addressed points (1) and (2) by extending the analysis across animals and by providing a null model for the concatenated decoder. We discuss details below. The outcome strengthens our conclusions. This, along with extensive additional analysis and rewriting to address remaining reviewers' comments means that the manuscript is significantly improved.</p><p>There was broad agreement between reviewers that the study (as previously presented) lacked depth and the importance of the results was not clear. Our original goal was to provide a short, sharp analysis with easily digestible results. We concede that in trying to keep the presentation terse we were too glib and superficial.</p><p>We have performed extensive additional analyses that strengthen our results. We have also rewritten the manuscript with a more comprehensive Discussion and Introduction, and revised the text to more clearly state the purpose of the study and its contribution. We are open to the suggestion of changing the manuscript to a full report, as opposed to a Short Report, by bringing in the supplementary results/figures to the main text.</p><p>Additional results/analyses:</p><p>– Figure 2—figure supplement 1 quantifies behavioral stability</p><p>– Figure 3—figure supplement 1 shows that the constrained and concatenated results generalize across all four mice for which there was sufficient data</p><p>– Figure 3—figure supplement 2 tests concatenated decoder performance against a null model for drift</p><p>– Figure 3—figure supplement 3 Shows that drift is not random, and instead aligns far above change with fast fluctuations in neuronal activity</p><p>– Figure 4—figure supplement 1 Shows that the LMS results generalize across animals</p><p>– Figure 4—figure supplement 2 Shows that the relative plasticity rates scale with population size, for a fixed error level</p><p>– Figure 4—figure supplement 3 Extrapolates the LMS results to a synthetic population of &gt;1000 neurons, showing that very little plasticity would be needed to track the stable subspace as the number of neurons is increased</p><disp-quote content-type="editor-comment"><p>Reviewer #1:</p><p>There are a number of theoretical papers (as nicely referenced in this document) about how accurate decoders might be maintained in changing neural populations, but the upside of this work is that:</p><p>a) The results are taken from experimental data with large enough N's and over enough days that decoding accuracy can be traced, and</p></disp-quote><p>We appreciate the reviewer's feedback. We want to point out that we show that <italic>not all drift</italic> sits in a linear subspace. We expand on this in the responses below and in the revised manuscript.</p><disp-quote content-type="editor-comment"><p>b) This is the simplest of all possible theories of how performance is maintained, and it's reasonably plausible.</p><p>I have some substantive concerns :</p><p>1) Given that the consensus decoder had to perform better across days than any single day decoder, it's not clear how surprising these results are.</p><p>There is nothing to guarantee that a concatenated decoder would perform as well as observed in the data. In fact, taking such concerns onboard, we tested performance against a null model with matched sparsity and within/between day variance. We find that a concatenated decoder performs <italic>substantially better on the data than on this null model</italic>, and extended the analysis to show that this holds across all of the animals that could be analyzedover many days. This is included in a new figure supplement (Figure 3—figure supplement 2).</p></disp-quote><p>Secondly, we believe there may be some misunderstanding as to the purpose of constructing these decoders, possibly due to our decision to write a brief manuscript. Our goal is not to predict behavior reliably from data. Our goal is to analyze the dynamics of a drifting representation from the perspective of a system with similar properties and constraints as a downstream neuron/circuit, and then assess, quantitatively, whether these data pose a serious problem for understanding how the brain maintains consistent behavior. The first question we addressed in the paper was indeed a simple, but necessary one: does simple weighted readout work? An affirmative answer suggests a biologically plausible means of reading out the information that is hypothesized to reside in this brain area. The second, immediate, follow on question is: could linear decoding continue to work despite drift? If so, how well, how many units are needed, and does drift induce changes that cannot be confined to a linear subspace? Thirdly, is there a way to quantify the demands placed by drift on connectivity and synaptic plasticity, and do so in a way that is independent of particular models of plasticity? Fourthly, given the actual numbers that emerge from answering the previous questions, is there a specific, parsimonious and biologically plausible model that can find an approximately stable coding subspace and continuously compensate changes that occur outside this subspace? We would argue that none of the follow on questions have obvious answers and all of these questions are important. Reviewer 2 had similar concerns, and we have added Figure 3—figure supplements 1 and 2 address this in more depth. We discuss this in more detail in our response to reviewer 2.</p><disp-quote content-type="editor-comment"><p>2) It wasn't clear how well this extrapolates across different mice. In some figures, 3 or 4 individuals are compared, others just 2, others yet, just 1 mouse (mouse 4) is mentioned. This is central to the generality of the paper and should be laid out more clearly. Do the concatenated decoder and LMS decoder results hold for more than one individual?</p></disp-quote><p>We agree that this was a weakness and we have now addressed it. Overall, we examined five mice, four of which had sufficient neurons recorded for further analyses. We originally focused on two mice (M3, M4) because they had the largest number of tracked days, but the results appear consistent in the other subjects (M1 and M5). We now present supplementary figures for all four mice.</p><p>– Figure 3—figure supplement 1 shows that the concatenated decoding results are similar across these four subjects.</p><p>– Figure 4—figure supplement 1 shows that the LMS results are general across all four subjects.</p><disp-quote content-type="editor-comment"><p>3) The arguments about the scaling of the biologically plausible weight adjustments seem a little problematic. It's not clear why the results here form an upper bound on the weight changes needed to maintain accurate decoding.</p></disp-quote><p>We agree that this was stated in a glib way and have clarified this point and substantiated it with further analysis. In essence, the argument is that if a biological neuron or circuit had access to even more neurons than we sampled (which we would expect) then the per-synapse rates of change in such a network would certainly be no larger than for a single readout unit with access to a limited population, and would likely be smaller. As the number of useful connections grows, the per-connection contribution shrinks.</p><p>We edited the text and added two supplementary figures to better convey how plasticity rate scales with population size.</p><p>Figure 4—figure supplement 2 examines scaling with population size in mice 3 and 4. Due to the limited population recorded, this figure does not address scaling to larger populations. Instead, we fix the required error level to match the performance of the full-population LMS (Figure 4—figure supplement 1). We then consider smaller sub-populations, and increase the learning rate to achieve this target error level. Smaller populations require more plasticity to achieve the same decoding performance.</p><p>Figure 4—figure supplement 3 extrapolates LMS performance to larger populations (&gt;1000 neurons) by combining neurons from different mice and aligning behavior on each trial. The resulting population exhibits similar scaling relationships as in Figure 4—figure supplement 2. Both weight magnitude and the rate of weight change decrease for larger populations. We also find that the rate of weight change decreases faster than the weight sizes themselves. This confirms that larger (more redundant) populations can be tracked using less per-synapse plasticity.</p><p>Secondly, we realised that it might be difficult to directly interpret LMS weight adjustments in the existing model where we impose an upper limit on the change artificially. To simplify things, we removed the limit on the LMS weight change parameter, and control plasticity using only the learning rate parameter <italic>η</italic>. Rather than analyzing the fast fluctuations, we consider only the slow-timescale changes in weights between days, which can be more clearly related (if only qualitatively) to long-term changes in spine sizes or density. These changes are reflected in the revised Figure 4 and associated supplementary figures.</p><disp-quote content-type="editor-comment"><p>Also, it wasn't clear how the interactions between networks, maintaining congruence, is achieved. That final part of the Discussion was a bit vague.</p></disp-quote><p>Thank you, this is useful feedback. We were referring to ideas that are more extensively and clearly articulated in a Current Opinion article that we published last year, which we cite. Nonetheless, our writing in the present manuscript was vague and we have rewritten this paragraph in the Discussion.</p><p>We believe that the revised Discussion better emphasizes the insights into drift in PPC population codes provided by our analysis, and more clearly states the questions we addressed. We have also re-written the Discussion to more clearly convey the limitations of our study, and to highlight new experimental and theoretical directions suggested by our results.</p><disp-quote content-type="editor-comment"><p>Reviewer #2:</p><p>Loback et al. re-analyze data from Driscoll et al., 2017, which had previously shown that PPC representations are unstable over days during a delayed VR T-maze task. Here, using linear decoders, they find that a static decoder can do a reasonable job if trained on data from all days, and that an old model of synaptic weight updates can be applied to maintain decoder performance. The analyses seem to have been done reasonably, but the results strike me as rather shallow and are based on limited data.</p></disp-quote><p>We appreciate the constructive comments, other reviewers noted similar concerns. We have substantially revised the text and extended the manuscript with deeper analyses, extended across animals. We believe that this revised manuscript addresses these concerns.</p><p>We've added Figure 3—figure supplement 1 and Figure 4—figure supplement 1) to show that the results are generalize over all four mice considered. Please see our response to reviewer 1, which goes into greater depth regarding results from additional subjects.</p><p>We also emphasize that we chose an older and simple model of plasticity (LMS) after considerable deliberation and exploration. The choice was not ad-hoc because our goal was not to invent yet another model of plasticity, but instead to evaluate how difficult the problem of drift would be for a simple and biologically plausible learning rule. We evaluated several decoders and learning rules, including nonlinear methods, Gaussian process methods, etc. In all cases, more sophisticated methods required additional assumptions about the mechanism of plasticity and obscured any biological interpretation.</p><p>Although it was sometimes possible to get better decoding performance with more sophisticated approaches, this was not our goal. We felt that LMS was more appropriate for lower-bounding the required plasticity to achieve a target decoding performance. The simplicity (and limitations) of LMS made it a useful assay for determining how disruptive drift would be in a biological system. Our reasoning was that if a relatively under-powered local learning rule could track drift, then it would also be very likely that neurons in the brain could do the same (or better), especially with access to a larger PPC population.</p><p>We therefore do not believe that the choice of a simple, widely known and parsimonious model is a weakness, but rather a strength. There was no guarantee that such a simple model would work and the fact that is does is important given the fundamental questions raised by the experimental observations.</p><disp-quote content-type="editor-comment"><p>The first main result is simply that unstable representations cause single-day (linear) decoders to generalize poorly, but a multi-day decoder to perform somewhat better. I have two issues with this result:</p><p>1) Given that activity is sparse and does not have systematic shifts in tuning, this decoding result is very nearly a mathematical necessity. Because of sparsity, the decoder likely ends up built so that different units drive the decoder performance on different sessions. This would not be news. Further, there are no null models analyzed for what would happen under different patterns of tuning shifts, which would be a helpful comparison. It is therefore not clear whether there is anything to be surprised at here.</p></disp-quote><p>We have taken on board this concern, especially the issue of sparse activity. We constructed a null model which we now present in Figure 3—figure supplement 2 and associated text in Results. In fact, the performance of a concatenated decoder is far above chance compared to a null model with matched variance, sparsity and random drift. Please also refer to our response to the similar issue raised in reviewer 1's first comment, especially our clarification on the purpose of this study and the non-obvious questions it addresses.</p><p>We also now present further evidence that drift in the data is not random (Figure 3—figure supplement 3) and associated text in Results. The overlap of drift with behavior coding directions is significantly above chance, but a significant proportion of drift still lies in the null space for location coding.</p><p>Overall, our results now provide deeper insight and show that drift (partially) preserves important features of population tuning curve statistics. In light of this, we now feel that the original result is stronger: drift is constrained in a way that could make it more disruptive than chance, but we find that a stable subspace exists nonetheless.</p><p>After addressing these issues we feel even more strongly that these results are important for the community, especially since several other groups are now examining drift and stability in other brain areas and other model organisms.</p><disp-quote content-type="editor-comment"><p>2) How stable is the behavior within and across sessions? Details of behavior matter all over the brain (Stringer, Pachitariu et al., 2019, Musall, Kaufman et al., 2019), so it is possible that drift in behavioral details could lead to these shifts as well. At least, it should really be shown whether the parameters the authors track are stable over time.</p></disp-quote><p>Yes, we agree. Driscoll et al., 2017 verified that the overall task performance was stable, but behavioral details are also important.</p><p>To address this, we have added Figure 2—figure supplement 1. We assessed behavior changes over time, and found systematic changes only in the forward movement of mouse 4. In all other instances we found no systematic changes. While statistically significant, daily fluctuations in behavior were small. Importantly, all behavioral statistics recorded were stable for three of the four mice studied, suggesting that our results are general and do not arise from systematic changes in behavior.</p><p>We now refer to this figure in the main text:</p><p>&quot;Behavioral variables were stable over time with some per-session variability (mouse 4 exhibited a slight decrease in forward speed over two weeks; Figure 2—figure supplement 1).&quot;</p><disp-quote content-type="editor-comment"><p>These points said, there is value in this section. The quantifications of instability and of how many neurons are required for good decoder quality are helpful, and the point that only 6% of neurons are even in the top 50% of informativeness is surprising and interesting.</p><p>The second major result is the application of the Widrow and Hoff, 1962 model. If I understand correctly, this is primarily a different way of quantifying how fast the tuning changes occur (requiring ~2%/minute weight changes), and secondarily a proof of principle for that model. However, unless I'm missing something, this is a one-mouse result. That would not meet the standard for the field. In addition, comment #2 above applies to this result as well, making it harder to interpret.</p><p>Before addressing the LMS issue, we want to point out that <italic>the second major result is a quantification of how much drift occurs outside a linear subspace. We find that a non-negligible component does indeed lie outside a linear subspace, thus preventing long term, reliable decoding by a fixed decoder</italic>. Before attempting to find an example of a biologically plausible model that could compensate for this, we quantified the expected per-synapse adjustment that would be required to compensate for this component of drift independently of a specific learning rule. This result and analysis is in Figure 3D-E.</p></disp-quote><p>Turning to the issue of the LMS results, we agree that showing only one example was a weakness. We now provide results from LMS from all mice (Figure 4—figure supplement 1); the results generalise.</p><disp-quote content-type="editor-comment"><p>Reviewer #3:</p><p>Overall, I find that the paper is clearly written and everything seems technically correct. However, I also find that it lacks scientific novelty. While I find the idea of linking the observed reorganization of neural activity with synaptic plasticity exciting, I find that the paper does not quite achieve that. I think the authors would need to work out some concrete consequences/constraints on plasticity for</p><p>this paper to become viable.</p><p>We appreciate this assessment, and share the reviewer's excitement regarding linking neural activity with synaptic plasticity. We need to immediately point out that this was not the sole aim of the paper. <italic>The other important aim was to characterise drift as it occurs experimentally and ask if drift is any way structured or minimally disruptive with respect to a plausible readout mechanism.</italic> In doing so we are directly testing a well-known theoretical proposal that 'irrelevant' changes in a neural code can be confined to a null space. Our conclusions to this crucial question are more fully discussed elsewhere in this response and we have revised the manuscript substantially to further articulate them.</p></disp-quote><p>Turning back to the problem of relating drift to plasticity, the reviewer will appreciate that it is very difficult to directly connect population activity to synaptic plasticity. Where do we start? How do we avoid making too many assumptions and at the same time provide concrete, interpretable models and numbers that can be directly related to the biological system?</p><p>We feel that our revised analysis goes a long way to achieving this by considering several variations of a &quot;plausible worst case&quot; scenario that addresses the most pressing question raised by the data, namely, does activity drift pose an immediate problem for understanding the function of PPC and other cortical circuits? We would argue that our analysis does provide concrete constraints and consequences for plasticity, not just qualitatively, but down to actual numbers that are meaningful given known physiology and connectivity.</p><p>Specifically:</p><p>– We now quantify the effect of population size on long term decoder performance</p><p>– We now quantify how much drift occurs in a linear subspace, finding that a non-negligible component does not reside in a linear subspace, and will eventually degrade a fixed readout to chance levels</p><p>– We quantify the extent to which a 'best subset' of neurons exists in the population, finding that this subset turns over completely and surprisingly rapidly</p><p>– We find a way to estimate how much plasticity would be required, under reasonable and clear assumptions, to compensate for drift <italic>independently of a plasticity mechanism</italic> – We provide a parsimonious, biologically plausible example of a specific learning rule that can, indeed, achieve this compensation</p><p>We would urge the reviewer to contemplate what an alternative approach would consist of that could better address these issues. This is not to say that our original manuscript did not have weaknesses. We failed to include analyses across animals and didn't go as deep as we could have in the analyses that we performed. We also didn't fully articulate the main questions and goals of the study in the very terse manuscript we originally submitted, so some of the above contributions were easy to overlook. We have addressed this as well as adding new results, as detailed below in this response. We believe the manuscript is now clearer and stronger.</p><disp-quote content-type="editor-comment"><p>Broadly speaking, the current study is divided into two parts. The first part is a re-analysis of the data of Driscoll et al., 2017, which is performed in Figures 1-3. The authors use decoding methods to retrieve task information from the population activity. While some of the details of the population decoding methods are different to those used by the Driscoll et al., the overall conclusions are the same. The strongest point of the re-analysis is that the authors more clearly quantify the strength of the day-to-day changes using decoders that are constrained to change only little over days. That is a nice twist that was not performed in the Driscoll paper.</p><p>The second part of the paper is an attempt to relate these day-to-day changes to synaptic plasticity (Figures 3 and 4). This part is rather brief and quite sketchy. Roughly, the authors simply reformulate the constrained decoder as an adaptive decoder. Conceptually, that is similar to the ideas brought forward by Rokni et al., Ajemian et al., and others. What could make this part interesting, is if this link could be made stronger, i.e., if it could really be a link to synaptic plasticity, rather than a link to a hypothetical readout. But even if the authors limit themselves to a single readout neuron, many questions are left unaddressed, e.g. how to extrapolate the adaptation rules for the decoder to realistic network sizes.</p></disp-quote><p>Although we cannot access synaptic plasticity directly in these data, we feel that our decoding-based analysis can provide a useful approach for studying constraints on plasticity from recordings of population activity alone.</p><p>As outlined in more detail in our responses to reviewers 1 and 2, we have added several new supplementary analyses. These analyses show that the results are general across subjects (Figure 3—figure supplement 1, Figure 4—figure supplement 1), and that observed drift is structured (Figure 3—figure supplements 2, 3). Drift aligns with neural activity, especially noise correlations (Figure 3—figure supplement 3).</p><p>We also now address scaling of these results with network size. In Figure 4—figure supplement 2 we show that the required rate of plasticity increases for smaller network sizes, for two mice (M3, M4).</p><p>Extrapolating the results to large networks was more challenging, but we were able to construct a synthetic population by aligning trials from different mice in pseudo-time (Figure 4—figure supplement 3). Although this analysis extends over only 6 days, it scales to &gt;1000 neurons and shows that the required plasticity continues to decrease as more neurons are added.</p><p>We feel that this report is useful for the community, as many groups are beginning to study drift and plasticity in other brain areas and in other model organisms. We feel that the decoding-based approach to drift is a useful foundation, and that our results will contribute to further experimental and theoretical work on this topic.</p><p>Overall, we would summarize the contributions of our revised work as follows:</p><p>– While there has been speculation on how to reconcile stable representations with drift in neuronal tuning, this study tests these ideas against experimental data.</p><p>– Our work highlights that drift must be structured if it is to preserve population-coding statistics, and our analysis shows that drift dynamics are indeed structured far above chance.</p><p>– We find that drift consists of daily fluctuations around a more stable substructure, which nevertheless changes over weeks to months.</p><p>– We find that some, but not all, drift occurs in a linear coding subspace. This has immediate implications for existing theories of circuit function.</p><p>– Our modelling demonstrates that this structured drift could allow a readout neuron to readily compensate for changes in the neural code, and quantifies the constraints on plasticity and connectivity independently of specific learning rules while also providing a specific example of a plausible model that can operate within these constraints.</p><p>– Our results motivate further experiments to search for neural correlates of error signals between brain areas, which we believe would be required to maintain consistency between drifting representations.</p><p>– Our results also motivate future theoretical treatment of the underlying cause of drift, how it is related to plasticity, learning and biological noise and whether it is expected to be a universal feature of large, adaptive neural circuits.</p><disp-quote content-type="editor-comment"><p>Other comments:</p><p>1) It was not clear to me what happens with the decoders within a session and between days. Do decoders 'jump' between days or stay roughly the same? How does that influence the adaptation rules?</p></disp-quote><p>Agreed. We changed the plotting code so that Figure 4B, Figure 4—figure supplement 1, and figure 4—figure supplement 3 to show discontinuities between days. Per-day fluctuations are present, and can sometimes even lead to improvements across days.</p><p>Overall, sharp &quot;jumps&quot; in the LMS error are rare, since LMS tracks close to optimal performance.</p><disp-quote content-type="editor-comment"><p>2) Legend of Figure 4 and subsection “Biologically plausible weight adjustment can compensate for ongoing reconfiguration of PPC activity”. You repeatedly state that you approach the 'concatenated decoder.' I guess that should be the 'constrained decoder', otherwise it makes no sense to me.</p></disp-quote><p>Thanks; we have changed the caption in Figure 4 to read:</p><p>&quot;a decoder trained over all testing days&quot;.</p><p>[Editors’ note: what follows is the authors’ response to the second round of review.]</p><disp-quote content-type="editor-comment"><p>[…] Points left to address in full:</p><p>1) Please go back and consider the more interesting null model in the other analyses and quantifications in this manuscript. This will improve many other parts of the paper. Please also place this new null model result in the main text of the paper.</p></disp-quote><p>1) We have included a new null model in the main figures with sparsity matched to the data (Figure 3D); this supersedes the original null model and it is discussed in further detail in response to Points 2 and 3 below.</p><p>2) We have used the null model to evaluate levels of plasticity and performance of local ongoing drift compensation with the LMS algorithm.</p><p>3) We have constructed a new rank-constrained model of drift in Figure 4—figure supplement 1, which quantifies the level of constraint needed to best match drift to data.</p><p>4) We have evaluated null models for head direction and velocity; results were similar but we have omitted the quantification because would add numerous figure panels without adding any insight.</p><p>5) We have added text interpreting and discussing the new null models in the main text.</p><disp-quote content-type="editor-comment"><p>2) Regarding the new null model:</p><p>Past evidence has clearly shown that neural tuning (or population activity) changes both randomly (assumed to be due to plasticity noise) and directionally (assumed to be due to feedback and learning). With the new null model, the analyses attempts to rule out a random walk. This is valuable effort. However, please add commentary on how this null model is useful despite ignoring the influence of the systematic, directional changes which were already demonstrated in the past, including the authors' own data, and which have usually been related to ongoing learning.</p></disp-quote><p>We have designed and analyzed a new variation of the (sparsity matched) null model that constrains drift to low rank subspaces and quantifies how rank affects the degradation of the code with respect to static readout weights. This is presented in a new Figure 4—figure supplement 1. As discussed in the revised manuscript, this new analysis shows that drift in the data can be quantified in terms of both a random and a systematic component and that drift is far more systematic than would be expected by chance. By modelling drift as confined to a subspace we are now able to provide and interpret a measure of how systematic the drift is in terms of the subspace rank that best matches the data.</p><p>We note that the review comments here neglect the alignment analysis in the previous version of the manuscript (now in main Figure 4C, D), which again shows evidence of (and quantifies) the systematic and random components of drift.</p><p>We have now extensively modelled, analyzed, interpreted and discussed systematic vs. random drift. Nonetheless, the null model in Figure 3D is useful precisely because it omits systematic changes in the population code. As we outline in the manuscript, the purpose is to illustrate that random, diffusive drift would rapidly degrade a downstream readout. The fact that the null model performs worse than the data confirms that the systematic structure present in the drift makes it far less destructive to a linear readout than expected by chance. The modifications we have made in the revision also now shows that sparsity doesn’t make this finding trivial. Moreover, we still see a slow degradation of decoding within the data, which motivates the later analyses that quantify how much additional plasticity would be required of a downstream area. For the data we have, these analyses together show that in the long run, regardless of a systematic component, drift degrades an optimised static linear readout, indicating a need for ongoing plasticity.</p><p>Finally, to clarify once more: this data was explicitly gathered not during ongoing learning. Behavioral performance had plateaued before imaging began. Any additional change in neural activity is not a feature of measurable behavioral improvement. We posit that systematic changes in activity are a feature of the maintenance of learned behaviors. The original 2017 paper alluded to this ideas but came short of demonstrating them in the analysis. The decoders used in the original paper simply demonstrated the utility of using a large number of cells for decoding a single binary variable: trial type (i.e. decoding a single bit of information). It is highly unlikely that the activity in PPC amounts to only 1 bit. The reviewers will therefore recognise that the success of decoding a single bit doesn’t say much, if anything, about the <bold>extent</bold> to which drift damages or preserves information in a static readout, it simply says that drift doesn’t completely destroy a small amount of information within a limited timescale. It also doesn’t say anything about how readout weights might be learned/maintained.</p><disp-quote content-type="editor-comment"><p>3) Please address in full the expanded review comments sent during the initial appeal. That text is reproduced here:</p><p>Thank you for sending us your thoughts and questions about the reviewer comments. […] Without that, we would have expected that the concatenated decoder would work well.</p></disp-quote><p>It turns out that the reviewer’s assertion about the concatenated decoder is incorrect. In the new null model we now match the sparsity of the activity in the data using the activation patterns themselves. A comparison with the previous (non-sparse) null model is shown in <xref ref-type="fig" rid="respfig1">Author response image 1</xref>.</p><fig id="respfig1"><label>Author response image 1.</label><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-51121-resp-fig1-v2.tif"/></fig><p>We see that the degradation of a concatenated decoder on the sparsity-matched null model is in fact more severe than the original null model. This shows, contrary to the reviewers' intuition, that ‘sparse’ representation of the task variables does not make existence of a multi-day decoder trivial. In fact, it makes its existence statistically less likely.Intuitively, this is because the type of sparseness in the data corresponds to only a small number of cells representing a given range of a task variable (e.g. a handful of cells active in a particular velocity range). Any drift that affects a significant proportion of these cells cannot be compensated by other cells in the population, unlike in a non-sparse case where a given cell may have activity spread over a large range of task space.</p><p>Nonetheless, the reviewer’s challenge was useful because it prompted us to construct a more relevant null model which shows that the structure of drift in the data is even less likely to occur by chance than one might suppose.</p><disp-quote content-type="editor-comment"><p>Second, as it was understood by the reviewers, the manuscript argues that we should be surprised that updating decoder weights with the Widrow and Hoff model works here. From Driscoll, 2017, we have an idea of how rapidly location selectivity changes, and how rapidly a static decoder decays. Given that we know this, how rapidly would you expect to have to change the decoder? We didn't see much in the paper that wasn't just a different way of quantifying the same tuning changes. One reviewer suggested adding more specific null models because they think this would let the authors answer these deeper questions. For example, are all of the neurons smoothly changing their tuning? Do some change fast and others slow, and is this a continuous distribution? Is there coordination between neurons' tuning changes or are neurons changing independently? The current null models are extremes: the shuffle is related to a model where everything changes instantly (obviously wrong), and the same-day decoder is equivalent to there being no changes ever (which we know is wrong from Driscoll, 2017). So, what new have we learned?</p></disp-quote><p>First we stress that these results aren’t the only two contributions of this study; we have enumerated the key contributions below.</p><p>Addressing this point, we have now used the (new) null model of drift to assess how well online compensation in the Widrow-Hoff LMS algorithm might be expected to perform. We find that performance of LMS on a sparsity-matched null model of drift is substantially worse than the data. Thus, the results in this section are far from trivial and cannot be taken for granted. We have quantified these results in the text that accompanied Figure 5:</p><p>&quot;These results suggest that small weight changes could track representational drift in practice. […] This further indicates that drift is highly structured, facilitating online compensation with a local learning rule.&quot;</p><p>Finally, we would remind the reviewers that it is one thing to have a hunch or suspect that something may be possible. It is quite another to explicitly demonstrate it and to find a means for doing so. We thus believe the main value of this specific result is not that it has some kind of ‘shock’ value, but that it is a principled and informative scientific analysis: we established a way to place theoretical bounds on levels of plasticity required to compensate drift, independently of any learning rule (Figure 4); we then showed they could be achieved using a biologically plausible learning rule (Figure 5). Neither of these steps is obvious or trivial. Both are meaningful.</p><disp-quote content-type="editor-comment"><p>Finally, regarding the result that only 6% of neurons are in the top 50% all 10 days: again, we lack the context to know how surprised we should be. If we suppose that the informative neurons are chosen randomly each day, then we'd expect the number of neurons that are in the top 50% for 10 days to be 0.5 ^ 9 = ~0.2%. In that case, 6% is surprisingly high. Looking at Driscoll's Figure 2B, ~40% of neurons keep their place preference for 10 days. In that case, 6% is surprisingly low. In fact, why is it so low? Could this just mean the decoder is under-regularized?</p></disp-quote><p>We used regularization in the linear models. This is now documented fully in the Materials and methods and does not affect the ranking of the ‘best subset’ of cells.</p><p>What’s happening here is the following: neurons with stable tuning peaks can exhibit unstable signal-to-noise ratios. In other words, the location of the maximum firing may change little, but the profile of firing away from the peak can change a lot. As a result, decoders that try to rely on previously good or stable cells eventually suffer when these cells become less reliable.</p><p>Therefore means of assessing tuning curve stability used in Driscoll et al. is not the correct measure for assessing stability with respect to a downstream neuron with fixed synaptic weights. This highlights the importance of the decoding perspective in Loback et al. We now clarify this in the text:</p><p>&quot;For all subjects, no more than 1% of cells were consistently ranked in the top 10%, an no more than 13% in the top 50%. We confirmed that this instability was not due to under-regularization in training (Materials and methods: Best K-Subset Ranking).&quot;</p><p>This instability might seem surprising, since Driscoll et al., 2017, found that ∼40% of cells were tuned to similar preferred locations over time. We find that even this ‘stable’ subset exhibited daily variations in their Signal-to-Noise Ratio (SNR) with respect to task decoding. For example, no more than 8% of neurons that were in the top 25% in terms of tuning-peak stability were also consistently in the top 25% in terms of SNR for all days. If a neuron becomes relatively less reliable, then the weight assigned may become inappropriate for decoding.</p></body></sub-article></article>