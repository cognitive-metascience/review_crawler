<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.1 20151215//EN"  "JATS-archivearticle1.dtd"><article article-type="research-article" dtd-version="1.1" xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink"><front><journal-meta><journal-id journal-id-type="nlm-ta">elife</journal-id><journal-id journal-id-type="publisher-id">eLife</journal-id><journal-title-group><journal-title>eLife</journal-title></journal-title-group><issn pub-type="epub" publication-format="electronic">2050-084X</issn><publisher><publisher-name>eLife Sciences Publications, Ltd</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="publisher-id">34518</article-id><article-id pub-id-type="doi">10.7554/eLife.34518</article-id><article-categories><subj-group subj-group-type="display-channel"><subject>Tools and Resources</subject></subj-group><subj-group subj-group-type="heading"><subject>Neuroscience</subject></subj-group></article-categories><title-group><article-title>A spike sorting toolbox for up to thousands of electrodes validated with ground truth recordings in vitro and in vivo</article-title></title-group><contrib-group><contrib contrib-type="author" equal-contrib="yes" id="author-82273"><name><surname>Yger</surname><given-names>Pierre</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0003-1376-5240</contrib-id><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="fn" rid="equal-contrib1">†</xref><xref ref-type="other" rid="fund5"/><xref ref-type="fn" rid="con1"/><xref ref-type="fn" rid="conf1"/><xref ref-type="other" rid="dataset1"/></contrib><contrib contrib-type="author" equal-contrib="yes" id="author-82263"><name><surname>Spampinato</surname><given-names>Giulia LB</given-names></name><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="fn" rid="equal-contrib1">†</xref><xref ref-type="fn" rid="con2"/><xref ref-type="fn" rid="conf1"/><xref ref-type="other" rid="dataset1"/></contrib><contrib contrib-type="author" equal-contrib="yes" id="author-82271"><name><surname>Esposito</surname><given-names>Elric</given-names></name><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="fn" rid="equal-contrib1">†</xref><xref ref-type="fn" rid="con3"/><xref ref-type="fn" rid="conf1"/><xref ref-type="other" rid="dataset1"/></contrib><contrib contrib-type="author" id="author-103979"><name><surname>Lefebvre</surname><given-names>Baptiste</given-names></name><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="fn" rid="con4"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" id="author-82266"><name><surname>Deny</surname><given-names>Stéphane</given-names></name><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="fn" rid="con5"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" id="author-82267"><name><surname>Gardella</surname><given-names>Christophe</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0003-3204-9012</contrib-id><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="aff" rid="aff2">2</xref><xref ref-type="fn" rid="con6"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" id="author-82268"><name><surname>Stimberg</surname><given-names>Marcel</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-2648-4790</contrib-id><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="fn" rid="con7"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" id="author-82261"><name><surname>Jetter</surname><given-names>Florian</given-names></name><xref ref-type="aff" rid="aff3">3</xref><xref ref-type="fn" rid="con8"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" id="author-82269"><name><surname>Zeck</surname><given-names>Guenther</given-names></name><xref ref-type="aff" rid="aff3">3</xref><xref ref-type="fn" rid="con9"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" id="author-46124"><name><surname>Picaud</surname><given-names>Serge</given-names></name><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="other" rid="fund4"/><xref ref-type="other" rid="fund6"/><xref ref-type="fn" rid="con10"/><xref ref-type="fn" rid="conf1"/><xref ref-type="other" rid="dataset1"/></contrib><contrib contrib-type="author" id="author-82270"><name><surname>Duebel</surname><given-names>Jens</given-names></name><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="other" rid="fund2"/><xref ref-type="fn" rid="con11"/><xref ref-type="fn" rid="conf1"/><xref ref-type="other" rid="dataset1"/></contrib><contrib contrib-type="author" corresp="yes" id="author-15915"><name><surname>Marre</surname><given-names>Olivier</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-0090-6190</contrib-id><email>olivier.marre@gmail.com</email><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="other" rid="fund1"/><xref ref-type="other" rid="fund3"/><xref ref-type="other" rid="fund7"/><xref ref-type="fn" rid="con12"/><xref ref-type="fn" rid="conf1"/><xref ref-type="other" rid="dataset1"/></contrib><aff id="aff1"><label>1</label><institution>Institut de la Vision, INSERM UMRS 968, UPMC UM 80</institution><addr-line><named-content content-type="city">Paris</named-content></addr-line><country>France</country></aff><aff id="aff2"><label>2</label><institution>Laboratoire de Physique Statistique, CNRS, ENS, UPMC, 75005</institution><addr-line><named-content content-type="city">Paris</named-content></addr-line><country>France</country></aff><aff id="aff3"><label>3</label><institution>NMI, Neurophysics Group</institution><addr-line><named-content content-type="city">Reutlingen</named-content></addr-line><country>Germany</country></aff></contrib-group><contrib-group content-type="section"><contrib contrib-type="editor" id="author-12888"><name><surname>Kleinfeld</surname><given-names>David</given-names></name><role>Reviewing Editor</role><aff id="aff4"><institution>University of California, San Diego</institution><country>United States</country></aff></contrib></contrib-group><author-notes><fn fn-type="equal" id="fn1"><p>Institut de la Vision, INSERM UMRS 968, UPMC UM 80, CNRS UMR 7210, Paris. These authors contributed equally to this work. Laboratoire de Physique Statistique, CNRS, ENS, UPMC, 75005 Paris. NMI, Neurophysics Group, Reutlingen, Germany.</p></fn><fn fn-type="con" id="equal-contrib1"><label>†</label><p>These authors contributed equally to this work</p></fn></author-notes><pub-date date-type="publication" publication-format="electronic"><day>20</day><month>03</month><year>2018</year></pub-date><pub-date pub-type="collection"><year>2018</year></pub-date><volume>7</volume><elocation-id>e34518</elocation-id><history><date date-type="received" iso-8601-date="2017-12-20"><day>20</day><month>12</month><year>2017</year></date><date date-type="accepted" iso-8601-date="2018-03-19"><day>19</day><month>03</month><year>2018</year></date></history><permissions><copyright-statement>© 2018, Yger et al</copyright-statement><copyright-year>2018</copyright-year><copyright-holder>Yger et al</copyright-holder><ali:free_to_read/><license xlink:href="http://creativecommons.org/licenses/by/4.0/"><ali:license_ref>http://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>This article is distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use and redistribution provided that the original author and source are credited.</license-p></license></permissions><self-uri content-type="pdf" xlink:href="elife-34518-v2.pdf"/><abstract><object-id pub-id-type="doi">10.7554/eLife.34518.001</object-id><p>In recent years, multielectrode arrays and large silicon probes have been developed to record simultaneously between hundreds and thousands of electrodes packed with a high density. However, they require novel methods to extract the spiking activity of large ensembles of neurons. Here, we developed a new toolbox to sort spikes from these large-scale extracellular data. To validate our method, we performed simultaneous extracellular and loose patch recordings in rodents to obtain ‘ground truth’ data, where the solution to this sorting problem is known for one cell. The performance of our algorithm was always close to the best expected performance, over a broad range of signal-to-noise ratios, in vitro and in vivo. The algorithm is entirely parallelized and has been successfully tested on recordings with up to 4225 electrodes. Our toolbox thus offers a generic solution to sort accurately spikes for up to thousands of electrodes.</p></abstract><kwd-group kwd-group-type="author-keywords"><kwd>electrophysiology</kwd><kwd>silicon probe</kwd><kwd>population recording</kwd><kwd>spike sorting</kwd><kwd>neural ensemble</kwd></kwd-group><kwd-group kwd-group-type="research-organism"><title>Research organism</title><kwd>Mouse</kwd><kwd>Rat</kwd></kwd-group><funding-group><award-group id="fund1"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001665</institution-id><institution>Agence Nationale de la Recherche</institution></institution-wrap></funding-source><award-id>TRAJECTORY</award-id><principal-award-recipient><name><surname>Marre</surname><given-names>Olivier</given-names></name></principal-award-recipient></award-group><award-group id="fund2"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100000780</institution-id><institution>European Commission</institution></institution-wrap></funding-source><award-id>ERC StG 309776</award-id><principal-award-recipient><name><surname>Duebel</surname><given-names>Jens</given-names></name></principal-award-recipient></award-group><award-group id="fund3"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000002</institution-id><institution>National Institutes of Health</institution></institution-wrap></funding-source><award-id>U01NS090501</award-id><principal-award-recipient><name><surname>Marre</surname><given-names>Olivier</given-names></name></principal-award-recipient></award-group><award-group id="fund4"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100001116</institution-id><institution>Foundation Fighting Blindness</institution></institution-wrap></funding-source><principal-award-recipient><name><surname>Picaud</surname><given-names>Serge</given-names></name></principal-award-recipient></award-group><award-group id="fund5"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001665</institution-id><institution>Agence Nationale de la Recherche</institution></institution-wrap></funding-source><award-id>ANR-14-CE13-0003</award-id><principal-award-recipient><name><surname>Yger</surname><given-names>Pierre</given-names></name></principal-award-recipient></award-group><award-group id="fund6"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001665</institution-id><institution>Agence Nationale de la Recherche</institution></institution-wrap></funding-source><award-id>ANR-10-LABX-65</award-id><principal-award-recipient><name><surname>Picaud</surname><given-names>Serge</given-names></name></principal-award-recipient></award-group><award-group id="fund7"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100000780</institution-id><institution>European Commission</institution></institution-wrap></funding-source><award-id>FP7-720270</award-id><principal-award-recipient><name><surname>Marre</surname><given-names>Olivier</given-names></name></principal-award-recipient></award-group><funding-statement>The funders had no role in study design, data collection and interpretation, or the decision to submit the work for publication.</funding-statement></funding-group><custom-meta-group><custom-meta specific-use="meta-only"><meta-name>Author impact statement</meta-name><meta-value>A spike sorting toolbox to quickly and reliably access the activity of thousands of neurons recorded with dense extracellular probes.</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="s1" sec-type="intro"><title>Introduction</title><p>As local circuits represent information using large populations of neurons throughout the brain (<xref ref-type="bibr" rid="bib6">Buzsáki, 2010</xref>), technologies to record hundreds or thousands of them are therefore essential. One of the most powerful and widespread techniques for neuronal population recording is extracellular electrophysiology. Recently, newly developed microelectrode arrays (MEA) have allowed recording of local voltage from hundreds to thousands of extracellular sites separated only by tens of microns (<xref ref-type="bibr" rid="bib3">Berdondini et al., 2005</xref>; <xref ref-type="bibr" rid="bib11">Fiscella et al., 2012</xref>; <xref ref-type="bibr" rid="bib25">Lambacher et al., 2004</xref>), giving indirect access to large neural ensembles with a high spatial resolution. Thanks to this resolution, the spikes from a single neuron will be detected on several electrodes and produce extracellular waveforms with a characteristic spatio-temporal profile across the recording sites. However, this high resolution comes at a cost: each electrode receives the activity from many neurons. To access the spiking activity of individual neurons, one needs to separate the waveform produced by each neuron and identify when it appears in the recording. This process, called spike sorting, has received a lot of attention for recordings with a small number of electrodes (typically, a few tens of electrodes). However, for large-scale and dense recordings, it is still unclear how to extract the spike contributions from extracellular recordings. In particular, for thousands of electrodes, this problem is still largely unresolved.</p><p>Classical spike sorting algorithms cannot process this new type of data for several reasons. First, many algorithms do not take into account that the spikes of a single neuron will evoke a voltage deflection on many electrodes. Second, most algorithms do not scale up to hundreds or thousands of electrodes in vitro and in vivo, because their computation time would increase exponentially with the number of electrodes (<xref ref-type="bibr" rid="bib41">Rossant et al., 2016</xref>). A few algorithms have been designed to process large-scale recordings (<xref ref-type="bibr" rid="bib31">Marre et al., 2012</xref>; <xref ref-type="bibr" rid="bib36">Pillow et al., 2013</xref>; <xref ref-type="bibr" rid="bib35">Pachitariu et al., 2016</xref>; <xref ref-type="bibr" rid="bib27">Leibig et al., 2016</xref>; <xref ref-type="bibr" rid="bib19">Hilgen et al., 2017</xref>; <xref ref-type="bibr" rid="bib7">Chung et al., 2017</xref>; <xref ref-type="bibr" rid="bib22">Jun et al., 2017</xref>), but they have not been tested on real ‘ground truth’ data.</p><p>In ground truth data, one neuron is cherry picked from among all the neurons recorded using an extracellular array using another technique, and simultaneousy recorded. Unfortunately, such data are rare. Dual loose patch and extracellular recordings have been performed for culture of neurons or in cortical slices (<xref ref-type="bibr" rid="bib1">Anastassiou et al., 2015</xref>; <xref ref-type="bibr" rid="bib13">Franke et al., 2015</xref>). However, in this condition, only one or two neurons emit spikes, and this simplifies drastically the spike sorting problem. Ground truth data recorded in vivo are scarce (<xref ref-type="bibr" rid="bib18">Henze et al., 2000</xref>; <xref ref-type="bibr" rid="bib34">Neto et al., 2016</xref>) and in many cases the patch-recorded neuron is relatively far from the extracellular electrodes. As a result, most algorithms have been tested in simulated cases where an artificial template is added at random times to an actual recording. However, it is not clear if this simulated data reproduce the conditions of actual recordings. In particular, waveforms triggered by a given neuron can vary in amplitude and shape, and most simulations do not reproduce this feature of biological data. Also, spike trains of different cells are usually correlated, and these correlations can make extracellular spikes that do overlap.</p><p>Here, we present a novel toolbox for spike sorting in vitro and in vivo, validated on ground truth recordings. Our sorting algorithm is based on a combination of density-based clustering and template matching. To validate our method, we performed experiments where a large-scale extracellular recording was performed while one of the neurons was recorded with a patch electrode. We showed that the performance of our algorithm was always close to an optimal classifier, both in vitro and in vivo. We demonstrate that our sorting algorithm could process recordings from up to thousands of electrodes with similar accuracy. To handle data from thousands of electrodes, we developed a tool automating the step that is usually left to manual curation.</p><p>Our method is a fast and accurate solution for spike sorting for up to thousands of electrodes, and we provide it as a freely available software that can be run on multiple platforms and several computers in parallel. Our ground truth data are also publicly available and will be a useful resource to benchmark future improvements in spike sorting methods.</p></sec><sec id="s2" sec-type="results"><title>Results</title><sec id="s2-1"><title>Spike sorting algorithm</title><p>We developed an algorithm (called SpyKING CIRCUS) with two main steps: a clustering followed by a template matching step (see Materials and methods for details). First, spikes are detected as threshold crossings (<xref ref-type="fig" rid="fig1">Figure 1A</xref>) and the algorithm isolated the extracellular waveforms for a number of randomly chosen spike times. In the following text, we will refer to the extracellular waveforms associated with a given spike time as snippets.</p><fig-group><fig id="fig1" position="float"><object-id pub-id-type="doi">10.7554/eLife.34518.002</object-id><label>Figure 1.</label><caption><title>Main steps of the spike sorting algorithm.</title><p>(<bold>A</bold>) Five randomly chosen electrodes, each of them with its own detection threshold (dash dotted line). Detected spikes, as threshold crossings, are indicated with red markers (<bold>B</bold>) Example of a spike in the raw data. Red: electrodes that can be affected by the spike, that is the ones close enough to the electrode where the voltage peak is the highest; gray: other electrodes that should not be affected. (<bold>C</bold>) Example of two clusters (red and blue)with associated templates. Green points show possible combinations of two overlapping spikes from the two cells for various time delays. (<bold>D</bold>) Graphical illustration of the template matching for in vitro data (see Materials and methods). Every line is a electrode. Grey: real data. Red: sum of the templates added by the template matching algorithm; top to bottom: successive steps of the template matching algorithm. E. Final result of the template matching. Same legend as (<bold>D</bold>, <bold>F</bold>) Examples of the fitted amplitudes for the first component of a given template as a function of time. Each dot correspond to a spike time at which this particular template was fitted to the data. Dashed dotted lines represent the amplitude thresholds (see Materials and methods).</p></caption><graphic mime-subtype="postscript" mimetype="application" xlink:href="elife-34518-fig1-v2"/></fig><fig id="fig1s1" position="float" specific-use="child-fig"><object-id pub-id-type="doi">10.7554/eLife.34518.003</object-id><label>Figure 1—figure supplement 1.</label><caption><title>Schematic of the parallel clustering of the spikes, in a toy example with two electrodes.</title><p>(<bold>A</bold>) Pre-clustering step. The different snippets are sorted according to the electrode where they peak. This divides a set of snippets in <inline-formula><mml:math id="inf1"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mtext>elec</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> groups. Each of these groups is then processed independently. (<bold>B</bold>) Each group of snippets is projected in a low-dimension space, where clustering is performed using a density-based approach (see text and Materials and methods). (<bold>C</bold>) A template is extracted from each cluster and used for the template matching step.</p></caption><graphic mime-subtype="postscript" mimetype="application" xlink:href="elife-34518-fig1-figsupp1-v2"/></fig></fig-group><p>We divided the snippets into groups, depending on their physical positions: for every electrode we grouped together all the spikes having their maximum peak on this electrode. Thanks to this division, the ensemble of spikes was divided into as many groups as there were electrodes. The group associated with electrode <inline-formula><mml:math id="inf2"><mml:mi>k</mml:mi></mml:math></inline-formula> contains all the snippets with a maximum peak on electrode <inline-formula><mml:math id="inf3"><mml:mi>k</mml:mi></mml:math></inline-formula>. It was possible that, even among the spikes peaking on the same electrode, there could be several neurons. We thus performed a clustering separately on each group, in order to separate the different neurons present in a single group.</p><p>For each group, the snippets were first masked: we assumed that a single cell can only influence the electrodes in its vicinity, and only kept the signal on electrodes close enough to the peak (<xref ref-type="fig" rid="fig1">Figure 1B</xref>, see Materials and methods). Due to to this reduction, the memory needed for each clustering did no scale with the total number of electrodes. The snippets were then projected into a lower dimensional feature space using Principal Component Analysis (PCA) (usually five dimensions, see Materials and methods), as is classically done in many spike sorting algorithms (<xref ref-type="bibr" rid="bib41">Rossant et al., 2016</xref>; <xref ref-type="bibr" rid="bib10">Einevoll et al., 2012</xref>). Note that the simple division in groups before clustering allowed us to parallelize the clustering step, making it scalable for even thousands of electrodes. ierreEven if a spike is detected on several electrodes, it is only assigned to the electrode where the voltage peak is the largest: if a spike has its largest peak on electrode 1, but is also detected on electrode 2, it will only be assigned to electrode1 (see <xref ref-type="fig" rid="fig1s1">Figure 1—figure supplement 1</xref>).</p><p>For each group, we performed a density-based clustering inspired by (<xref ref-type="bibr" rid="bib39">Rodriguez and Laio, 2014</xref>) (see Materials and methods). The idea of this algorithm is that the centroid of a cluster in the feature space should have many neighbours, that is a high density of points in their neighborhood. The centroid should also be the point where this density is a local maximum: there should not be a point nearby with a higher density. To formalize this intuition, for each point we measured the average distance of the 100 closest points <inline-formula><mml:math id="inf4"><mml:mrow><mml:mi>r</mml:mi><mml:mi>h</mml:mi><mml:mi>o</mml:mi></mml:mrow></mml:math></inline-formula> (intuitively, this is inversely proportional to the local density of points), and the distance <inline-formula><mml:math id="inf5"><mml:mi>δ</mml:mi></mml:math></inline-formula> to the closest point of higher density (i.e. with a lower <inline-formula><mml:math id="inf6"><mml:mi>ρ</mml:mi></mml:math></inline-formula>). Centroids should have a low <inline-formula><mml:math id="inf7"><mml:mi>ρ</mml:mi></mml:math></inline-formula> and a high <inline-formula><mml:math id="inf8"><mml:mi>δ</mml:mi></mml:math></inline-formula>. We hypothesized that there was a maximum of ten clusters in each group (i.e. at most ten different cells peaking on the same electrode) and took the ten points with the largest <inline-formula><mml:math id="inf9"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo>/</mml:mo></mml:mrow><mml:mi>ρ</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> ratio as the centroids. Each remaining point was then assigned iteratively to the nearest point with highest density, until they were all assigned to the centroids (see Materials and methods for details - note that all the numbers mentioned here are parameters that are tunable in our toolbox).</p><p>Thanks to this method we could find many clusters, corresponding to putative neurons. In many spike-sorting methods, it is assumed that finding clusters is enough to solve the spike-sorting problem (<xref ref-type="bibr" rid="bib7">Chung et al., 2017</xref>). However, this neglects the specific issue of overlapping spikes (see <xref ref-type="fig" rid="fig1">Figure 1C</xref>). When two nearby cells spike synchronously, the extracellular waveforms evoked by each cell will superimpose (<xref ref-type="fig" rid="fig1">Figure 1C</xref>, see also [<xref ref-type="bibr" rid="bib36">Pillow et al., 2013</xref>]). This superimposition of two signals coming from two different cells will distort the feature estimation. As a result, these spikes will appear as points very far away from the cluster associated to each cell. An example of this phenomena is illustrated in <xref ref-type="fig" rid="fig1">Figure 1C</xref>. Blue and red points correspond to the spikes associated to two different cells. In green, we show the spikes of one cell when the waveform of another one was added at different delays. For short delays, the presence of this additional waveform strongly distort the feature estimation. As a result, the corresponding point is far from the initial cluster, and will be missed by the clustering. To overcome this issue, we performed a template matching as the next step of our algorithm.</p><p>For this, we first extracted a template from each cluster. This template is a simplified description of the cluster and is composed of two waveforms. The first one is the average extracellular waveform evoked by the putative cell (<xref ref-type="fig" rid="fig1">Figure 1C</xref>, left and red waveforms). The second is the direction of largest variance that is orthogonal to this average waveform (see Materials and methods). We assumed that each waveform triggered by this cell is a linear combination of these two components. Thanks to these two components, the waveform of the spikes attributed to one cell could vary both in amplitude and in shape.</p><p>At the end of this step, we should have extracted an ensemble of templates (i.e. pairs of waveforms) that correspond to putative cells. Note that we only used the clusters to extract the templates. Our algorithm is thus tolerant to some errors in the clustering. For example, it can tolerate errors in the delineation of the cluster border. The clustering task here is therefore less demanding than in classical spike sorting algorithms where finding the correct cluster borders is essential to minimize the final error rate. By focusing on only getting the cluster centroids, we should thus have made the clustering task easier, but all the the spikes corresponding to one neuron have yet to be found. We therefore used a template matching algorithm to find all the instances where each cell has emitted a spike.</p><p>In this step, we assumed that the templates of different cells spiking together sum linearly and used a greedy iterative approach inspired by the projection pursuit algorithm to match the templates to the raw data (<xref ref-type="fig" rid="fig1">Figure 1D</xref>, see Materials and methods). Within a piece of raw data, we looked for the template whose first component had the highest similarity to the raw signal (here similarity is defined as the scalar product between the first component of the template and the raw data) and matched its amplitude to the signal. If this amplitude falls between pre-determined thresholds (see Materials and methods), we matched and subtracted the two components to the raw signal. These predetermined thresholds reflect the prior that the amplitude of the first component should be around 1, which corresponds to the average waveform evoked by the cell. We then re-iterated this matching process until no more spike could be matched (<xref ref-type="fig" rid="fig1">Figure 1D,E</xref>) (see Materials and methods). We found many examples where allowing amplitude variation wasa desirable feature (see <xref ref-type="fig" rid="fig1">Figure 1F</xref>).</p><p>After this template matching step, the algorithm outputs putative cells, described by the templates, and associated spike trains, that is spike times where the template was matched to the data.</p></sec><sec id="s2-2"><title>Performance on ground truth data</title><p>To test our algorithm, we performed dual recordings (<xref ref-type="fig" rid="fig2">Figure 2A,B</xref>) using both a multielectrode array to record many cells (see schematic on <xref ref-type="fig" rid="fig2">Figure 2A</xref>), and simultaneous loose patch to record the spikes of one of the cell (<xref ref-type="fig" rid="fig2">Figure 2B</xref>). For this cell we know what should be the output of the spike sorting. In vitro, we recorded 18 neurons from 14 retinas with a 252 electrode MEA where the spacing between electrodes was 30 <inline-formula><mml:math id="inf10"><mml:mrow><mml:mi>μ</mml:mi><mml:mtext>m</mml:mtext></mml:mrow></mml:math></inline-formula> (see Materials and methods, (<xref ref-type="bibr" rid="bib43">Spampinato et al., 2018</xref>)). We also generated datasets where we removed the signals of some electrodes, such that the density of the remaining electrodes was either 42 or 60 <inline-formula><mml:math id="inf11"><mml:mrow><mml:mi>μ</mml:mi><mml:mtext>m</mml:mtext></mml:mrow></mml:math></inline-formula> (by removing half or 3 quarters of the electrodes, respectively).</p><fig id="fig2" position="float"><object-id pub-id-type="doi">10.7554/eLife.34518.004</object-id><label>Figure 2.</label><caption><title>Performance of the algorithm on ground truth datasets.</title><p>(<bold>A</bold>) Top: Schematic of the experimental protocol in vitro. A neuron close to the multielectrode array (MEA) recording is recorded in loose patch. Bottom: Image of the patch electrode on top of a 252 electrodes MEA, recording a ganglion cell. (<bold>B</bold>) Top, pink box: loose patch recording showing the spikes of the recorded neuron. Bottom, green box: Extra-cellular recordings next to the loose patched soma. Each line is a different electrode (<bold>C</bold>) Error rate of the algorithm as function of the largest peak amplitude of the ground-truth neuron, recorded extracellularly in vitro. (<bold>D</bold>) Comparison between the error rates produced by the algorithm on different ground truth datasets and the error rates of nonlinear classifiers (Best Ellipsoidal Error Rate) trained to detect the spikes for in vitro data (<xref ref-type="bibr" rid="bib43">Spampinato et al., 2018</xref>). (<bold>E</bold>) Comparison of average performance for all neurons detected by the Optimal Classifier with an error less than 10% (n = 37). F. Same as D. but for in vivo data (<xref ref-type="bibr" rid="bib34">Neto et al., 2016</xref>) (see Materials and methods).</p></caption><graphic mime-subtype="postscript" mimetype="application" xlink:href="elife-34518-fig2-v2"/></fig><p>We then ran the spike sorting algorithm only on the extracellular data, and estimated the error rate (as the mean of false positives and false negatives, see Materials and methods) for the cell recorded in loose patch, where we know where the spikes occurred. The performance of the algorithm is limited not only by imperfections of the algorithm, but also by several factors related to the ground truth data themselves. In particular, some of the cells recorded with loose patch can evoke only a small spike on the extracellular electrode, for example if they are far from the nearest electrode or if their soma is small (<xref ref-type="bibr" rid="bib5">Buzsáki, 2004</xref>). If a spike of the patch-recorded cell triggers a large voltage deflection, this cell should be easy to detect. However, if the triggered voltage deflection is barely detectable, even the best sorting algorithm will not perform well. Looking at <xref ref-type="fig" rid="fig2">Figure 2C</xref>, for in vitro data (see Materials and methods), we found that there was a correlation between the error rate of our algorithm and the size of the extracellular waveform evoked by the spikes of the patch-recorded cell: the higher the waveform, the lower the error rate.</p><p>We then asked if our algorithm is close to the ‘best’ possible performance, that is the only errors are due to intrinsic limitations in the ground truth data (e.g. small waveform size).</p><p>There is no method to exactly estimate this best possible performance. However, a proxy can be found by training a nonlinear classifier on the ground truth data (<xref ref-type="bibr" rid="bib17">Harris et al., 2000</xref>; <xref ref-type="bibr" rid="bib41">Rossant et al., 2016</xref>). We trained a nonlinear classifier on the extracellular waveforms triggered by the spikes of the recorded cell, similar to (<xref ref-type="bibr" rid="bib17">Harris et al., 2000</xref>; <xref ref-type="bibr" rid="bib41">Rossant et al., 2016</xref>) (referred to as the Best Ellipsoidal Error Rate (BEER), see Materials and methods). This classifier ‘knows’ where the true spikes are and simply quantifies how well they can be separated from the other spikes based on the extracellular recording. Note that, strictly speaking, this BEER estimate is not a lower bound of the error rate. It assumes that spikes can be all found inside a region of the feature space delineated by ellipsoidal boundaries. As we have explained above, spikes that overlap with spikes from another cell will probably be missed and this ellipsoidal assumption is also likely to be wrong in case of bursting neurons or electrode-tissue drifts. However, we used the BEER estimate because it has been used in several papers describing spike sorting methods (<xref ref-type="bibr" rid="bib17">Harris et al., 2000</xref>; <xref ref-type="bibr" rid="bib41">Rossant et al., 2016</xref>) and has been established as a commonly accepted benchmark. In addition, because we used rather stationary recordings (few minutes long, see Materials and methods), we did not see strong electrode-tissue drifts.</p><p>We estimated the error made by the classifier and found that the performance of our algorithm almost always was in the same order of magnitude as the performance of this classifier, (<xref ref-type="fig" rid="fig2">Figure 2D</xref>, left; <inline-formula><mml:math id="inf12"><mml:mrow><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mn>0.89</mml:mn></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf13"><mml:mrow><mml:mi>p</mml:mi><mml:mo>&lt;</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>5</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>) over a broad range of spike sizes. For 37 neurons with large waveform sizes (above) the average error of the classifier is 2.7% and the one for our algorithm is 4.8% (see <xref ref-type="fig" rid="fig2">Figure 2E</xref>). For 22 neurons with lower spike size (below), the average error of the classifier is 11.1% and the one for our algorithm is 15.2%. This suggests that our algorithm reached an almost optimal performance on this in vitro data.</p><p>We also used similar ground truth datasets recorded in vivo in rat cortex using dense silicon probes with either 32 or 128 recording sites (<xref ref-type="bibr" rid="bib34">Neto et al., 2016</xref>). With the same approach as for in vitro data, we also found that our algorithm achieved near optimal performance (<xref ref-type="fig" rid="fig2">Figure 2F</xref>, right; <inline-formula><mml:math id="inf14"><mml:mrow><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mn>0.92</mml:mn></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf15"><mml:mrow><mml:mi>p</mml:mi><mml:mo>&lt;</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>5</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>), although there were only two recordings where the spike size of the patch-recorded neuron was large enough to be sorted with a good accuracy. For only two available neurons with low optimal error rate, the average error of the classifier is 13.9% and the one for our algorithm is 14.8%. For 24 neurons with lower spike size, the average error of the classifier is 64.0% and the one for our algorithm is 67.8%. Together, these results show that our algorithm can reach a satisfying performance (i.e. comparing to the classifier error) over a broad range of spike sizes, for both in vivo and in vitro recordings.</p><p>We also compared our performance to the Kilosort algorithm (<xref ref-type="bibr" rid="bib35">Pachitariu et al., 2016</xref>) and found similar performances (4.4% on average over all non-decimated neurons for SpyKING CIRCUS against 4.2% for Kilosort). Because Kilosort used a GPU, it could be run faster than our algorithm on a single machine: on a 1 hr recording with 252 electrodes, Kilosort can achieve a four times speedup on a standard desktop machine (see Materials and methods). But without using a GPU, Kilosort was only marginally faster (1.5 speedup), and slower if we started using several cores of the machine. However, is it worth noticing that the speedup of Kilosort comes at the cost of an increased usage of memory. Kilosort used 32 GB of RAM for a maximal number of 500 neurons, while our algorithm had a much lower memory footprint, because of design choices. We have therefore found a trade off where execution speed is slightly slower, but much less memory is used. Thanks to this, we could run our algorithm to process recordings with thousands of electrodes, while Kilosort does not scale up to this number. In the next section, we demonstrate that our algorithm still works accurately at that scale.</p></sec><sec id="s2-3"><title>Scaling up to thousands of electrodes</title><p>A crucial condition to process recordings performed with thousands of electrodes is that every step of the algorithm should be run in parallel over different CPUs. The clustering step of our algorithm was run in parallel on different subsets of snippets as explained above. The template matching step could be run independently on different blocks of data, such that the computing time only scaled linearly with the data length. Each step of the spike sorting algorithm was therefore parallelized. The runtime of the full algorithm decreased proportionally with the numbers of CPU cores available (<xref ref-type="fig" rid="fig3">Figure 3A</xref>, grey area indicates where the software is ‘real-time’ or faster). As a result, the sorting algorithm could process 1 hr of data recorded with 252 electrodes in 1 hr with 9 CPU cores (spread over three computers) (<xref ref-type="fig" rid="fig3">Figure 3A,B</xref>). It also scaled up linearly with the number of electrodes (<xref ref-type="fig" rid="fig3">Figure 3B</xref>), and with the number of templates (<xref ref-type="fig" rid="fig3">Figure 3C</xref>). It was therefore possible to run it on long recordings with more than 4000 electrodes, and the runtime could be be divided by simply having more CPUs available.</p><fig id="fig3" position="float"><object-id pub-id-type="doi">10.7554/eLife.34518.005</object-id><label>Figure 3.</label><caption><title>Scaling to thousands of electrodes.</title><p>(<bold>A</bold>) Execution time as function of the number of processors for a 90 min dataset in vitro with 252 electrodes, expressed as a real-time ratio, that is the number of hours necessary to process one hour of data. (<bold>B</bold>) Execution time as function of the number of electrodes for a 30 min dataset recorded in vitro with 4225 electrodes. (<bold>C</bold>) Execution time as function of the number of templates for a 10-min synthetic dataset with 30 electrodes. (<sc><bold>D</bold></sc>) Creation of ‘hybrid’ datasets: chosen templates are injected elsewhere in the data as new templates. Dashed-dotted lines shows the detection threshold on the main electrode for a given template, and normalized amplitude is expressed relative to this threshold (see Materials and methods). (<bold>E</bold>) Mean error rate as function of the firing rate of injected templates, in various datasets. Errors bars show standard error over eight templates (<bold>F</bold>) Error rate as function of the normalized amplitude of injected templates, in various datasets. Errors bars show standard error over nine different templates (<bold>G</bold>) Injected and recovered cross-correlation value between pairs of neurons for five templates injected at 10 Hz, with a normalized amplitude of 2 (see Materials and methods).</p></caption><graphic mime-subtype="postscript" mimetype="application" xlink:href="elife-34518-fig3-v2"/></fig><p>To test the accuracy of our algorithm on 4225 electrodes, we generated hybrid ground truth datasets where artificial spikes were added to real recordings performed on mouse retina in vitro (see Materials and methods). We ran the spike-sorting algorithm on different datasets, picked some templates and used them to create new artificial templates that we added at random places to the real recordings (see Materials and methods). This process, as shown in <xref ref-type="fig" rid="fig3">Figure 3D</xref> allowed us to generate ‘hybrid’ datasets were we know the activity of a number of artificially injected neurons. We then ran our sorting algorithm on these datasets and measured if the algorithm was able to find at which times the artificial spikes were added. We counted a false-negative error when an artificial spike was missed and a false-positive error when the algorithm detected a spike when there was not any (see Materials and methods). Summing these two types of errors, the total error rate remained below 5% for all the spikes whose size was significantly above spike detection threshold (normalized amplitude corresponds to the spike size divided by the spike threshold). Error rates were similar for recordings with 4255 electrodes in vitro, 128 electrodes in vivo or 252 electrodes in vitro. Performance did not depend on the firing rate of the injected templates (<xref ref-type="fig" rid="fig3">Figure 3E</xref>) and only weakly on the normalized amplitude of the templates (<xref ref-type="fig" rid="fig3">Figure 3F</xref>), as long as it was above the spike threshold. The accuracy of the algorithm is therefore invariant to the size of the recordings.</p><p>A crucial issue when recording thousands of densely packed electrodes is that more and more spikes overlap with each other. If an algorithm misses overlapping spikes, then the estimation of the amplitude of correlations between cells will be biased. To test if our method was able to solve the problem of overlapping spikes and thus estimate correlations properly, we generated hybrid datasets where we injected templates with a controlled amount of overlapping spikes (see Materials and methods). We then ran the sorting algorithm and compared the injected spike trains and the spike trains recovered by SpyKING CIRCUS. We then compared the correlation between both pairs. If some overlapping spikes were missed by the algorithm, the correlation between the sorted spike trains should be lower than the correlation between the injected spike trains. We found that our method was always able to estimate the pairwise correlation between the spike trains with no underestimation (<xref ref-type="fig" rid="fig3">Figure 3G</xref>). Overlapping spikes were therefore correctly detected by our algorithm. The ability of our template matching algorithm to resolve overlapping spikes thus allowed an unbiased estimation of correlations between spike trains, even for thousands of electrodes.</p><p>These different tests, described above, show that SpyKING CIRCUS reached a similar performance for 4225 electrodes than for hundreds electrodes, where our ground truth recordings showed that performance was near optimal. Our algorithm is therefore also able to sort accurately recordings from thousands of electrodes.</p></sec><sec id="s2-4"><title>Automated merging</title><p>As in most spike-sorting algorithms, our algorithm may split one cell into several units. After running the entire algorithm, it is therefore necessary to merge together the units corresponding to the same cell. However, for hundreds or thousands of electrodes, going through all the pairs of units and merging them by hand would take a substantial amount of time. To overcome this problem, we designed a tool to merge automatically many units at once so that the time spent on this task does not scale with the number of electrodes and this allows us to automate this final step.</p><p>Units that likely belong to the same cell (and thus should be merged) have templates that look alike and in addition, the combined cross-correlogram between the two cell’s spike trains shows a clear dip near 0 ms, indicating that the merged spike trains do not show any refractory period violation (<xref ref-type="fig" rid="fig4">Figure 4A</xref>, blue example). In order to automate this merging process, we formalized this intuition by estimating for each pair of units two factors that reflect if they correspond to the same cell or not. For each pair of templates, we estimated first the similarity between templates and second the dip in the center of the cross-correlogram. This dip is measured as the difference between the geometrical mean of the firing rate <inline-formula><mml:math id="inf16"><mml:mi>ϕ</mml:mi></mml:math></inline-formula> (i.e. the baseline of the cross-correlogram) and the value of the cross-correlogram at delay 0 ms, <inline-formula><mml:math id="inf17"><mml:mrow><mml:mrow><mml:mo>⟨</mml:mo> <mml:mrow><mml:mi>C</mml:mi><mml:mi>C</mml:mi></mml:mrow> <mml:mo>⟩</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> (see Materials and methods and right insets in <xref ref-type="fig" rid="fig4">Figure 4A</xref>).</p><fig id="fig4" position="float"><object-id pub-id-type="doi">10.7554/eLife.34518.006</object-id><label>Figure 4.</label><caption><title>Automated merging.</title><p>(<bold>A</bold>) Dip estimation (y-axis) compared to the geometrical mean of the firing rate (x-axis) for all pairs of units and artificially generated and split spike trains (see Materials and methods). Blue: pairs of templates originating from thesame neuron that have to be merged. Orange: pairs of templates corresponding to different cells. Panels on the right: for two chosen pairs, one that needs to be merged (in blue, top panel) and one should not be merged (orange, bottom panel) the full cross-correlogram and the geometrical mean of the firing rate (dashed line). The average correlation is estimated in the temporal window defined by the gray area. (<bold>B</bold>) Same as A, for a ground truth dataset. Blue points: points that need to be merged. Green points: pairs that should not be merged. Orange points: pairs where our ground truth data does not allow us telling if the pair should be merged or not. The gray area corresponds to the region where pairs are merged by the algorithm. Inset: zoom on one region of the graph. (<bold>C</bold>) Average error rate in the case where the decision of merging units was guided by the ground truth data (left) against the automated strategy designed here (right).</p></caption><graphic mime-subtype="postscript" mimetype="application" xlink:href="elife-34518-fig4-v2"/></fig><p>We plotted for each pair with high similarity the dip estimation against the geometrical mean of their firing rates. If there is a strong dip in the cross-correlogram (quantified by <inline-formula><mml:math id="inf18"><mml:mrow><mml:mi>ϕ</mml:mi><mml:mo>−</mml:mo><mml:mrow><mml:mo>⟨</mml:mo> <mml:mrow><mml:mi>C</mml:mi><mml:mi>C</mml:mi></mml:mrow> <mml:mo>⟩</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>), the dip quantification and the geometrical mean, <inline-formula><mml:math id="inf19"><mml:mi>ϕ</mml:mi></mml:math></inline-formula>, should be almost equal, and the corresponding pair should thus be close to the diagonal in the plot.</p><p>In one example, where we artificially split synthetic spike trains (<xref ref-type="fig" rid="fig4">Figure 4A</xref>; see Materials and methods), we could clearly isolate a cluster of pairs lying near this diagonal, corresponding to the pairs that needed to be merged (<xref ref-type="fig" rid="fig4">Figure 4A</xref> right panels). We have designed a GUI such the user can automatically select this cluster and merge all the pairs at once. Thanks to this, with a single manipulation by the user, all the pairs are merged.</p><p>We then tested this method on our in vitro ground truth data. In these recordings, the cell recorded with loose patch might be split by the algorithm between different spike trains. We can determine the units that correspond to the patch-recorded cell. For one particular neuron taken from our database, we can visualize all the units that need to be merged together (blue points in <xref ref-type="fig" rid="fig4">Figure 4B</xref>), and that should not be merged with units corresponding to other cells (green pairs in <xref ref-type="fig" rid="fig4">Figure 4B</xref>). For all the other cells, we do not have access to a ground truth, and thus cannot decide if the pairs should be merged or not (orange pairs in <xref ref-type="fig" rid="fig4">Figure 4B</xref>).</p><p>To automate the merging process entirely, we defined two simple rules to merge two units: first, their similarity should be above a threshold (similarity threshold, 0.8 in our experiments). Second, the dip estimation for this pair should be close to the geometrical mean of firing rates, that is their difference should be below a threshold (dip threshold). In practice, the corresponding point in <xref ref-type="fig" rid="fig4">Figure 4B</xref> should be above a line parallel to the diagonal. We used these rules to perform a fully automatic merging of all units. We then estimated the error rate for the ground truth cell, in the same way as the previous section. We also estimated the lowest error rate possible error rate by merging the units using the ground truth data for guidance (Best Merges, see aterials and m). We found that the error rate obtained with our automated method was close to this best error rate (<xref ref-type="fig" rid="fig4">Figure 4C</xref>). We have therefore automated the process of merging spike trains while keeping a low error rate. The performance did not vary much with the values of the two parameters (similarity threshold and dip threshold), and we used the same parameters for all the different datasets. This shows that the sorting can be fully automated while limiting the error rate to a small value. We thus have a solution to fully automate the sorting, including all the decisions that need to be taken during the manual curation step. However, because we used cross-correlograms in order to help automate the merging process, it is worth noticing that one can no longer use cross-correlograms as a validation metric.</p></sec></sec><sec id="s3" sec-type="discussion"><title>Discussion</title><p>We have shown that our method, based on density-based clustering and template matching, allows sorting spikes from large-scale extracellular recordings both in vitro and in vivo. We tested the performance of our algorithm on ‘ground truth' datasets, where one neuron is recorded both with extracellular recordings and with a patch electrode. We showed that our performance was close to an optimal nonlinear classifier, trained using the true spike trains. Our algorithm has also been tested on purely synthetic datasets (<xref ref-type="bibr" rid="bib15">Hagen et al., 2015</xref>) and similar results were obtained (data not shown). Note that tests were performed by different groups on our algorithm and show its high performance on various datasets (see <ext-link ext-link-type="uri" xlink:href="http://spikesortingtest.com/">http://spikesortingtest.com/</ext-link> and <ext-link ext-link-type="uri" xlink:href="http://phy.cortexlab.net/data/sortingComparison/">http://phy.cortexlab.net/data/sortingComparison/</ext-link>). Our algorithm is entirely parallelized and could therefore handle long datasets recorded with thousands of electrodes. Our code has already been used by other groups (<xref ref-type="bibr" rid="bib9">Denman et al., 2017</xref>; <xref ref-type="bibr" rid="bib33">Mena et al., 2017</xref>; <xref ref-type="bibr" rid="bib7">Chung et al., 2017</xref>; <xref ref-type="bibr" rid="bib45">Wilson et al., 2017</xref>) and is available as a complete multi-platform, open source software for download (<ext-link ext-link-type="uri" xlink:href="http://spyking-circus.rtfd.org">http://spyking-circus.rtfd.org</ext-link>) with a complete documentation. Note that all the parameters mentioned in the description of the algorithm can be modified easily to work with different kinds of data. We have made all the ground truth data available for download (see Source Code section in Materials and methods), so that improvements in our algorithm as well as alternative solutions could be benchmarked easily in the future.</p><p>Classical approaches to the spike sorting problem involve extracting some features from each detected spike (<xref ref-type="bibr" rid="bib21">Hubel, 1957</xref>; <xref ref-type="bibr" rid="bib32">Meister et al., 1994</xref>; <xref ref-type="bibr" rid="bib28">Lewicki, 1994</xref>; <xref ref-type="bibr" rid="bib10">Einevoll et al., 2012</xref>; <xref ref-type="bibr" rid="bib38">Quiroga et al., 2004</xref>; <xref ref-type="bibr" rid="bib20">Hill et al., 2011</xref>; <xref ref-type="bibr" rid="bib37">Pouzat et al., 2002</xref>; <xref ref-type="bibr" rid="bib29">Litke et al., 2004</xref>; <xref ref-type="bibr" rid="bib7">Chung et al., 2017</xref>) and clustering the spikes in the feature space. In this approach, the spike sorting problem is reduced to a clustering problem and this introduces several major problems. First, to assign the spikes to the correct cell, the different cellsmust be separated in the feature space. Finding the exact borders of each cell in the feature space is a hard task that cannot be easily automated (but see [<xref ref-type="bibr" rid="bib7">Chung et al., 2017</xref>]). Second, running a clustering algorithm on data with thousands of electrodes is very challenging. Finally, overlapping spikes will appear as strong deviations in the feature space and will therefore be missed in this approach. These three issues preclude the use of this approach for large-scale recordings with dense arrays of electrodes. In comparison, here we have parallelized the clustering step efficiently, using a template matching approach, so that we only needed to infer the centroid of each cluster and not their precise borders. The template matching approach also allowed us to deconvolve overlapping spikes in a fast, efficient and automated manner. Some template matching approaches have been previously tested, mostly on in vitro data (<xref ref-type="bibr" rid="bib31">Marre et al., 2012</xref>; <xref ref-type="bibr" rid="bib36">Pillow et al., 2013</xref>; <xref ref-type="bibr" rid="bib14">Franke et al., 2015b</xref>) but were not validated on ground truth datasets like the ones we acquired here. Also, they only had one waveform for each template, which did not allow any variation in the shape of the spike, while we have designed our template matching method to take into account not only variation in the amplitude of the spike waveform, but also in shape. Finally, several solutions did not scale up to thousands of electrodes. All GPU-based algorithms (<xref ref-type="bibr" rid="bib35">Pachitariu et al., 2016</xref>; <xref ref-type="bibr" rid="bib26">Lee et al., 2017</xref>; <xref ref-type="bibr" rid="bib22">Jun et al., 2017</xref>) only scale for a few hundreds channels, and face severe memory issues for larger probes.</p><p>Finally, a common issue when sorting spikes from hundreds or thousands of electrodes is the time spent on manual curation of the data. Here, we have designed a tool to automate this step by merging units corresponding to the same cell all at once, based onthe cross-correlogram between cells and the similarity between their templates. Having an objective criterion for merging spike trains not only speeds up the manual curation time, it also makes the results less sensitive to human errors and variability in decisions. In some cases, it might be necessary to take into account additional variables that are specific to the experiment, but even then our tool will still significantly reduce the time spent on manual curation.</p><p>Our method is entirely parallel and can therefore be run in ‘real time’ (i.e. 1 hr of recording processed in 1 hr) with enough computer power. This paves the way towards online spike sorting for large-scale recordings. Several applications, likebrain machine interfaces, or closed-loop experiments (<xref ref-type="bibr" rid="bib12">Franke et al., 2012</xref>; <xref ref-type="bibr" rid="bib16">Hamilton et al., 2015</xref>; <xref ref-type="bibr" rid="bib2">Benda et al., 2007</xref>), will require an accurate online spike sorting. This will require adapting our method to process data ‘on the fly’, processing new data blocks when they become available and adapting the shape of the templates over time.</p></sec><sec id="s4" sec-type="materials|methods"><title>Materials and methods</title><sec id="s4-1"><title>Experimental recordings</title><sec id="s4-1-1"><title>In vitro recordings with 252 or 4225 electrodes</title><p>Retinal tissue was obtained from adult (8 weeks old) male Long-Evans rat (Rattus norvegicus) or mouse (mus musculus, 4–9 weeks old) and continuously perfused with Ames Solution (Sigma-Aldrich) and maintained at 32 C. Ganglion cell spikes were recorded extracellularly from a multielectrode array with 252 electrodes spaced 30 or 60 <inline-formula><mml:math id="inf20"><mml:mrow><mml:mi>μ</mml:mi><mml:mtext>m</mml:mtext></mml:mrow></mml:math></inline-formula> apart (Multi-Channel Systems) or with 4225 electrodes arranged in a 2D grid and spacedby 16 <inline-formula><mml:math id="inf21"><mml:mrow><mml:mi>μ</mml:mi><mml:mtext>m</mml:mtext></mml:mrow></mml:math></inline-formula> (<xref ref-type="bibr" rid="bib45">Wilson et al., 2017</xref>),4] at a sampling rate of 20 kHz. Experiments were performed in accordance with institutional animal care standards.</p><p>For the ground truth recordings, electrophysiological recordings were obtained from ex vivo isolated retinae of rd1 mice (4/5 weeks old). The retinal tissue was placed in AMES medium (Sigma-Aldrich, St Louis, MO; A1420) bubbled with 95% <inline-formula><mml:math id="inf22"><mml:mrow><mml:msub><mml:mtext>O</mml:mtext><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and 5% <inline-formula><mml:math id="inf23"><mml:mrow><mml:msub><mml:mstyle displaystyle="true" mathsize="140%"><mml:mrow><mml:mtext>CO</mml:mtext></mml:mrow></mml:mstyle><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> at room temperature, on a MEA (10 <inline-formula><mml:math id="inf24"><mml:mrow><mml:mi>μ</mml:mi><mml:mtext>m</mml:mtext></mml:mrow></mml:math></inline-formula> electrodes spaced by 30 <inline-formula><mml:math id="inf25"><mml:mrow><mml:mi>μ</mml:mi><mml:mtext>m</mml:mtext></mml:mrow></mml:math></inline-formula>; Multichannel Systems, Reutlingen, Germany) with ganglion cells layer facing the electrodes. Borosilicate glass electrodes (BF100-50, Sutter instruments) were filled with AMES with a final impedance of 6–9 M<inline-formula><mml:math id="inf26"><mml:mi>Ω</mml:mi></mml:math></inline-formula>. Cells were imaged with a customized inverted DIC microscope (Olympus BX 71) mounted with a high sensitivity CCD Camera (Hamamatsu ORCA −03G) and recorded with an Axon Multiclamp 700B patch clamp amplifier set in current zero mode. We used rd1 mice because going through the photoreceptor layer with the patch pipette was easier than for a wild-type mouse.</p><p>For the data shown in <xref ref-type="fig" rid="fig1">Figures 1</xref> and <xref ref-type="fig" rid="fig3">3</xref>, we used a recording of 130 min. For the data shown in <xref ref-type="fig" rid="fig2">Figure 2A</xref>, 16 neurones were recorded over 14 intact retinas. Recording durations all lasted 5 min. The thresholds for the detection of juxta-cellular spikes were manually adjusted for all the recordings (<xref ref-type="bibr" rid="bib43">Spampinato et al., 2018</xref>)</p></sec><sec id="s4-1-2"><title>In vivo recordings with 128 electrodes</title><p>We use the freely available datasets provided by (<xref ref-type="bibr" rid="bib34">Neto et al., 2016</xref>). Those are 32 or 128 dense silicon probes recordings (20 <inline-formula><mml:math id="inf27"><mml:mrow><mml:mi>μ</mml:mi><mml:mtext>m</mml:mtext></mml:mrow></mml:math></inline-formula> spacing) at 30 kHz performed in rat visual cortex, combined with juxta-cellular recordings. The dataset gave us a total of 13 neurons for <xref ref-type="fig" rid="fig2">Figure 2</xref>.C with recordings between 4 and 10 min each. Similarly to the in vitro case, the detection thresholds for the juxta-cellular spikes were manually adjusted based on the data provided by <xref ref-type="bibr" rid="bib34">Neto et al. (2016</xref>) and on spike-triggered waveforms. For the validation with ‘hybrid’ dataset, shown in <xref ref-type="fig" rid="fig3">Figure 3</xref>, we used the longest dataset recorded with 128 electrodes.</p></sec></sec><sec id="s4-2"><title>Details of the algorithm</title><p>In the following, we consider that we have <inline-formula><mml:math id="inf28"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mtext>elec</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> electrodes, acquired at a sampling rate <inline-formula><mml:math id="inf29"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mtext>rate</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. Every electrode <inline-formula><mml:math id="inf30"><mml:mi>k</mml:mi></mml:math></inline-formula> is located at a physical position <inline-formula><mml:math id="inf31"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>p</mml:mi></mml:mstyle><mml:mi>k</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula> in a 2D space (extension to 3D probes would be straightforward). The aims of our algorithm is to decompose the signal as a linear sum of spatio-temporal kernels or ‘templates’ (see <xref ref-type="disp-formula" rid="equ1">equation 1</xref>).<disp-formula id="equ1"><label>(1)</label><mml:math id="m1"><mml:mrow><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>s</mml:mi></mml:mstyle><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:munder></mml:mstyle><mml:mtext> </mml:mtext><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mi>j</mml:mi></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mi>b</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>v</mml:mi></mml:mstyle><mml:mi>j</mml:mi></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>e</mml:mi></mml:mstyle><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:math></disp-formula>where <inline-formula><mml:math id="inf32"><mml:mrow><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>s</mml:mi></mml:mstyle><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula> is the signal recorded over <inline-formula><mml:math id="inf33"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mtext>elec</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> electrodes and over multiple time points. <inline-formula><mml:math id="inf34"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mi>j</mml:mi></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf35"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>v</mml:mi></mml:mstyle><mml:mi>j</mml:mi></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula> are the two components of the template associated to each cell. They represent the waveform triggered on the electrodes by cell <inline-formula><mml:math id="inf36"><mml:mi>j</mml:mi></mml:math></inline-formula>. Times <inline-formula><mml:math id="inf37"><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> are the putative spike times over all the electrodes. <inline-formula><mml:math id="inf38"><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf39"><mml:mrow><mml:msub><mml:mi>b</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> are the amplitude factors for spike time <inline-formula><mml:math id="inf40"><mml:mrow><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> for the template <inline-formula><mml:math id="inf41"><mml:mi>j</mml:mi></mml:math></inline-formula>, and <inline-formula><mml:math id="inf42"><mml:mrow><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>e</mml:mi></mml:mstyle><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula> is the background noise. reNote that at a given spike time <inline-formula><mml:math id="inf43"><mml:mrow><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, it is likely that only a couple of cells fire a spike. Only these cells will therefore have <inline-formula><mml:math id="inf44"><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf45"><mml:mrow><mml:msub><mml:mi>b</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> different from zero. For all the other ones, these coefficients are zero simply because the cell does not fire at this time.</p><p>The algorithm can be divided into two main steps, described below. After a preprocessing stage, we first run a clustering algorithm to extract a dictionary of ‘templates’ from the recording. Second, we use these templates to decompose the signal with a template-matching algorithm. We assume that a spike will only influence the extracellular signal over a time window of size <inline-formula><mml:math id="inf46"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> (typically 2 ms for in vivo and 5 ms for in vitro data) and only electrodes whose distance to the soma is below <inline-formula><mml:math id="inf47"><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> (typically for in vivo and for in vitro data). For every electrode <inline-formula><mml:math id="inf48"><mml:mi>k</mml:mi></mml:math></inline-formula> centered on <inline-formula><mml:math id="inf49"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>p</mml:mi></mml:mstyle><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, we define <inline-formula><mml:math id="inf50"><mml:mrow><mml:msup><mml:mi>G</mml:mi><mml:mi>k</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> as the ensemble of nearby electrodes <inline-formula><mml:math id="inf51"><mml:mi>l</mml:mi></mml:math></inline-formula> such that <inline-formula><mml:math id="inf52"><mml:mrow><mml:mo>|</mml:mo><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>p</mml:mi></mml:mstyle><mml:mi>k</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>p</mml:mi></mml:mstyle><mml:mi>l</mml:mi></mml:msub><mml:msub><mml:mo>|</mml:mo><mml:mn>2</mml:mn></mml:msub><mml:mo>≤</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. The key parameters of the algorithmare summarized in <xref ref-type="table" rid="table1">Table 1</xref>.</p><table-wrap id="table1" position="float"><object-id pub-id-type="doi">10.7554/eLife.34518.007</object-id><label>Table 1.</label><caption><title>Table of all the variables and notations found in the algorithm.</title></caption><table frame="hsides" rules="groups"><thead><tr><th valign="top">Variable</th><th valign="top">Explanation</th><th valign="top">Default value</th></tr></thead><tbody><tr><td style="author-callout-style-b8" valign="top"/><td style="author-callout-style-b8" valign="top">Generic notations</td><td style="author-callout-style-b8" valign="top"/></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf53"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mtext>elec</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Number of electrodes</td><td valign="top"/></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf54"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>p</mml:mi></mml:mstyle><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>k</mml:mi></mml:mstyle></mml:msub></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Physical position of electrode <inline-formula><mml:math id="inf55"><mml:mi>k</mml:mi></mml:math></inline-formula> [<inline-formula><mml:math id="inf56"><mml:mi>μ</mml:mi></mml:math></inline-formula>m]</td><td valign="top"/></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf57"><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Ensemble of nearby electrodes for electrode <inline-formula><mml:math id="inf58"><mml:mi>k</mml:mi></mml:math></inline-formula> [<inline-formula><mml:math id="inf59"><mml:mi>μ</mml:mi></mml:math></inline-formula>m]</td><td valign="top"/></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf60"><mml:mrow><mml:msubsup><mml:mi>N</mml:mi><mml:mrow><mml:mtext>neigh</mml:mtext></mml:mrow><mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Cardinal of <inline-formula><mml:math id="inf61"><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula></td><td valign="top"/></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf62"><mml:mrow><mml:msub><mml:mi>θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Spike detection threshold for electrode <inline-formula><mml:math id="inf63"><mml:mi>k</mml:mi></mml:math></inline-formula> [<inline-formula><mml:math id="inf64"><mml:mi>μ</mml:mi></mml:math></inline-formula>V]</td><td valign="top"/></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf65"><mml:mrow><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>s</mml:mi></mml:mstyle><mml:mo>(</mml:mo><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>t</mml:mi></mml:mstyle><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Raw data [<inline-formula><mml:math id="inf66"><mml:mi>μ</mml:mi></mml:math></inline-formula>V]</td><td valign="top"/></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf67"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mi>j</mml:mi></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula></p></td><td valign="top">First component of the template for neuron <inline-formula><mml:math id="inf68"><mml:mi>j</mml:mi></mml:math></inline-formula> [<inline-formula><mml:math id="inf69"><mml:mi>μ</mml:mi></mml:math></inline-formula>V]</td><td valign="top"/></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf70"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>v</mml:mi></mml:mstyle><mml:mi>j</mml:mi></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Second component of the template for neuron <inline-formula><mml:math id="inf71"><mml:mi>j</mml:mi></mml:math></inline-formula> [<inline-formula><mml:math id="inf72"><mml:mi>μ</mml:mi></mml:math></inline-formula>V]</td><td valign="top"/></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf73"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mtext>rate</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Sampling frequency of the signal [Hz]</td><td valign="top"/></tr><tr><td style="author-callout-style-b8" valign="top"/><td style="author-callout-style-b8" valign="top">Preprocessing of the data</td><td style="author-callout-style-b8" valign="top"/></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf74"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mtext>cut</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Cutoff frequency for butterworth filtering</td><td valign="top">100 Hz</td></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf75"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Temporal width for the templates</td><td valign="top">5 ms</td></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf76"><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Spatial radius for the templates</td><td valign="top">250 <inline-formula><mml:math id="inf77"><mml:mi>μ</mml:mi></mml:math></inline-formula>m</td></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf78"><mml:mi>λ</mml:mi></mml:math></inline-formula></p></td><td valign="top">Gain for threshold detection for channel <inline-formula><mml:math id="inf79"><mml:mi>k</mml:mi></mml:math></inline-formula> (<inline-formula><mml:math id="inf80"><mml:mrow><mml:msub><mml:mi>θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>)</td><td valign="top">6</td></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf81"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Number of waveforms collected per electrode</td><td valign="top">10000</td></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf82"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mtext>PCA</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Number PCA features kept to describe a waveform</td><td valign="top">5</td></tr><tr><td style="author-callout-style-b8" valign="top"/><td style="author-callout-style-b8" valign="top">Clustering and template estimation</td><td style="author-callout-style-b8" valign="top"/></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf83"><mml:mrow><mml:msubsup><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>x</mml:mi></mml:mstyle><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>..</mml:mn><mml:mi>l</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula></p></td><td valign="top"><inline-formula><mml:math id="inf84"><mml:mi>l</mml:mi></mml:math></inline-formula> spikes peaking on electrode <inline-formula><mml:math id="inf85"><mml:mi>k</mml:mi></mml:math></inline-formula> and projected after PCA</td><td valign="top"/></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf86"><mml:mrow><mml:msubsup><mml:mi>ρ</mml:mi><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Density around <inline-formula><mml:math id="inf87"><mml:mrow><mml:msubsup><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>x</mml:mi></mml:mstyle><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula></td><td valign="top"/></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf88"><mml:mrow><mml:msubsup><mml:mi>δ</mml:mi><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Minimal distance from <inline-formula><mml:math id="inf89"><mml:mrow><mml:msubsup><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>x</mml:mi></mml:mstyle><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> to spikes with higher densities</td><td valign="top"/></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf90"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mtext>spikes</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Number of spikes collected per electrode for clustering</td><td valign="top">10000</td></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf91"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:msub><mml:mrow><mml:mtext>PCA</mml:mtext></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Number of PCA features kept to describe a spike</td><td valign="top">5</td></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf92"><mml:mi>S</mml:mi></mml:math></inline-formula></p></td><td valign="top">Number of neighbors for density estimation</td><td valign="top">100</td></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf93"><mml:mrow><mml:msubsup><mml:mi>N</mml:mi><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow><mml:mrow><mml:mtext>clusters</mml:mtext></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Maximal number of clusters per electrode</td><td valign="top">10</td></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf94"><mml:mi>ζ</mml:mi></mml:math></inline-formula></p></td><td valign="top">Normalized distance between pairs of clusters</td><td valign="top"/></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf95"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mtext>similar</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Threshold for merging clusters on the same electrode</td><td valign="top">3</td></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf96"><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Centroid of the cluster <inline-formula><mml:math id="inf97"><mml:mi>m</mml:mi></mml:math></inline-formula></td><td valign="top"/></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf98"><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Dispersion around the centroid <inline-formula><mml:math id="inf99"><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula></td><td valign="top"/></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf100"><mml:mi>η</mml:mi></mml:math></inline-formula></p></td><td valign="top">Minimal size of a cluster (in percent of <inline-formula><mml:math id="inf101"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mtext>spikes</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>)</td><td valign="top">0.005</td></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf102"><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mtext>min</mml:mtext></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:msub><mml:mo>]</mml:mo></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Amplitudes allowed during fitting for a given template</td><td valign="top"/></tr><tr><td style="author-callout-style-b8" valign="top"/><td style="author-callout-style-b8" valign="top">Dictionary cleaning</td><td style="author-callout-style-b8" valign="top"/></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf103"><mml:mrow><mml:mi>C</mml:mi><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Max over time for the Cross-correlation between <inline-formula><mml:math id="inf104"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf105"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula></td><td valign="top"/></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf106"><mml:mrow><mml:mi>c</mml:mi><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mtext>similar</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Threshold above which templates are considered as similar</td><td valign="top">0.975</td></tr><tr><td style="author-callout-style-b8" valign="top"/><td style="author-callout-style-b8" valign="top">Template matching</td><td style="author-callout-style-b8" valign="top"/></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf107"><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Product between <inline-formula><mml:math id="inf108"><mml:mrow><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>s</mml:mi></mml:mstyle><mml:mo>(</mml:mo><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>t</mml:mi></mml:mstyle><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf109"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>j</mml:mi></mml:mstyle></mml:msub></mml:mrow></mml:math></inline-formula> (normalized) at time <inline-formula><mml:math id="inf110"><mml:mrow><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula></td><td valign="top"/></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf111"><mml:mrow><mml:msub><mml:mi>b</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Same as <inline-formula><mml:math id="inf112"><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> but for the second component <inline-formula><mml:math id="inf113"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>v</mml:mi></mml:mstyle><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>j</mml:mi></mml:mstyle></mml:msub></mml:mrow></mml:math></inline-formula></td><td valign="top"/></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf114"><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mtext>failures</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Number of fitting attempts for a given spike time</td><td valign="top">3</td></tr><tr><td style="author-callout-style-b8" valign="top"/><td style="author-callout-style-b8" valign="top">Automated merging</td><td style="author-callout-style-b8" valign="top"/></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf115"><mml:mrow><mml:mi>c</mml:mi><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mtext>merge</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Similarity threshold to consider neurons as a putative pair</td><td valign="top">0.8</td></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf116"><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Cross correlogram between spikes of unit <inline-formula><mml:math id="inf117"><mml:mi>m</mml:mi></mml:math></inline-formula> and <inline-formula><mml:math id="inf118"><mml:mi>n</mml:mi></mml:math></inline-formula></td><td valign="top"/></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf119"><mml:mrow><mml:mi>ϕ</mml:mi><mml:mo>(</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Geometrical mean of the firing rates for units <inline-formula><mml:math id="inf120"><mml:mi>m</mml:mi></mml:math></inline-formula> and <inline-formula><mml:math id="inf121"><mml:mi>n</mml:mi></mml:math></inline-formula> [Hz<inline-formula><mml:math id="inf122"><mml:mrow><mml:msup><mml:mrow/><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula>]</td><td valign="top"/></tr><tr><td valign="top"><p><inline-formula><mml:math id="inf123"><mml:mrow><mml:msub><mml:mi>ϕ</mml:mi><mml:mrow><mml:mtext>merge</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula></p></td><td valign="top">Maximal value for the dip in the cross correlogram at time 0</td><td valign="top">0.1 [Hz<inline-formula><mml:math id="inf124"><mml:mrow><mml:msup><mml:mrow/><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula>]</td></tr></tbody></table></table-wrap></sec><sec id="s4-3"><title>Pre-processing</title><sec id="s4-3-1"><title>Filtering</title><p>In a preprocessing stage, all the signals were individually high-pass filtered with a Butterworth filter of order three and a cutoff frequency of to remove any low-frequency components of the signals.We then subtracted, for every electrode <inline-formula><mml:math id="inf125"><mml:mi>k</mml:mi></mml:math></inline-formula>, the median such that.</p></sec><sec id="s4-3-2"><title>Spike detection</title><p>Once signals have been filtered, we computed a spike threshold <inline-formula><mml:math id="inf126"><mml:mrow><mml:msub><mml:mi>θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> for every electrode <inline-formula><mml:math id="inf127"><mml:mi>k</mml:mi></mml:math></inline-formula>: <inline-formula><mml:math id="inf128"><mml:mrow><mml:msub><mml:mi>θ</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>λ</mml:mi><mml:mtext>MAD</mml:mtext><mml:mo>(</mml:mo><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>s</mml:mi></mml:mstyle><mml:mi>k</mml:mi></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula>, where MAD is the Median Absolute Deviation, and <inline-formula><mml:math id="inf129"><mml:mi>λ</mml:mi></mml:math></inline-formula> is a free parameter. For all the datasets shown in this paper, we set <inline-formula><mml:math id="inf130"><mml:mrow><mml:mi>λ</mml:mi><mml:mo>=</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:math></inline-formula>. We detected the putative spike times <inline-formula><mml:math id="inf131"><mml:mrow><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as times where there was at least one electrode <inline-formula><mml:math id="inf132"><mml:mi>k</mml:mi></mml:math></inline-formula> where <inline-formula><mml:math id="inf133"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>s</mml:mi></mml:mstyle><mml:mi>k</mml:mi></mml:msub><mml:mo>(</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula> was below the threshold <inline-formula><mml:math id="inf134"><mml:mrow><mml:mo>−</mml:mo><mml:msub><mml:mi>θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and a local minimum of the voltage <inline-formula><mml:math id="inf135"><mml:mrow><mml:mi>v</mml:mi><mml:mi>e</mml:mi><mml:mi>c</mml:mi><mml:mi>t</mml:mi><mml:msub><mml:mi>s</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula>.</p></sec><sec id="s4-3-3"><title>Whitening</title><p>To remove spurious spatial correlations between nearby recordings electrodes, we performed a spatial whitening on the data. To do so, we searched for a maximum of 20 s of recordings where there were no spikes (i.e no threshold crossings). We then computed the Covariance Matrix of the noise <inline-formula><mml:math id="inf136"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>C</mml:mi></mml:mstyle><mml:mrow><mml:mtext>spatial</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and estimated its eigenvalues <inline-formula><mml:math id="inf137"><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> and associated eigenvector matrix <inline-formula><mml:math id="inf138"><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>V</mml:mi></mml:mstyle></mml:math></inline-formula>. From the diagonal matrix <inline-formula><mml:math id="inf139"><mml:mrow><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>D</mml:mi></mml:mstyle><mml:mo>=</mml:mo><mml:mtext>diag</mml:mtext><mml:mo>(</mml:mo><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:msqrt><mml:mrow><mml:mi>d</mml:mi><mml:mo>+</mml:mo><mml:mi>ϵ</mml:mi></mml:mrow></mml:msqrt></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="inf140"><mml:mrow><mml:mi>ϵ</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>18</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> is a regularization factor to ensure stability, we computed the whitening matrix <inline-formula><mml:math id="inf141"><mml:mrow><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>F</mml:mi></mml:mstyle><mml:mo>=</mml:mo><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>V</mml:mi><mml:mi>D</mml:mi></mml:mstyle><mml:msup><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>V</mml:mi></mml:mstyle><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>T</mml:mi></mml:mstyle></mml:msup></mml:mrow></mml:math></inline-formula>. In the following, each time blocks of data are loaded, they are multiplied by <inline-formula><mml:math id="inf142"><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>F</mml:mi></mml:mstyle></mml:math></inline-formula>. After whitening,we recomputed the spike detection threshold <inline-formula><mml:math id="inf143"><mml:mrow><mml:msub><mml:mi>θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> of each electrode <inline-formula><mml:math id="inf144"><mml:mi>k</mml:mi></mml:math></inline-formula> in the whitened space.</p></sec><sec id="s4-3-4"><title>Basis estimation (PCA)</title><p>Our first goal was to reduce the dimensionality of the temporal waveforms. We collected up to <inline-formula><mml:math id="inf145"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mtext>p</mml:mtext></mml:msub></mml:mrow></mml:math></inline-formula> spikes on each electrode. We thus obtained a maximum of <inline-formula><mml:math id="inf146"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mtext>p</mml:mtext></mml:msub><mml:mo>×</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mtext>elec</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> spikes and took the waveform only on the peaking electrode for each of them. This is a collection of a large number of temporal waveforms and we then aimed at finding the best basis to project them. In order to compensate for sampling rate artifacts, we first upsampled all the collected single-electrode waveforms by bicubic spline interpolation to five times the sampling rate <inline-formula><mml:math id="inf147"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mtext>rate</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, aligned on their local minima, and then re-sampled at <inline-formula><mml:math id="inf148"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mtext>rate</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. We then performed a Principal Component Analysis (PCA) on these centered and aligned waveforms and kept only the first <inline-formula><mml:math id="inf149"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mtext>PCA</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> principal components. In all the calculations we used default values of <inline-formula><mml:math id="inf150"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mtext>p</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mn>10000</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf151"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mtext>PCA</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>5</mml:mn></mml:mrow></mml:math></inline-formula>. These principal components were used during the clustering step.</p></sec></sec><sec id="s4-4"><title>Clustering</title><p>The goal of the clustering step is to construct a dictionary of templates. As opposed to former clustering approaches of spike sorting (<xref ref-type="bibr" rid="bib38">Quiroga et al., 2004</xref>; <xref ref-type="bibr" rid="bib17">Harris et al., 2000</xref>; <xref ref-type="bibr" rid="bib23">Kadir et al., 2014</xref>), because this clustering step is followed by a template matching, we do not need to perform the clustering on all the spikes.</p><sec id="s4-4-1"><title>Masking</title><p>We first randomly collected a subset of many spikes <inline-formula><mml:math id="inf152"><mml:mrow><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> to perform the clustering. To minimize redundancy between collected spikes, we prevented the algorithm to have two spikes peaking on the same electrode separated by less than <inline-formula><mml:math id="inf153"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>/</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></inline-formula>.</p></sec><sec id="s4-4-2"><title>Pre-clustering of the spikes</title><p>Trying to cluster all the spikes from all the electrodes at once is very challenging, because they are numerous and live in a high dimensional space. We used a divide and conquer approach to parallelize this problem (<xref ref-type="bibr" rid="bib31">Marre et al., 2012</xref>; <xref ref-type="bibr" rid="bib44">Swindale and Spacek, 2014</xref>). Each time a spike was detected at time <inline-formula><mml:math id="inf154"><mml:mrow><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, we searched for the electrode <inline-formula><mml:math id="inf155"><mml:mi>k</mml:mi></mml:math></inline-formula> where the voltage <inline-formula><mml:math id="inf156"><mml:mrow><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>s</mml:mi></mml:mstyle><mml:mo>(</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula> has the lowest value, that is such that. For every electrode <inline-formula><mml:math id="inf157"><mml:mi>k</mml:mi></mml:math></inline-formula> we collected a maximum of <inline-formula><mml:math id="inf158"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mtext>spikes</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> spikes (set to 10,000 by default) peaking on this electrode. Each of these spikes is represented by a spatio-temporal waveform of size <inline-formula><mml:math id="inf159"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>×</mml:mo><mml:msubsup><mml:mi>N</mml:mi><mml:mrow><mml:mtext>neigh</mml:mtext></mml:mrow><mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="inf160"><mml:mrow><mml:msubsup><mml:mi>N</mml:mi><mml:mrow><mml:mtext>neigh</mml:mtext></mml:mrow><mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> is the number of electrodes in the vicinity of electrode <inline-formula><mml:math id="inf161"><mml:mi>k</mml:mi></mml:math></inline-formula>, that is the number of elements in <inline-formula><mml:math id="inf162"><mml:mrow><mml:msup><mml:mi>G</mml:mi><mml:mi>k</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula>. Note that, in the following we did not assume that spikes are only detected on a single electrode. We used the information available on all the neighboring electrodes.</p><p>We projected each temporal waveform on the PCA basis, estimated earlier, to reduce the dimensionality to <inline-formula><mml:math id="inf163"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mtext>PCA</mml:mtext></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msubsup><mml:mi>N</mml:mi><mml:mrow><mml:mtext>neigh</mml:mtext></mml:mrow><mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>. During this projection, the same up-sampling technique described in the Pre-processing was used. Each spike was then represented in a space with <inline-formula><mml:math id="inf164"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mtext>PCA</mml:mtext></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msubsup><mml:mi>N</mml:mi><mml:mrow><mml:mtext>neigh</mml:mtext></mml:mrow><mml:mi>i</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> dimensions. To reduce dimensionality even further before the clustering stage, for every electrode <inline-formula><mml:math id="inf165"><mml:mi>k</mml:mi></mml:math></inline-formula> we performed a PCA on the collected spikes and kept only the first <inline-formula><mml:math id="inf166"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:msub><mml:mrow><mml:mtext>PCA</mml:mtext></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> principal components (in all the paper, <inline-formula><mml:math id="inf167"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:msub><mml:mrow><mml:mtext>PCA</mml:mtext></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>5</mml:mn></mml:mrow></mml:math></inline-formula>). Therefore, we performed a clustering in parallel for every electrode on at max <inline-formula><mml:math id="inf168"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mtext>spikes</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> described in a space of <inline-formula><mml:math id="inf169"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:msub><mml:mrow><mml:mtext>PCA</mml:mtext></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>-dimension.</p></sec><sec id="s4-4-3"><title>Clustering by search of local density peaks</title><p>To perform the clustering, we used a modified version of the algorithm published in (<xref ref-type="bibr" rid="bib39">Rodriguez and Laio, 2014</xref>). We note the spikes <inline-formula><mml:math id="inf170"><mml:mrow><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>..</mml:mn><mml:mo>,</mml:mo><mml:mi>l</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> associated with electrode <inline-formula><mml:math id="inf171"><mml:mi>k</mml:mi></mml:math></inline-formula> (and projected on the second PCA basis) as vectors <inline-formula><mml:math id="inf172"><mml:mrow><mml:msubsup><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>x</mml:mi></mml:mstyle><mml:mrow><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>..</mml:mn><mml:mo>,</mml:mo><mml:mi>l</mml:mi><mml:mo>}</mml:mo></mml:mrow><mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> in a <inline-formula><mml:math id="inf173"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:msub><mml:mrow><mml:mtext>PCA</mml:mtext></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> dimensional space. For each of these vectors, we estimated <inline-formula><mml:math id="inf174"><mml:mrow><mml:msubsup><mml:mi>ρ</mml:mi><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> as the mean distance to the <inline-formula><mml:math id="inf175"><mml:mi>S</mml:mi></mml:math></inline-formula> nearest neighbors of <inline-formula><mml:math id="inf176"><mml:mrow><mml:msubsup><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>x</mml:mi></mml:mstyle><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>. Note that <inline-formula><mml:math id="inf177"><mml:mrow><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:msubsup><mml:mi>ρ</mml:mi><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> can be considered as a proxy for the density of points. <inline-formula><mml:math id="inf178"><mml:mi>S</mml:mi></mml:math></inline-formula> is chosen such that <inline-formula><mml:math id="inf179"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>S</mml:mi><mml:mo>=</mml:mo><mml:mi>ϵ</mml:mi><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mtext>spikes</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, with <inline-formula><mml:math id="inf180"><mml:mrow><mml:mi>ϵ</mml:mi><mml:mo>=</mml:mo><mml:mn>0.01</mml:mn></mml:mrow></mml:math></inline-formula>. In our settings, since <inline-formula><mml:math id="inf181"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mtext>spikes</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>10000</mml:mn></mml:mrow></mml:math></inline-formula> then <inline-formula><mml:math id="inf182"><mml:mrow><mml:mi>S</mml:mi><mml:mo>=</mml:mo><mml:mn>100</mml:mn></mml:mrow></mml:math></inline-formula>. This density measure turned out to be more robust than the one given in the original paper and rather insensitive to changes in <inline-formula><mml:math id="inf183"><mml:mi>ϵ</mml:mi></mml:math></inline-formula>. To avoid a potentially inaccurate estimation of the <inline-formula><mml:math id="inf184"><mml:mrow><mml:msubsup><mml:mi>ρ</mml:mi><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> values, we collected iteratively additional spikes to refine this estimate. Keeping in memory the spikes <inline-formula><mml:math id="inf185"><mml:mrow><mml:msubsup><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>x</mml:mi></mml:mstyle><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>, we searched again in the data <inline-formula><mml:math id="inf186"><mml:mrow><mml:msubsup><mml:mi>N</mml:mi><mml:mrow><mml:mtext>spikes</mml:mtext></mml:mrow><mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> different spikes andused them only to refine the estimation of <inline-formula><mml:math id="inf187"><mml:mrow><mml:msubsup><mml:mi>ρ</mml:mi><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> of our selected points <inline-formula><mml:math id="inf188"><mml:mrow><mml:msubsup><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>x</mml:mi></mml:mstyle><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>. This refinement gave more robust results for the clustering and we performed 3 rounds of this new search. Then, for every point <inline-formula><mml:math id="inf189"><mml:mrow><mml:msubsup><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>x</mml:mi></mml:mstyle><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>, we computed <inline-formula><mml:math id="inf190"><mml:mrow><mml:msubsup><mml:mi>δ</mml:mi><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> as the minimal distance to any other point <inline-formula><mml:math id="inf191"><mml:mrow><mml:msubsup><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>x</mml:mi></mml:mstyle><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo>≠</mml:mo><mml:mi>l</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> such that <inline-formula><mml:math id="inf192"><mml:mrow><mml:msubsup><mml:mi>ρ</mml:mi><mml:mi>m</mml:mi><mml:mi>k</mml:mi></mml:msubsup><mml:mo>≤</mml:mo><mml:msubsup><mml:mi>ρ</mml:mi><mml:mi>l</mml:mi><mml:mi>k</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>. This corresponds to the distance to the nearest point with a higher density. The intuition of the algorithm is that the centroids should be points with a high density (i.e. low <inline-formula><mml:math id="inf193"><mml:mi>ρ</mml:mi></mml:math></inline-formula>) and far apart from each others (high <inline-formula><mml:math id="inf194"><mml:mi>δ</mml:mi></mml:math></inline-formula>).</p></sec><sec id="s4-4-4"><title>Centroids and cluster definition</title><p>To define the centroids we ranked the points as a function of the ratios <inline-formula><mml:math id="inf195"><mml:mrow><mml:mi>δ</mml:mi><mml:mo>/</mml:mo><mml:mi>ρ</mml:mi></mml:mrow></mml:math></inline-formula> and we detected the best <inline-formula><mml:math id="inf196"><mml:mrow><mml:msubsup><mml:mi>N</mml:mi><mml:mrow><mml:mtext>clusters</mml:mtext></mml:mrow><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula> points as putative centroids. By default <inline-formula><mml:math id="inf197"><mml:mrow><mml:msubsup><mml:mi>N</mml:mi><mml:mi>a</mml:mi><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:msubsup><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mi>r</mml:mi><mml:mi>m</mml:mi><mml:mi>c</mml:mi><mml:mi>l</mml:mi><mml:mi>u</mml:mi><mml:mi>s</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:math></inline-formula>. Intuitively, this parameter corresponds to the maximal number of cells that will peak on any given electrode. It can be seen as an upper bound of the ratio between the number of cells and the number of electrodes. ructure recorded, the density of cells and the density of the electrodes, this number can be varied. Clusters were formed by assigning each point to one of the selected centroids following an iterative rule, going from the points of lowest <inline-formula><mml:math id="inf198"><mml:mi>ρ</mml:mi></mml:math></inline-formula> to the points of highest <inline-formula><mml:math id="inf199"><mml:mi>ρ</mml:mi></mml:math></inline-formula>: each point was assigned to the same cluster as the closest point with a lower <inline-formula><mml:math id="inf200"><mml:mi>ρ</mml:mi></mml:math></inline-formula> (<xref ref-type="bibr" rid="bib39">Rodriguez and Laio, 2014</xref>). Thanks to this ordering, we started by assigning the points of highest density to the nearest centroid, and then assigned the next points to the nearest point with higher density, which has been already assigned to a cluster. We created <inline-formula><mml:math id="inf201"><mml:mrow><mml:msubsup><mml:mi>N</mml:mi><mml:mrow><mml:mtext>clusters</mml:mtext></mml:mrow><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula> clusters. Once this is done, we iteratively merged pairs of clusters that were too similar to each others.</p></sec><sec id="s4-4-5"><title>Merging similar clusters</title><p>We computed a normalized distance <inline-formula><mml:math id="inf202"><mml:mi>ζ</mml:mi></mml:math></inline-formula> between each pair of clusters. The center <inline-formula><mml:math id="inf203"><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> of each cluster was defined as the median of all the points composing this cluster. For each pair of cluster <inline-formula><mml:math id="inf204"><mml:mrow><mml:mo>(</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula>, we then projected all the points foreach of them onto the axis joining the two centroids <inline-formula><mml:math id="inf205"><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. We defined the dispersions around the centroids <inline-formula><mml:math id="inf206"><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as <inline-formula><mml:math id="inf207"><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mtext>MAD</mml:mtext><mml:mo>(</mml:mo><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>x</mml:mi></mml:mstyle><mml:mi>m</mml:mi></mml:msub><mml:mo>⋅</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>)</mml:mo><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="inf208"><mml:mo>⋅</mml:mo></mml:math></inline-formula> is the scalar product of two vectors. The normalized distance is:<disp-formula id="equ2"><label>(2)</label><mml:math id="m2"><mml:mrow><mml:mi>ζ</mml:mi><mml:mo>(</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mrow><mml:mo>‖</mml:mo> <mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow> <mml:mo>‖</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:msqrt><mml:mrow><mml:msubsup><mml:mi>γ</mml:mi><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>γ</mml:mi><mml:mi>n</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:msqrt></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula></p><p>We then iteratively merged all clusters <inline-formula><mml:math id="inf209"><mml:mrow><mml:mo>(</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula> such that <inline-formula><mml:math id="inf210"><mml:mrow><mml:mi>ζ</mml:mi><mml:mo>(</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>)</mml:mo><mml:mo>≤</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mtext>similar</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. At the end of the clustering, every cluster with less than <inline-formula><mml:math id="inf211"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>η</mml:mi><mml:msubsup><mml:mi>N</mml:mi><mml:mrow><mml:mtext>spikes</mml:mtext></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mstyle></mml:math></inline-formula> was discarded. In all the manuscript we used <inline-formula><mml:math id="inf212"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mtext>similar</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf213"><mml:mrow><mml:msubsup><mml:mi>N</mml:mi><mml:mrow><mml:mtext>clusters</mml:mtext></mml:mrow><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="inf214"><mml:mrow><mml:mi>η</mml:mi><mml:mo>=</mml:mo><mml:mn>0.005</mml:mn></mml:mrow></mml:math></inline-formula>. We chose <inline-formula><mml:math id="inf215"><mml:mrow><mml:msubsup><mml:mi>N</mml:mi><mml:mrow><mml:mtext>clusters</mml:mtext></mml:mrow><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:math></inline-formula> because we never see more than 10 neurons peaking on the same electrode, and this approximately corresponds to the ratio between density of observable cells and density of electrodes.</p></sec><sec id="s4-4-6"><title>Template estimation</title><p>At the end of the clustering phase, pooling the clusters obtained from every electrode, we obtained a list of clusters. Each cluster <inline-formula><mml:math id="inf216"><mml:mi>m</mml:mi></mml:math></inline-formula> is defined by a list of spike times <inline-formula><mml:math id="inf217"><mml:mrow><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>..</mml:mn><mml:mo>,</mml:mo><mml:mi>l</mml:mi><mml:mo>}</mml:mo></mml:mrow><mml:mi>m</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>. During this phase we limited the number of spike times per template to a maximal value of 500 to avoid memory saturation, because we had to keep in memory these 500 snippets.</p><p>We computed the first component from the raw data as the point-wise median of all the waveforms belonging to the cluster: <inline-formula><mml:math id="inf218"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">w</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mtext>med</mml:mtext><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mi mathvariant="bold">s</mml:mi></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula>. Note that <inline-formula><mml:math id="inf219"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is only different from zero on the electrodes close to its peak (see <xref ref-type="fig" rid="fig1">Figure 1C</xref>). This information is used internally by the algorithm to save templates as sparse structures. We set to 0 all the electrodes <inline-formula><mml:math id="inf220"><mml:mi>k</mml:mi></mml:math></inline-formula> where <inline-formula><mml:math id="inf221"><mml:mrow><mml:mrow><mml:mo>‖</mml:mo> <mml:mrow><mml:msubsup><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mi>m</mml:mi><mml:mi>k</mml:mi></mml:msubsup><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow> <mml:mo>‖</mml:mo></mml:mrow><mml:mo>&lt;</mml:mo><mml:msub><mml:mi>θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="inf222"><mml:mrow><mml:msub><mml:mi>θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is the detection threshold on electrode <inline-formula><mml:math id="inf223"><mml:mi>k</mml:mi></mml:math></inline-formula>. This allowed us to remove electrodes without discriminant information and to increase the sparsity of the templates.</p><p>We then computed the projection of all snippets in the space orthogonal to the first component: <inline-formula><mml:math id="inf224"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="normal">∀</mml:mi><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold">q</mml:mi></mml:mrow><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mi mathvariant="bold">s</mml:mi></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msubsup><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi mathvariant="bold">w</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>, with <inline-formula><mml:math id="inf225"><mml:mrow><mml:msub><mml:mi>β</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mrow><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>s</mml:mi></mml:mstyle><mml:mo>(</mml:mo><mml:msubsup><mml:mi>t</mml:mi><mml:mi>l</mml:mi><mml:mi>m</mml:mi></mml:msubsup><mml:mo>)</mml:mo><mml:mo>.</mml:mo><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:mrow><mml:mo>‖</mml:mo> <mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mi>m</mml:mi></mml:msub></mml:mrow> <mml:mo>‖</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:math></inline-formula>. The <inline-formula><mml:math id="inf226"><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>q</mml:mi></mml:mstyle></mml:math></inline-formula> are the projections of the waveforms in a space orthogonal to <inline-formula><mml:math id="inf227"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. We estimated the second component of the template <inline-formula><mml:math id="inf228"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>v</mml:mi></mml:mstyle><mml:mi>m</mml:mi></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula> as the direction of largest variance in this orthogonal space (i.e. the first principal component of <inline-formula><mml:math id="inf229"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>q</mml:mi></mml:mstyle><mml:mi>l</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>).</p><p>From the first components <inline-formula><mml:math id="inf230"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, we also computed its minimal and maximal amplitudes <inline-formula><mml:math id="inf231"><mml:mrow><mml:msubsup><mml:mi>a</mml:mi><mml:mi>m</mml:mi><mml:mrow><mml:mtext>min</mml:mtext><mml:mo>/</mml:mo><mml:mtext>max</mml:mtext></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula>. If <inline-formula><mml:math id="inf232"><mml:mrow><mml:msub><mml:mstyle displaystyle="true" mathsize="140%"><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mover accent="true"><mml:mi>w</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mstyle></mml:mstyle><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is the normalized template, such that <inline-formula><mml:math id="inf233"><mml:mrow><mml:msub><mml:mstyle displaystyle="true" mathsize="140%"><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mover accent="true"><mml:mi>w</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mstyle></mml:mstyle><mml:mi>m</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mi>m</mml:mi></mml:msub><mml:mo>/</mml:mo><mml:mrow><mml:mo>‖</mml:mo> <mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mi>m</mml:mi></mml:msub></mml:mrow> <mml:mo>‖</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, we computed<disp-formula id="equ3"><label>(3)</label><mml:math id="m3"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msubsup><mml:mi>a</mml:mi><mml:mrow><mml:mi>h</mml:mi></mml:mrow><mml:mrow><mml:mo form="prefix" movablelimits="true">min</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:msub><mml:mtext>med</mml:mtext><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mi mathvariant="bold">s</mml:mi></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msubsup><mml:mo>)</mml:mo></mml:mrow><mml:mo>.</mml:mo><mml:msub><mml:mrow><mml:mrow><mml:mrow><mml:mover><mml:mi mathvariant="bold">w</mml:mi><mml:mo mathvariant="bold" stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:mrow></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>5</mml:mn><mml:msub><mml:mtext>MAD</mml:mtext><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mi mathvariant="bold">s</mml:mi></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msubsup><mml:mo>)</mml:mo></mml:mrow><mml:mo>.</mml:mo><mml:msub><mml:mrow><mml:mrow><mml:mrow><mml:mover><mml:mi mathvariant="bold">w</mml:mi><mml:mo mathvariant="bold" stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:mrow></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:math></disp-formula><disp-formula id="equ4"><mml:math id="m4"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msubsup><mml:mi>a</mml:mi><mml:mrow><mml:mi>h</mml:mi></mml:mrow><mml:mrow><mml:mo form="prefix" movablelimits="true">max</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:msub><mml:mtext>med</mml:mtext><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mi mathvariant="bold">s</mml:mi></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msubsup><mml:mo>)</mml:mo></mml:mrow><mml:mo>.</mml:mo><mml:msub><mml:mrow><mml:mrow><mml:mrow><mml:mover><mml:mi mathvariant="bold">w</mml:mi><mml:mo mathvariant="bold" stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:mrow></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>5</mml:mn><mml:msub><mml:mtext>MAD</mml:mtext><mml:mrow><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mi mathvariant="bold">s</mml:mi></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msubsup><mml:mo>)</mml:mo></mml:mrow><mml:mo>.</mml:mo><mml:msub><mml:mrow><mml:mrow><mml:mrow><mml:mover><mml:mi mathvariant="bold">w</mml:mi><mml:mo mathvariant="bold" stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:mrow></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:math></disp-formula></p><p>Those boundaries are used during the template matching step (see below). The factor five allows most of the points to have their amplitude between the two limits.</p></sec><sec id="s4-4-7"><title>Removing redundant templates</title><p>To remove redundant templates that may be present in the dictionary because of the divide and conquer approach (for example a neuron between two electrodes would give rise to two very similar templates on two electrodes), we computed for all pairs of templates in the dictionary <inline-formula><mml:math id="inf234"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>C</mml:mi><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mo form="prefix" movablelimits="true">max</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo form="prefix" movablelimits="true">max</mml:mo><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:munder><mml:mi>C</mml:mi><mml:mi>C</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">w</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold">w</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula>, where <inline-formula><mml:math id="inf235"><mml:mrow><mml:mi>C</mml:mi><mml:mi>C</mml:mi></mml:mrow></mml:math></inline-formula> stands for normalized cross-correlation. If <inline-formula><mml:math id="inf236"><mml:mrow><mml:mi>C</mml:mi><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>)</mml:mo><mml:mo>≥</mml:mo><mml:mi>c</mml:mi><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mtext>similar</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, we considered these templates to be equivalent and they were merged. In all the following, we used <inline-formula><mml:math id="inf237"><mml:mrow><mml:mi>c</mml:mi><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mtext>similar</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0.975</mml:mn></mml:mrow></mml:math></inline-formula>. Note that we computed the cross-correlations between normalized templates such that two templates that have the same shape but different amplitudes are merged. Similarly, we searched if any template <inline-formula><mml:math id="inf238"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mi>p</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> could be explained as a linear combination of two templates in the dictionary. If we could find <inline-formula><mml:math id="inf239"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf240"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> such that <inline-formula><mml:math id="inf241"><mml:mrow><mml:mi>C</mml:mi><mml:mi>C</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mi>p</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mi>m</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mi>n</mml:mi></mml:msub><mml:mo>)</mml:mo><mml:mo>≥</mml:mo><mml:mi>c</mml:mi><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mtext>similar</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf242"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mi>p</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> was considered to be a mixture of two cells and was removed from the dictionary.</p></sec></sec><sec id="s4-5"><title>Template matching</title><p>At the end of this ‘template-finding’ phase we have found a dictionary of templates (<inline-formula><mml:math id="inf243"><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle></mml:math></inline-formula>, <inline-formula><mml:math id="inf244"><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>v</mml:mi></mml:mstyle></mml:math></inline-formula>). We now need to reconstruct the signal <inline-formula><mml:math id="inf245"><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>s</mml:mi></mml:mstyle></mml:math></inline-formula> by finding the amplitudes coefficients <inline-formula><mml:math id="inf246"><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf247"><mml:mrow><mml:msub><mml:mi>b</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> described in <xref ref-type="disp-formula" rid="equ1">Equation 1</xref>. Because at a given spike time <inline-formula><mml:math id="inf248"><mml:mrow><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> it is likely that only a couple of cells will fire a spike, most <inline-formula><mml:math id="inf249"><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf250"><mml:mrow><mml:msub><mml:mi>b</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> in this equation are equal to 0. For the other ones most <inline-formula><mml:math id="inf251"><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> values are around one because a spike usually appears on electrodes with an amplitude close to the average first component <inline-formula><mml:math id="inf252"><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle></mml:math></inline-formula>. In this template matching step, all the other parameters have been determined by template extraction and spike detection, so the purpose is only to find the values of these amplitudes. Note that the spike times <inline-formula><mml:math id="inf253"><mml:mrow><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> were detected using the method described above and include all the threshold crossing voltages that are local minima. Each true spike can be detected over several electrodes at slightly different times such that there are many more <inline-formula><mml:math id="inf254"><mml:mrow><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> than actual spikes. With this approach, we found that there was no need to shift templates before matching them to the raw data.</p><p>To match the templates to the data we used an iterative greedy approach to estimate the <inline-formula><mml:math id="inf255"><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> for each <inline-formula><mml:math id="inf256"><mml:mrow><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, which bears some similarity to the matching pursuit algorithm (<xref ref-type="bibr" rid="bib30">Mallat and Zhifeng Zhang, 1993</xref>). The fitting was performed in blocks of putative spike times,{<inline-formula><mml:math id="inf257"><mml:mrow><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>}, that were successively loaded in memory. The size of one block was typically one second, which includes a lot of spike times, and is much larger than a single snippet. The snippets were thus not fitted independently from each other. The successive blocks were always overlapping by two times the size of a snippet and we discarded the results obtained on the borders to avoid any error of the template matching that would be due to a spike split between two blocks. Such an approach allowed us to easily split the workload linearly among several processors.</p><p>Each block of raw data <inline-formula><mml:math id="inf258"><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>s</mml:mi></mml:mstyle></mml:math></inline-formula> was loaded and template-matching was performed according to the following steps:</p><list list-type="order"><list-item><p>Estimate the normalized scalar products <inline-formula><mml:math id="inf259"><mml:mrow><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>s</mml:mi></mml:mstyle><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo><mml:mo>⋅</mml:mo><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mi>j</mml:mi></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula> for each template <inline-formula><mml:math id="inf260"><mml:mi>j</mml:mi></mml:math></inline-formula> and putative spike time <inline-formula><mml:math id="inf261"><mml:mrow><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, for all the <inline-formula><mml:math id="inf262"><mml:mi>i</mml:mi></mml:math></inline-formula> and <inline-formula><mml:math id="inf263"><mml:mi>j</mml:mi></mml:math></inline-formula> in the block of raw data.</p></list-item><list-item><p>Choose the <inline-formula><mml:math id="inf264"><mml:mrow><mml:mo>(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula> pair with the highest scalar product, excluding the pairs <inline-formula><mml:math id="inf265"><mml:mrow><mml:mo>(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula> which have already been tried and the <inline-formula><mml:math id="inf266"><mml:mrow><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>’s already explored (see below).</p></list-item><list-item><p>Set <inline-formula><mml:math id="inf267"><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> equal to the amplitude value that best fits the raw data: <inline-formula><mml:math id="inf268"><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mstyle scriptlevel="+1"><mml:mfrac><mml:mrow><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>s</mml:mi></mml:mstyle><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo><mml:mo>.</mml:mo><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mi>j</mml:mi></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mrow><mml:mo>‖</mml:mo> <mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mi>j</mml:mi></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow> <mml:mo>‖</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><p>Check if the <inline-formula><mml:math id="inf269"><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> amplitude value is between <inline-formula><mml:math id="inf270"><mml:mrow><mml:msubsup><mml:mi>a</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mtext>min</mml:mtext></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf271"><mml:mrow><mml:msubsup><mml:mi>a</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><p>If yes, accept this value, subtract the scaled template from the raw data: <inline-formula><mml:math id="inf272"><mml:mrow><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>s</mml:mi></mml:mstyle><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo><mml:mo>←</mml:mo><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>s</mml:mi></mml:mstyle><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo><mml:mo>−</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mi>j</mml:mi></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula>. Then set <inline-formula><mml:math id="inf273"><mml:mrow><mml:msub><mml:mi>b</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> equal to the amplitude value that best fits the raw data with <inline-formula><mml:math id="inf274"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>v</mml:mi></mml:mstyle><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, and subtractit too. Then return to step one to re-estimate the scalar products on the residual.</p></list-item><list-item><p>Otherwise increase by one <inline-formula><mml:math id="inf275"><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, which counts the number of times any template has been rejected for spike time <inline-formula><mml:math id="inf276"><mml:mrow><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p><list list-type="order"><list-item><p>If <inline-formula><mml:math id="inf277"><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> reaches <inline-formula><mml:math id="inf278"><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mtext>failures</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math></inline-formula>, label this <inline-formula><mml:math id="inf279"><mml:mrow><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as ‘explored’. If all <inline-formula><mml:math id="inf280"><mml:mrow><mml:msub><mml:mi>t</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> have been explored, quit the loop.</p></list-item><list-item><p>Otherwise return to step one and iterate.</p></list-item></list></list-item></list><p>The parameters of the algorithm were the amplitude thresholds <inline-formula><mml:math id="inf281"><mml:mrow><mml:msubsup><mml:mi>a</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mtext>min</mml:mtext></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf282"><mml:mrow><mml:msubsup><mml:mi>a</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula>, computed as described in the section Template Estimation.</p></sec><sec id="s4-6"><title>Automated merging</title><p>For the template similarity, we computed, for every pair of templates <inline-formula><mml:math id="inf283"><mml:mi>m</mml:mi></mml:math></inline-formula> and <inline-formula><mml:math id="inf284"><mml:mi>n</mml:mi></mml:math></inline-formula>, <inline-formula><mml:math id="inf285"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>C</mml:mi><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mo form="prefix" movablelimits="true">max</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo form="prefix" movablelimits="true">max</mml:mo><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:munder><mml:mi>C</mml:mi><mml:mi>C</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">w</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold">w</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula> (where <inline-formula><mml:math id="inf286"><mml:mrow><mml:mi>C</mml:mi><mml:mi>C</mml:mi></mml:mrow></mml:math></inline-formula> is the normalized cross-correlation between the two templates - see above forthe definition). To quantify the dip in the cross-correlogram, we binned the spike trains obtained for templates <inline-formula><mml:math id="inf287"><mml:mi>m</mml:mi></mml:math></inline-formula> and <inline-formula><mml:math id="inf288"><mml:mi>n</mml:mi></mml:math></inline-formula> with 2 ms bin size, and estimated the cross correlogram <inline-formula><mml:math id="inf289"><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>τ</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula> between unit <inline-formula><mml:math id="inf290"><mml:mi>m</mml:mi></mml:math></inline-formula> and unit <inline-formula><mml:math id="inf291"><mml:mi>n</mml:mi></mml:math></inline-formula>, defined as <inline-formula><mml:math id="inf292"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mo>⟨</mml:mo><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mi>τ</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>⟩</mml:mo></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. <inline-formula><mml:math id="inf293"><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula> is the number of spikes of unit <inline-formula><mml:math id="inf294"><mml:mi>m</mml:mi></mml:math></inline-formula> in time bin <inline-formula><mml:math id="inf295"><mml:mi>t</mml:mi></mml:math></inline-formula>. We then estimated the dip as the difference between the value of the cross-correlogram at time 0 ms and the geometrical mean of the firing rates, that is <inline-formula><mml:math id="inf296"><mml:mrow><mml:mi>ϕ</mml:mi><mml:mo>(</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mrow><mml:mo>⟨</mml:mo> <mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow> <mml:mo>⟩</mml:mo></mml:mrow></mml:mrow><mml:mi>t</mml:mi></mml:msub><mml:msub><mml:mrow><mml:mrow><mml:mo>⟨</mml:mo> <mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow> <mml:mo>⟩</mml:mo></mml:mrow></mml:mrow><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. This geometrical mean would be the value of the cross-correlogram if the two spike trains were independent. The dip is therefore estimated as<disp-formula id="equ5"><label>(4)</label><mml:math id="m5"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mrow><mml:mo>⟨</mml:mo><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>⟩</mml:mo></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mo>⟨</mml:mo><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>⟩</mml:mo></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mo>⟨</mml:mo><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mi>τ</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>⟩</mml:mo></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></disp-formula></p><p>We plotted the values of the estimated dip, the template similarity and the geometrical mean of the firing rates for each pair in a Graphical User Interface (GUI). The user can quickly define at once a whole set of pairs that need to be merged. After merging a subset of the pairs, quantities <inline-formula><mml:math id="inf297"><mml:mrow><mml:mi>C</mml:mi><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf298"><mml:mi>ϕ</mml:mi></mml:math></inline-formula> are re-computed, until the user decides to stop merging (see <xref ref-type="fig" rid="fig4">Figure 4</xref>).</p><p>If the two spike trains from templates <inline-formula><mml:math id="inf299"><mml:mi>m</mml:mi></mml:math></inline-formula> and <inline-formula><mml:math id="inf300"><mml:mi>n</mml:mi></mml:math></inline-formula> correspond to the same cell, there should be no refractory spike trains. The cross-correlogram value should be close to 0 and the dip estimation should therefore be close to the geometrical mean of the firing rates. To formalize this intuition and fully automate the merging, we decided to merge all the pairs <inline-formula><mml:math id="inf301"><mml:mrow><mml:mo>(</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula> such that:<disp-formula id="equ6"><label>(5)</label><mml:math id="m6"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>C</mml:mi><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mo form="prefix" movablelimits="true">max</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>&gt;</mml:mo><mml:mi>c</mml:mi><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mtext>merge</mml:mtext></mml:mrow></mml:msub><mml:mtext>and</mml:mtext><mml:msub><mml:mrow><mml:mo>⟨</mml:mo><mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>σ</mml:mi><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mi>τ</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>⟩</mml:mo></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>≤</mml:mo><mml:msub><mml:mi>ϕ</mml:mi><mml:mrow><mml:mtext>merge</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></disp-formula>with <inline-formula><mml:math id="inf302"><mml:mrow><mml:mi>c</mml:mi><mml:msub><mml:mi>c</mml:mi><mml:mrow><mml:mtext>merge</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0.8</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf303"><mml:mrow><mml:msub><mml:mi>ϕ</mml:mi><mml:mrow><mml:mtext>merge</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0.1</mml:mn></mml:mrow></mml:math></inline-formula>. This corresponds to merging all the highly similar pairs above a line parallel to the diagonal (see <xref ref-type="fig" rid="fig4">Figure 4A,B</xref>, gray area). With these two parameters we could automate the merging process.</p></sec><sec id="s4-7"><title>Simulated ground truth tests</title><p>In order to assess the performance of the algorithm, we injected new templates in real datasets (see <xref ref-type="fig" rid="fig3">Figure 3D</xref>). To do so, we ran the algorithm on a given dataset and obtain a list of putative templates <inline-formula><mml:math id="inf304"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mrow><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mi>N</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. Then, we randomly selected some of those templates <inline-formula><mml:math id="inf305"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and shuffled the list of their electrodes before injecting them elsewhere in the datasets at controlled firing rates (<xref ref-type="bibr" rid="bib17">Harris et al., 2000</xref>; <xref ref-type="bibr" rid="bib41">Rossant et al., 2016</xref>; <xref ref-type="bibr" rid="bib23">Kadir et al., 2014</xref>; <xref ref-type="bibr" rid="bib42">Segev et al., 2004</xref>; <xref ref-type="bibr" rid="bib31">Marre et al., 2012</xref>; <xref ref-type="bibr" rid="bib7">Chung et al., 2017</xref>). This enabled us to properly quantify the performance of the algorithm. In order not to bias the clustering, when a template <inline-formula><mml:math id="inf306"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> was selected and shuffled as a new template <inline-formula><mml:math id="inf307"><mml:mrow><mml:msub><mml:mstyle displaystyle="true" mathsize="140%"><mml:mrow><mml:mover accent="true"><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mo>¯</mml:mo></mml:mover></mml:mrow></mml:mstyle><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> centered on a newelectrode <inline-formula><mml:math id="inf308"><mml:mi>k</mml:mi></mml:math></inline-formula>, we ensured that the injected template was not too similar to one that would already be in the data: <inline-formula><mml:math id="inf309"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi mathvariant="normal">∀</mml:mi><mml:mi>h</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mi>N</mml:mi></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:munder><mml:mo form="prefix" movablelimits="true">max</mml:mo><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:munder><mml:mi>C</mml:mi><mml:mi>C</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold">w</mml:mi></mml:mrow><mml:mrow><mml:mi>h</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mover><mml:mrow><mml:mi mathvariant="bold">w</mml:mi></mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>≤</mml:mo><mml:mn>0.8</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula>. Before being injected, <inline-formula><mml:math id="inf310"><mml:mrow><mml:msub><mml:mstyle displaystyle="true" mathsize="140%"><mml:mrow><mml:mover accent="true"><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>w</mml:mi></mml:mstyle><mml:mo>¯</mml:mo></mml:mover></mml:mrow></mml:mstyle><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> was normalized such that <inline-formula><mml:math id="inf311"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:munder><mml:mo form="prefix" movablelimits="true">min</mml:mo><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mrow><mml:mover><mml:mrow><mml:mi mathvariant="bold">w</mml:mi></mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>θ</mml:mi><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula>. <inline-formula><mml:math id="inf312"><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is the relative amplitude, expressed as function of <inline-formula><mml:math id="inf313"><mml:mrow><mml:msub><mml:mi>θ</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, the detection threshold on the electrode where the template is peaking. If <inline-formula><mml:math id="inf314"><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>≤</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> the template is smaller than spike threshold, and its spikes should not be detected; if <inline-formula><mml:math id="inf315"><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>≥</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula> the spikes should be detected. In <xref ref-type="fig" rid="fig3">Figure 3G</xref>, we injected the artificial templates into the data such that they were all firing at 10 Hz, but with a controlled correlation coefficient <inline-formula><mml:math id="inf316"><mml:mi>c</mml:mi></mml:math></inline-formula> that could be varied (using a Multiple Interaction Process [<xref ref-type="bibr" rid="bib24">Kuhn et al., 2003</xref>]). This parameter <inline-formula><mml:math id="inf317"><mml:mi>c</mml:mi></mml:math></inline-formula> allowed us to quantify the percentage of pairwise correlations recovered by the algorithm for overlapping spatio-temporal templates.</p></sec><sec id="s4-8"><title>Performance estimation</title><sec id="s4-8-1"><title>Estimation of false positives and false negatives</title><p>To quantify the performance of the algorithm we matched the spikes recovered by the algorithm to the real ground-truth spikes (either synthetic or obtained with juxta-cellular recordings). A spike was considered to be a match if it had a corresponding spike in the ground truth at less than 2 ms. Spikes in the ground-truth datasets that had no matches in the spike sorting results in a 2 ms window were labeled as ‘false negatives’, while those that are not present while the algorithm detected a spike were ‘false positives’. The false-negative rate was defined as the number of false negatives divided by the number of spikes in the ground truth recording. The false-positive rate was defined as the number of false positives divided by the number of spikes in the spike train extracted by the algorithm. In the paper, the error is defined as mean of the false negative and the false positive rates (see <xref ref-type="fig" rid="fig2">Figures 2</xref> and <xref ref-type="fig" rid="fig3">3</xref>). Note that to take into account the fact that a ground-truth neuron could be split into several templates at the end of the algorithm, we always compared the ground-truth cells with the combination of templates that minimized the error.</p></sec><sec id="s4-8-2"><title>Theoretical estimate</title><p>To quantify the performance of the software with real ground-truth recordings (see <xref ref-type="fig" rid="fig2">Figure 2</xref>) we computed the Best Ellipsoidal Error Rate (BEER), as described in (<xref ref-type="bibr" rid="bib17">Harris et al., 2000</xref>). This BEER estimate gave an upper bound on the performance of any clustering-based spike sorting method using elliptical cluster boundaries. After thresholding and feature extraction, snippets were labeled according to whether or not they contained a true spike. Half of this labeled data set was then used to train a perceptron whose decision rule is a linear combination of all pairwise products of the features of each snippet. If <inline-formula><mml:math id="inf318"><mml:mrow><mml:msub><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>x</mml:mi></mml:mstyle><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is the <inline-formula><mml:math id="inf319"><mml:mi>i</mml:mi></mml:math></inline-formula>-th snippet, projected in the feature space, then the optimized function <inline-formula><mml:math id="inf320"><mml:mrow><mml:mi>f</mml:mi><mml:mo>(</mml:mo><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>x</mml:mi></mml:mstyle><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula> is:<disp-formula id="equ7"><label>(6)</label><mml:math id="m7"><mml:mrow><mml:mi>f</mml:mi><mml:mo>(</mml:mo><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>x</mml:mi></mml:mstyle><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:msup><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>x</mml:mi></mml:mstyle><mml:mi>T</mml:mi></mml:msup><mml:mi>A</mml:mi><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>x</mml:mi></mml:mstyle><mml:mo>+</mml:mo><mml:msup><mml:mi>b</mml:mi><mml:mi>T</mml:mi></mml:msup><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>x</mml:mi></mml:mstyle><mml:mo>+</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:math></disp-formula></p><p>We trained this function <inline-formula><mml:math id="inf321"><mml:mi>f</mml:mi></mml:math></inline-formula> by varying <inline-formula><mml:math id="inf322"><mml:mi>A</mml:mi></mml:math></inline-formula>, <inline-formula><mml:math id="inf323"><mml:mi>b</mml:mi></mml:math></inline-formula> and <inline-formula><mml:math id="inf324"><mml:mi>c</mml:mi></mml:math></inline-formula> with the objective that <inline-formula><mml:math id="inf325"><mml:mrow><mml:mi>f</mml:mi><mml:mo>(</mml:mo><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>x</mml:mi></mml:mstyle><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula> should be +1 for the ground truth spikes, and −1 otherwise. These parameters were optimized by a stochastic gradient descent with a regularization constraint. The resulting classifier was then used to predict the occurrence of spikes in the snippets in the remaining half of the labeled data. Only the snippets where <inline-formula><mml:math id="inf326"><mml:mrow><mml:mi>f</mml:mi><mml:mo>(</mml:mo><mml:mstyle mathsize="normal" mathvariant="bold"><mml:mi>x</mml:mi></mml:mstyle><mml:mo>)</mml:mo><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> were predicted as true spikes. This prediction provided an estimate of the false-negative and false-positive rates for the BEER estimate. The mean between the two was considered to be the BEER error rate, or ‘Optimal Classifier Error’.</p></sec><sec id="s4-8-3"><title>Decimation of the electrodes</title><p>In order to increase the number of data points for the comparison between our sorting algorithm and the nonlinear classifiers defined by the BEER metric (see <xref ref-type="fig" rid="fig2">Figure 2</xref>), we ran the analysis several times on the same neurons, but removing some electrodes, to create recordings at a lower electrode density. We divided by a factor 2 or 4 the number of electrodes in the 252 in vitro Multielectrode Array or the 128 in vivo silicon probe.</p></sec></sec><sec id="s4-9"><title>Hardware specifications</title><p>The comparison between Kilosort (<xref ref-type="bibr" rid="bib35">Pachitariu et al., 2016</xref>) and SpyKING CIRCUS was performed on a desktop machine with 32 Gb RAM and eight cores (proc Intel Xeon(R) CPU E5-1630 v3 @ 3.70 GHz). The GPU used was a NVIDIA Quadro K4200 with 4 Gb of dedicated memory.</p></sec><sec id="s4-10"><title>Implementation and source code</title><p>SpyKING CIRCUS is a pure Python package, based on the python wrapper for the Message Passing Interface (MPI) library (<xref ref-type="bibr" rid="bib8">Dalcin et al., 2011</xref>) to allow parallelization over distributed computers, and is available with its full documentation at <ext-link ext-link-type="uri" xlink:href="http://spyking-circus.rtfd.org.">http://spyking-circus.rtfd.org.</ext-link> Results can easily be exported to the kwik or phy format (<xref ref-type="bibr" rid="bib40">Rossant and Harris, 2013</xref>). All the datasets used in this manuscript are available on-line, for testing and comparison with other algorithms (<xref ref-type="bibr" rid="bib43">Spampinato et al., 2018</xref> ).</p></sec></sec></body><back><ack id="ack"><title>Acknowledgements</title><p>We would like to thank Charlotte Deleuze for her help with the in vitro juxtacellular recordings, and Steve Baccus and Sami El Boustani for insightful discussions. We also would like to thank Kenneth Harris, Cyrille Rossant and Nick Steimetz for feedbacks and the help with the interface to the phy software. This work was supported by ANR-14-CE13-0003 to PY, ANR TRAJECTORY, ANR OPTIMA, the French State program Investissements d’Avenir managed by the Agence Nationale de la Recherche [LIFESENSES: ANR-10-LABX-65], an EC grant from the Human Brain Project (FP7-720270), and NIH grant U01NS090501 to OM, ERC Starting Grant (309776) to JD and Foundation Figthing Blindness to SP.</p></ack><sec id="s5" sec-type="additional-information"><title>Additional information</title><fn-group content-type="competing-interest"><title>Competing interests</title><fn fn-type="COI-statement" id="conf1"><p>No competing interests declared</p></fn></fn-group><fn-group content-type="author-contribution"><title>Author contributions</title><fn fn-type="con" id="con1"><p>Conceptualization, Data curation, Software, Formal analysis, Supervision, Validation, Investigation, Visualization, Methodology, Writing—original draft, Project administration, Writing—review and editing</p></fn><fn fn-type="con" id="con2"><p>Conceptualization, Resources, Data curation, Formal analysis, Validation, Investigation, Visualization, Methodology, Writing—original draft, Project administration, Writing—review and editing</p></fn><fn fn-type="con" id="con3"><p>Conceptualization, Resources, Data curation, Validation, Investigation, Visualization, Methodology, Project administration, Writing—review and editing</p></fn><fn fn-type="con" id="con4"><p>Conceptualization, Software, Formal analysis, Validation, Investigation, Visualization, Methodology, Project administration, Writing—review and editing</p></fn><fn fn-type="con" id="con5"><p>Resources, Data curation</p></fn><fn fn-type="con" id="con6"><p>Data curation, Software, Formal analysis, Validation, Writing—review and editing</p></fn><fn fn-type="con" id="con7"><p>Software, Project administration</p></fn><fn fn-type="con" id="con8"><p>Resources</p></fn><fn fn-type="con" id="con9"><p>Resources, Writing—review and editing</p></fn><fn fn-type="con" id="con10"><p>Conceptualization, Supervision, Funding acquisition, Project administration, Writing—review and editing</p></fn><fn fn-type="con" id="con11"><p>Supervision, Funding acquisition, Project administration, Writing—review and editing</p></fn><fn fn-type="con" id="con12"><p>Conceptualization, Resources, Data curation, Software, Formal analysis, Supervision, Funding acquisition, Validation, Investigation, Visualization, Methodology, Writing—original draft, Project administration, Writing—review and editing</p></fn></fn-group><fn-group content-type="ethics-information"><title>Ethics</title><fn fn-type="other"><p>Animal experimentation: Experiments were performed in accordance with institutional animal care standards, using protocol (#00847.02) of the Institut de la Vision (Agreement number A751202). The protocol was approved by the Charles Darwin ethic committee (CEEACD/N°5)</p></fn></fn-group></sec><sec id="s6" sec-type="supplementary-material"><title>Additional files</title><supplementary-material id="transrepform"><object-id pub-id-type="doi">10.7554/eLife.34518.008</object-id><label>Transparent reporting form</label><media mime-subtype="pdf" mimetype="application" xlink:href="elife-34518-transrepform-v2.pdf"/></supplementary-material><sec id="s7" sec-type="datasets"><title>Major datasets</title><p>The following dataset was generated:</p><p><related-object content-type="generated-dataset" id="dataset1" source-id="http://dx.doi.org/10.5281/zenodo.1205233" source-id-type="uri"><collab collab-type="author">Giulia LB Spampinato</collab><collab collab-type="author">Elric Esposito</collab><collab collab-type="author">Pierre Yger</collab><collab collab-type="author">Jens Duebel</collab><collab collab-type="author">Serge Picaud</collab><collab collab-type="author">Olivier Marre</collab><year>2018</year><source>Ground truth recordings for validation of spike sorting algorithms</source><ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.5281/zenodo.1205233">http://dx.doi.org/10.5281/zenodo.1205233</ext-link><comment>Publicly available at Zenodo</comment></related-object></p><p>The following previously published dataset was used:</p><p><related-object content-type="generated-dataset" id="dataset2" source-id="http://www.kampff-lab.org/validating-electrodes/" source-id-type="uri"><collab collab-type="author">Neto JP</collab><collab collab-type="author">Lopes G</collab><collab collab-type="author">Frazao J</collab><collab collab-type="author">Nogueira J</collab><collab collab-type="author">Lacerda P</collab><collab collab-type="author">Baiao P</collab><collab collab-type="author">Aarts A</collab><collab collab-type="author">Andrei A</collab><collab collab-type="author">Musa s</collab><collab collab-type="author">Fortunato E</collab><collab collab-type="author">Barquinha P</collab><collab collab-type="author">Kampff AR</collab><year>2016</year><source>Ground-Truth data from silicon polytrodes</source><ext-link ext-link-type="uri" xlink:href="http://www.kampff-lab.org/validating-electrodes/">http://www.kampff-lab.org/validating-electrodes/</ext-link><comment>Directly available for download</comment></related-object></p></sec></sec><ref-list><title>References</title><ref id="bib1"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Anastassiou</surname> <given-names>CA</given-names></name><name><surname>Perin</surname> <given-names>R</given-names></name><name><surname>Buzsáki</surname> <given-names>G</given-names></name><name><surname>Markram</surname> <given-names>H</given-names></name><name><surname>Koch</surname> <given-names>C</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Cell type- and activity-dependent extracellular correlates of intracellular spiking</article-title><source>Journal of Neurophysiology</source><volume>114</volume><fpage>608</fpage><lpage>623</lpage><pub-id pub-id-type="doi">10.1152/jn.00628.2014</pub-id><pub-id pub-id-type="pmid">25995352</pub-id></element-citation></ref><ref id="bib2"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Benda</surname> <given-names>J</given-names></name><name><surname>Gollisch</surname> <given-names>T</given-names></name><name><surname>Machens</surname> <given-names>CK</given-names></name><name><surname>Herz</surname> <given-names>AV</given-names></name></person-group><year iso-8601-date="2007">2007</year><article-title>From response to stimulus: adaptive sampling in sensory physiology</article-title><source>Current Opinion in Neurobiology</source><volume>17</volume><fpage>430</fpage><lpage>436</lpage><pub-id pub-id-type="doi">10.1016/j.conb.2007.07.009</pub-id><pub-id pub-id-type="pmid">17689952</pub-id></element-citation></ref><ref id="bib3"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Berdondini</surname> <given-names>L</given-names></name><name><surname>van der Wal</surname> <given-names>PD</given-names></name><name><surname>Guenat</surname> <given-names>O</given-names></name><name><surname>de Rooij</surname> <given-names>NF</given-names></name><name><surname>Koudelka-Hep</surname> <given-names>M</given-names></name><name><surname>Seitz</surname> <given-names>P</given-names></name><name><surname>Kaufmann</surname> <given-names>R</given-names></name><name><surname>Metzler</surname> <given-names>P</given-names></name><name><surname>Blanc</surname> <given-names>N</given-names></name><name><surname>Rohr</surname> <given-names>S</given-names></name></person-group><year iso-8601-date="2005">2005</year><article-title>High-density electrode array for imaging in vitro electrophysiological activity</article-title><source>Biosensors and Bioelectronics</source><volume>21</volume><fpage>167</fpage><lpage>174</lpage><pub-id pub-id-type="doi">10.1016/j.bios.2004.08.011</pub-id><pub-id pub-id-type="pmid">15967365</pub-id></element-citation></ref><ref id="bib4"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Bertotti</surname> <given-names>G</given-names></name><name><surname>Velychko</surname> <given-names>D</given-names></name><name><surname>Dodel</surname> <given-names>N</given-names></name><name><surname>St. Keil</surname> <given-names>D</given-names></name><name><surname>Wolansky</surname> <given-names>B</given-names></name><name><surname>Tillak</surname> <given-names>M</given-names></name><name><surname>Schreiter</surname> <given-names>A</given-names></name><name><surname>Grall</surname> <given-names>P</given-names></name><name><surname>Jesinger</surname> <given-names>R</given-names></name><name><surname>Rohler</surname> <given-names>M</given-names></name><name><surname>Eickenscheidt</surname> <given-names>A</given-names></name><name><surname>Stett</surname> <given-names>A</given-names></name><name><surname>Moller</surname> <given-names>KH</given-names></name><name><surname>Boven</surname> <given-names>G</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>A cmos-based sensor array for in-vitro neural tissue interfacing with 4225 recording sites and 1024 stimulation sites</article-title><conf-name>Biomedical Circuits and Systems Conference (BioCAS), 2014 IEEE</conf-name><fpage>304</fpage><lpage>307</lpage><pub-id pub-id-type="doi">10.1109/BioCAS.2014.6981723</pub-id></element-citation></ref><ref id="bib5"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Buzsáki</surname> <given-names>G</given-names></name></person-group><year iso-8601-date="2004">2004</year><article-title>Large-scale recording of neuronal ensembles</article-title><source>Nature Neuroscience</source><volume>7</volume><fpage>446</fpage><lpage>451</lpage><pub-id pub-id-type="doi">10.1038/nn1233</pub-id><pub-id pub-id-type="pmid">15114356</pub-id></element-citation></ref><ref id="bib6"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Buzsáki</surname> <given-names>G</given-names></name></person-group><year iso-8601-date="2010">2010</year><article-title>Neural syntax: cell assemblies, synapsembles, and readers</article-title><source>Neuron</source><volume>68</volume><fpage>362</fpage><lpage>385</lpage><pub-id pub-id-type="doi">10.1016/j.neuron.2010.09.023</pub-id><pub-id pub-id-type="pmid">21040841</pub-id></element-citation></ref><ref id="bib7"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chung</surname> <given-names>JE</given-names></name><name><surname>Magland</surname> <given-names>JF</given-names></name><name><surname>Barnett</surname> <given-names>AH</given-names></name><name><surname>Tolosa</surname> <given-names>VM</given-names></name><name><surname>Tooker</surname> <given-names>AC</given-names></name><name><surname>Lee</surname> <given-names>KY</given-names></name><name><surname>Shah</surname> <given-names>KG</given-names></name><name><surname>Felix</surname> <given-names>SH</given-names></name><name><surname>Frank</surname> <given-names>LM</given-names></name><name><surname>Greengard</surname> <given-names>LF</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>A fully automated approach to spike sorting</article-title><source>Neuron</source><volume>95</volume><fpage>1381</fpage><lpage>1394</lpage><pub-id pub-id-type="doi">10.1016/j.neuron.2017.08.030</pub-id><pub-id pub-id-type="pmid">28910621</pub-id></element-citation></ref><ref id="bib8"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Dalcin</surname> <given-names>LD</given-names></name><name><surname>Paz</surname> <given-names>RR</given-names></name><name><surname>Kler</surname> <given-names>PA</given-names></name><name><surname>Cosimo</surname> <given-names>A</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>Parallel distributed computing using Python</article-title><source>Advances in Water Resources</source><volume>34</volume><fpage>1124</fpage><lpage>1139</lpage><pub-id pub-id-type="doi">10.1016/j.advwatres.2011.04.013</pub-id></element-citation></ref><ref id="bib9"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Denman</surname> <given-names>DJ</given-names></name><name><surname>Siegle</surname> <given-names>JH</given-names></name><name><surname>Koch</surname> <given-names>C</given-names></name><name><surname>Reid</surname> <given-names>RC</given-names></name><name><surname>Blanche</surname> <given-names>TJ</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Spatial organization of chromatic pathways in the mouse dorsal lateral geniculate nucleus</article-title><source>The Journal of Neuroscience</source><volume>37</volume><fpage>1102</fpage><lpage>1116</lpage><pub-id pub-id-type="doi">10.1523/JNEUROSCI.1742-16.2016</pub-id><pub-id pub-id-type="pmid">27986926</pub-id></element-citation></ref><ref id="bib10"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Einevoll</surname> <given-names>GT</given-names></name><name><surname>Franke</surname> <given-names>F</given-names></name><name><surname>Hagen</surname> <given-names>E</given-names></name><name><surname>Pouzat</surname> <given-names>C</given-names></name><name><surname>Harris</surname> <given-names>KD</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>Towards reliable spike-train recordings from thousands of neurons with multielectrodes</article-title><source>Current Opinion in Neurobiology</source><volume>22</volume><fpage>11</fpage><lpage>17</lpage><pub-id pub-id-type="doi">10.1016/j.conb.2011.10.001</pub-id><pub-id pub-id-type="pmid">22023727</pub-id></element-citation></ref><ref id="bib11"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fiscella</surname> <given-names>M</given-names></name><name><surname>Farrow</surname> <given-names>K</given-names></name><name><surname>Jones</surname> <given-names>IL</given-names></name><name><surname>Jäckel</surname> <given-names>D</given-names></name><name><surname>Müller</surname> <given-names>J</given-names></name><name><surname>Frey</surname> <given-names>U</given-names></name><name><surname>Bakkum</surname> <given-names>DJ</given-names></name><name><surname>Hantz</surname> <given-names>P</given-names></name><name><surname>Roska</surname> <given-names>B</given-names></name><name><surname>Hierlemann</surname> <given-names>A</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>Recording from defined populations of retinal ganglion cells using a high-density CMOS-integrated microelectrode array with real-time switchable electrode selection</article-title><source>Journal of Neuroscience Methods</source><volume>211</volume><fpage>103</fpage><lpage>113</lpage><pub-id pub-id-type="doi">10.1016/j.jneumeth.2012.08.017</pub-id><pub-id pub-id-type="pmid">22939921</pub-id></element-citation></ref><ref id="bib12"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Franke</surname> <given-names>F</given-names></name><name><surname>Jäckel</surname> <given-names>D</given-names></name><name><surname>Dragas</surname> <given-names>J</given-names></name><name><surname>Müller</surname> <given-names>J</given-names></name><name><surname>Radivojevic</surname> <given-names>M</given-names></name><name><surname>Bakkum</surname> <given-names>D</given-names></name><name><surname>Hierlemann</surname> <given-names>A</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>High-density microelectrode array recordings and real-time spike sorting for closed-loop experiments: an emerging technology to study neural plasticity</article-title><source>Frontiers in Neural Circuits</source><volume>6</volume><elocation-id>105</elocation-id><pub-id pub-id-type="doi">10.3389/fncir.2012.00105</pub-id><pub-id pub-id-type="pmid">23267316</pub-id></element-citation></ref><ref id="bib13"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Franke</surname> <given-names>F</given-names></name><name><surname>Pröpper</surname> <given-names>R</given-names></name><name><surname>Alle</surname> <given-names>H</given-names></name><name><surname>Meier</surname> <given-names>P</given-names></name><name><surname>Geiger</surname> <given-names>JR</given-names></name><name><surname>Obermayer</surname> <given-names>K</given-names></name><name><surname>Munk</surname> <given-names>MH</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Spike sorting of synchronous spikes from local neuron ensembles</article-title><source>Journal of Neurophysiology</source><volume>114</volume><fpage>2535</fpage><lpage>2549</lpage><pub-id pub-id-type="doi">10.1152/jn.00993.2014</pub-id><pub-id pub-id-type="pmid">26289473</pub-id></element-citation></ref><ref id="bib14"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Franke</surname> <given-names>F</given-names></name><name><surname>Quian Quiroga</surname> <given-names>R</given-names></name><name><surname>Hierlemann</surname> <given-names>A</given-names></name><name><surname>Obermayer</surname> <given-names>K</given-names></name></person-group><year iso-8601-date="2015">2015b</year><article-title>Bayes optimal template matching for spike sorting - combining fisher discriminant analysis with optimal filtering</article-title><source>Journal of Computational Neuroscience</source><volume>38</volume><fpage>439</fpage><lpage>459</lpage><pub-id pub-id-type="doi">10.1007/s10827-015-0547-7</pub-id><pub-id pub-id-type="pmid">25652689</pub-id></element-citation></ref><ref id="bib15"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hagen</surname> <given-names>E</given-names></name><name><surname>Ness</surname> <given-names>TV</given-names></name><name><surname>Khosrowshahi</surname> <given-names>A</given-names></name><name><surname>Sørensen</surname> <given-names>C</given-names></name><name><surname>Fyhn</surname> <given-names>M</given-names></name><name><surname>Hafting</surname> <given-names>T</given-names></name><name><surname>Franke</surname> <given-names>F</given-names></name><name><surname>Einevoll</surname> <given-names>GT</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>ViSAPy: a Python tool for biophysics-based generation of virtual spiking activity for evaluation of spike-sorting algorithms</article-title><source>Journal of Neuroscience Methods</source><volume>245</volume><fpage>182</fpage><lpage>204</lpage><pub-id pub-id-type="doi">10.1016/j.jneumeth.2015.01.029</pub-id><pub-id pub-id-type="pmid">25662445</pub-id></element-citation></ref><ref id="bib16"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Hamilton</surname> <given-names>L</given-names></name><name><surname>McConley</surname> <given-names>M</given-names></name><name><surname>Angermueller</surname> <given-names>K</given-names></name><name><surname>Goldberg</surname> <given-names>D</given-names></name><name><surname>Corba</surname> <given-names>M</given-names></name><name><surname>Kim</surname> <given-names>L</given-names></name><name><surname>Moran</surname> <given-names>J</given-names></name><name><surname>Parks</surname> <given-names>PD</given-names></name><name><surname>Chin</surname> <given-names>S</given-names></name><name><surname>Widge</surname> <given-names>AS</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title><italic>Neural Signal Processing and Closed-Loop Control Algorithm Design for an Implanted Neural Recording and Stimulation System</italic></article-title><conf-name>Engineering in Medicine and Biology Society (EMBC), 2015 37th Annual International Conference of the IEEE</conf-name><fpage>7831</fpage><lpage>7836</lpage><pub-id pub-id-type="doi">10.1109/EMBC.2015.7320207</pub-id></element-citation></ref><ref id="bib17"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Harris</surname> <given-names>KD</given-names></name><name><surname>Henze</surname> <given-names>DA</given-names></name><name><surname>Csicsvari</surname> <given-names>J</given-names></name><name><surname>Hirase</surname> <given-names>H</given-names></name><name><surname>Buzsáki</surname> <given-names>G</given-names></name></person-group><year iso-8601-date="2000">2000</year><article-title>Accuracy of tetrode spike separation as determined by simultaneous intracellular and extracellular measurements</article-title><source>Journal of Neurophysiology</source><volume>84</volume><fpage>401</fpage><lpage>414</lpage><pub-id pub-id-type="doi">10.1152/jn.2000.84.1.401</pub-id><pub-id pub-id-type="pmid">10899214</pub-id></element-citation></ref><ref id="bib18"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Henze</surname> <given-names>DA</given-names></name><name><surname>Borhegyi</surname> <given-names>Z</given-names></name><name><surname>Csicsvari</surname> <given-names>J</given-names></name><name><surname>Mamiya</surname> <given-names>A</given-names></name><name><surname>Harris</surname> <given-names>KD</given-names></name><name><surname>Buzsáki</surname> <given-names>G</given-names></name></person-group><year iso-8601-date="2000">2000</year><article-title>Intracellular features predicted by extracellular recordings in the hippocampus in vivo</article-title><source>Journal of Neurophysiology</source><volume>84</volume><fpage>390</fpage><lpage>400</lpage><pub-id pub-id-type="doi">10.1152/jn.2000.84.1.390</pub-id><pub-id pub-id-type="pmid">10899213</pub-id></element-citation></ref><ref id="bib19"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hilgen</surname> <given-names>G</given-names></name><name><surname>Sorbaro</surname> <given-names>M</given-names></name><name><surname>Pirmoradian</surname> <given-names>S</given-names></name><name><surname>Muthmann</surname> <given-names>JO</given-names></name><name><surname>Kepiro</surname> <given-names>IE</given-names></name><name><surname>Ullo</surname> <given-names>S</given-names></name><name><surname>Ramirez</surname> <given-names>CJ</given-names></name><name><surname>Puente Encinas</surname> <given-names>A</given-names></name><name><surname>Maccione</surname> <given-names>A</given-names></name><name><surname>Berdondini</surname> <given-names>L</given-names></name><name><surname>Murino</surname> <given-names>V</given-names></name><name><surname>Sona</surname> <given-names>D</given-names></name><name><surname>Cella Zanacchi</surname> <given-names>F</given-names></name><name><surname>Sernagor</surname> <given-names>E</given-names></name><name><surname>Hennig</surname> <given-names>MH</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Unsupervised spike sorting for large-scale, high-density multielectrode arrays</article-title><source>Cell Reports</source><volume>18</volume><fpage>2521</fpage><lpage>2532</lpage><pub-id pub-id-type="doi">10.1016/j.celrep.2017.02.038</pub-id><pub-id pub-id-type="pmid">28273464</pub-id></element-citation></ref><ref id="bib20"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hill</surname> <given-names>DN</given-names></name><name><surname>Mehta</surname> <given-names>SB</given-names></name><name><surname>Kleinfeld</surname> <given-names>D</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>Quality metrics to accompany spike sorting of extracellular signals</article-title><source>Journal of Neuroscience</source><volume>31</volume><fpage>8699</fpage><lpage>8705</lpage><pub-id pub-id-type="doi">10.1523/JNEUROSCI.0971-11.2011</pub-id><pub-id pub-id-type="pmid">21677152</pub-id></element-citation></ref><ref id="bib21"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hubel</surname> <given-names>DH</given-names></name></person-group><year iso-8601-date="1957">1957</year><article-title>Tungsten microelectrode for recording from single units</article-title><source>Science</source><volume>125</volume><fpage>549</fpage><lpage>550</lpage><pub-id pub-id-type="doi">10.1126/science.125.3247.549</pub-id><pub-id pub-id-type="pmid">17793797</pub-id></element-citation></ref><ref id="bib22"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Jun</surname> <given-names>JJ</given-names></name><name><surname>Mitelut</surname> <given-names>C</given-names></name><name><surname>Lai</surname> <given-names>C</given-names></name><name><surname>Gratiy</surname> <given-names>S</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Real-time spike sorting platform for high-density extracellular probes with ground-truth validation and drift correction</article-title><source>bioRxiv</source><pub-id pub-id-type="doi">10.1101/101030</pub-id></element-citation></ref><ref id="bib23"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kadir</surname> <given-names>SN</given-names></name><name><surname>Goodman</surname> <given-names>DF</given-names></name><name><surname>Harris</surname> <given-names>KD</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>High-dimensional cluster analysis with the masked EM algorithm</article-title><source>Neural Computation</source><volume>26</volume><fpage>2379</fpage><lpage>2394</lpage><pub-id pub-id-type="doi">10.1162/NECO_a_00661</pub-id><pub-id pub-id-type="pmid">25149694</pub-id></element-citation></ref><ref id="bib24"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kuhn</surname> <given-names>A</given-names></name><name><surname>Aertsen</surname> <given-names>A</given-names></name><name><surname>Rotter</surname> <given-names>S</given-names></name></person-group><year iso-8601-date="2003">2003</year><article-title>Higher-order statistics of input ensembles and the response of simple model neurons</article-title><source>Neural Computation</source><volume>15</volume><fpage>67</fpage><lpage>101</lpage><pub-id pub-id-type="doi">10.1162/089976603321043702</pub-id><pub-id pub-id-type="pmid">12590820</pub-id></element-citation></ref><ref id="bib25"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lambacher</surname> <given-names>A</given-names></name><name><surname>Jenkner</surname> <given-names>M</given-names></name><name><surname>Merz</surname> <given-names>M</given-names></name><name><surname>Eversmann</surname> <given-names>B</given-names></name><name><surname>Kaul</surname> <given-names>RA</given-names></name><name><surname>Hofmann</surname> <given-names>F</given-names></name><name><surname>Thewes</surname> <given-names>R</given-names></name><name><surname>Fromherz</surname> <given-names>P</given-names></name></person-group><year iso-8601-date="2004">2004</year><article-title>Electrical imaging of neuronal activity by multi-transistor-array (MTA) recording at 7.8�?m resolution</article-title><source>Applied Physics A</source><volume>79</volume><fpage>1607</fpage><lpage>1611</lpage><pub-id pub-id-type="doi">10.1007/s00339-004-2991-5</pub-id></element-citation></ref><ref id="bib26"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Lee</surname> <given-names>J</given-names></name><name><surname>Carlson</surname> <given-names>D</given-names></name><name><surname>Shokri</surname> <given-names>H</given-names></name><name><surname>Yao</surname> <given-names>W</given-names></name><name><surname>Goetz</surname> <given-names>G</given-names></name><name><surname>Hagen</surname> <given-names>E</given-names></name><name><surname>Batty</surname> <given-names>E</given-names></name><name><surname>Chichilnisky</surname> <given-names>EJ</given-names></name><name><surname>Einevoll</surname> <given-names>G</given-names></name><name><surname>Paninski</surname> <given-names>L</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Yass: Yet another spike sorter</article-title><source>bioRxiv</source><pub-id pub-id-type="doi">10.1101/151928</pub-id></element-citation></ref><ref id="bib27"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Leibig</surname> <given-names>C</given-names></name><name><surname>Wachtler</surname> <given-names>T</given-names></name><name><surname>Zeck</surname> <given-names>G</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Unsupervised neural spike sorting for high-density microelectrode arrays with convolutive independent component analysis</article-title><source>Journal of Neuroscience Methods</source><volume>271</volume><fpage>1</fpage><lpage>13</lpage><pub-id pub-id-type="doi">10.1016/j.jneumeth.2016.06.006</pub-id><pub-id pub-id-type="pmid">27317497</pub-id></element-citation></ref><ref id="bib28"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lewicki</surname> <given-names>MS</given-names></name></person-group><year iso-8601-date="1994">1994</year><article-title>Bayesian modeling and classification of neural signals</article-title><source>Neural Computation</source><volume>6</volume><fpage>1005</fpage><lpage>1030</lpage><pub-id pub-id-type="doi">10.1162/neco.1994.6.5.1005</pub-id></element-citation></ref><ref id="bib29"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Litke</surname> <given-names>AM</given-names></name><name><surname>Bezayiff</surname> <given-names>N</given-names></name><name><surname>Chichilnisky</surname> <given-names>EJ</given-names></name><name><surname>Cunningham</surname> <given-names>W</given-names></name><name><surname>Dabrowski</surname> <given-names>W</given-names></name><name><surname>Grillo</surname> <given-names>AA</given-names></name><name><surname>Grivich</surname> <given-names>M</given-names></name><name><surname>Grybos</surname> <given-names>P</given-names></name><name><surname>Hottowy</surname> <given-names>P</given-names></name><name><surname>Kachiguine</surname> <given-names>S</given-names></name><name><surname>Kalmar</surname> <given-names>RS</given-names></name><name><surname>Mathieson</surname> <given-names>K</given-names></name><name><surname>Petrusca</surname> <given-names>D</given-names></name><name><surname>Rahman</surname> <given-names>M</given-names></name><name><surname>Sher</surname> <given-names>A</given-names></name></person-group><year iso-8601-date="2004">2004</year><article-title>What does the eye tell the brain?: Development of a system for the large-scale recording of retinal output activity</article-title><source>IEEE Transactions on Nuclear Science</source><volume>51</volume><fpage>1434</fpage><lpage>1440</lpage><pub-id pub-id-type="doi">10.1109/TNS.2004.832706</pub-id></element-citation></ref><ref id="bib30"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mallat</surname> <given-names>SG</given-names></name><name><surname>Zhang</surname> <given-names>Z</given-names></name></person-group><year iso-8601-date="1993">1993</year><article-title>Matching pursuits with time-frequency dictionaries</article-title><source>IEEE Transactions on Signal Processing</source><volume>41</volume><fpage>3397</fpage><lpage>3415</lpage><pub-id pub-id-type="doi">10.1109/78.258082</pub-id></element-citation></ref><ref id="bib31"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Marre</surname> <given-names>O</given-names></name><name><surname>Amodei</surname> <given-names>D</given-names></name><name><surname>Deshmukh</surname> <given-names>N</given-names></name><name><surname>Sadeghi</surname> <given-names>K</given-names></name><name><surname>Soo</surname> <given-names>F</given-names></name><name><surname>Holy</surname> <given-names>TE</given-names></name><name><surname>Berry</surname> <given-names>MJ</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>Mapping a complete neural population in the retina</article-title><source>Journal of Neuroscience</source><volume>32</volume><fpage>14859</fpage><lpage>14873</lpage><pub-id pub-id-type="doi">10.1523/JNEUROSCI.0723-12.2012</pub-id><pub-id pub-id-type="pmid">23100409</pub-id></element-citation></ref><ref id="bib32"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Meister</surname> <given-names>M</given-names></name><name><surname>Pine</surname> <given-names>J</given-names></name><name><surname>Baylor</surname> <given-names>DA</given-names></name></person-group><year iso-8601-date="1994">1994</year><article-title>Multi-neuronal signals from the retina: acquisition and analysis</article-title><source>Journal of Neuroscience Methods</source><volume>51</volume><fpage>95</fpage><lpage>106</lpage><pub-id pub-id-type="doi">10.1016/0165-0270(94)90030-2</pub-id><pub-id pub-id-type="pmid">8189755</pub-id></element-citation></ref><ref id="bib33"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mena</surname> <given-names>GE</given-names></name><name><surname>Grosberg</surname> <given-names>LE</given-names></name><name><surname>Madugula</surname> <given-names>S</given-names></name><name><surname>Hottowy</surname> <given-names>P</given-names></name><name><surname>Litke</surname> <given-names>A</given-names></name><name><surname>Cunningham</surname> <given-names>J</given-names></name><name><surname>Chichilnisky</surname> <given-names>EJ</given-names></name><name><surname>Paninski</surname> <given-names>L</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Electrical stimulus artifact cancellation and neural spike detection on large multi-electrode arrays</article-title><source>PLoS Computational Biology</source><volume>13</volume><elocation-id>e1005842</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pcbi.1005842</pub-id><pub-id pub-id-type="pmid">29131818</pub-id></element-citation></ref><ref id="bib34"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Neto</surname> <given-names>JP</given-names></name><name><surname>Lopes</surname> <given-names>G</given-names></name><name><surname>Frazão</surname> <given-names>J</given-names></name><name><surname>Nogueira</surname> <given-names>J</given-names></name><name><surname>Lacerda</surname> <given-names>P</given-names></name><name><surname>Baião</surname> <given-names>P</given-names></name><name><surname>Aarts</surname> <given-names>A</given-names></name><name><surname>Andrei</surname> <given-names>A</given-names></name><name><surname>Musa</surname> <given-names>S</given-names></name><name><surname>Fortunato</surname> <given-names>E</given-names></name><name><surname>Barquinha</surname> <given-names>P</given-names></name><name><surname>Kampff</surname> <given-names>AR</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Validating silicon polytrodes with paired juxtacellular recordings: method and dataset</article-title><source>Journal of Neurophysiology</source><volume>116</volume><fpage>892</fpage><lpage>903</lpage><pub-id pub-id-type="doi">10.1152/jn.00103.2016</pub-id><pub-id pub-id-type="pmid">27306671</pub-id></element-citation></ref><ref id="bib35"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Pachitariu</surname> <given-names>M</given-names></name><name><surname>Steinmetz</surname> <given-names>NA</given-names></name><name><surname>Kadir</surname> <given-names>SN</given-names></name><name><surname>Carandini</surname> <given-names>M</given-names></name><name><surname>Harris</surname> <given-names>KD</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Fast and accurate spike sorting of high-channel count probes with kilosort</article-title><conf-name>Advances in Neural Information Processing Systems 29: Annual Conference on Neural Information Processing Systems</conf-name><conf-loc>Barcelona, Spain</conf-loc><fpage>4448</fpage><lpage>4456</lpage></element-citation></ref><ref id="bib36"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pillow</surname> <given-names>JW</given-names></name><name><surname>Shlens</surname> <given-names>J</given-names></name><name><surname>Chichilnisky</surname> <given-names>EJ</given-names></name><name><surname>Simoncelli</surname> <given-names>EP</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>A model-based spike sorting algorithm for removing correlation artifacts in multi-neuron recordings</article-title><source>PLoS One</source><volume>8</volume><elocation-id>e62123</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pone.0062123</pub-id><pub-id pub-id-type="pmid">23671583</pub-id></element-citation></ref><ref id="bib37"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pouzat</surname> <given-names>C</given-names></name><name><surname>Mazor</surname> <given-names>O</given-names></name><name><surname>Laurent</surname> <given-names>G</given-names></name></person-group><year iso-8601-date="2002">2002</year><article-title>Using noise signature to optimize spike-sorting and to assess neuronal classification quality</article-title><source>Journal of Neuroscience Methods</source><volume>122</volume><fpage>43</fpage><lpage>57</lpage><pub-id pub-id-type="doi">10.1016/S0165-0270(02)00276-5</pub-id><pub-id pub-id-type="pmid">12535763</pub-id></element-citation></ref><ref id="bib38"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Quiroga</surname> <given-names>RQ</given-names></name><name><surname>Nadasdy</surname> <given-names>Z</given-names></name><name><surname>Ben-Shaul</surname> <given-names>Y</given-names></name></person-group><year iso-8601-date="2004">2004</year><article-title>Unsupervised spike detection and sorting with wavelets and superparamagnetic clustering</article-title><source>Neural Computation</source><volume>16</volume><fpage>1661</fpage><lpage>1687</lpage><pub-id pub-id-type="doi">10.1162/089976604774201631</pub-id><pub-id pub-id-type="pmid">15228749</pub-id></element-citation></ref><ref id="bib39"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rodriguez</surname> <given-names>A</given-names></name><name><surname>Laio</surname> <given-names>A</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Clustering by fast search and find of density peaks</article-title><source>Science</source><volume>344</volume><fpage>1492</fpage><lpage>1496</lpage><pub-id pub-id-type="doi">10.1126/science.1242072</pub-id></element-citation></ref><ref id="bib40"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rossant</surname> <given-names>C</given-names></name><name><surname>Harris</surname> <given-names>KD</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Hardware-accelerated interactive data visualization for neuroscience in Python</article-title><source>Frontiers in Neuroinformatics</source><volume>7</volume><pub-id pub-id-type="doi">10.3389/fninf.2013.00036</pub-id><pub-id pub-id-type="pmid">24391582</pub-id></element-citation></ref><ref id="bib41"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rossant</surname> <given-names>C</given-names></name><name><surname>Kadir</surname> <given-names>SN</given-names></name><name><surname>Goodman</surname> <given-names>DFM</given-names></name><name><surname>Schulman</surname> <given-names>J</given-names></name><name><surname>Hunter</surname> <given-names>MLD</given-names></name><name><surname>Saleem</surname> <given-names>AB</given-names></name><name><surname>Grosmark</surname> <given-names>A</given-names></name><name><surname>Belluscio</surname> <given-names>M</given-names></name><name><surname>Denfield</surname> <given-names>GH</given-names></name><name><surname>Ecker</surname> <given-names>AS</given-names></name><name><surname>Tolias</surname> <given-names>AS</given-names></name><name><surname>Solomon</surname> <given-names>S</given-names></name><name><surname>Buzsaki</surname> <given-names>G</given-names></name><name><surname>Carandini</surname> <given-names>M</given-names></name><name><surname>Harris</surname> <given-names>KD</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Spike sorting for large, dense electrode arrays</article-title><source>Nature Neuroscience</source><volume>19</volume><fpage>634</fpage><lpage>641</lpage><pub-id pub-id-type="doi">10.1038/nn.4268</pub-id><pub-id pub-id-type="pmid">26974951</pub-id></element-citation></ref><ref id="bib42"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Segev</surname> <given-names>R</given-names></name><name><surname>Goodhouse</surname> <given-names>J</given-names></name><name><surname>Puchalla</surname> <given-names>J</given-names></name><name><surname>Berry</surname> <given-names>MJ</given-names></name></person-group><year iso-8601-date="2004">2004</year><article-title>Recording spikes from a large fraction of the ganglion cells in a retinal patch</article-title><source>Nature Neuroscience</source><volume>7</volume><fpage>1155</fpage><lpage>1162</lpage><pub-id pub-id-type="doi">10.1038/nn1323</pub-id></element-citation></ref><ref id="bib43"><element-citation publication-type="data"><person-group person-group-type="author"><name><surname>Spampinato</surname> <given-names>GLB</given-names></name><name><surname>Esposito</surname> <given-names>E</given-names></name><name><surname>Duebel</surname> <given-names>J</given-names></name><name><surname>Yger</surname> <given-names>P</given-names></name><name><surname>Picaud</surname> <given-names>S</given-names></name><name><surname>Marre</surname> <given-names>O</given-names></name></person-group><year iso-8601-date="2018">2018</year><data-title>Ground truth recordings for validation of spike sorting algorithms</data-title><ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.1205233">https://doi.org/10.5281/zenodo.1205233</ext-link></element-citation></ref><ref id="bib44"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Swindale</surname> <given-names>NV</given-names></name><name><surname>Spacek</surname> <given-names>MA</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Spike sorting for polytrodes: a divide and conquer approach</article-title><source>Frontiers in Systems Neuroscience</source><volume>8</volume><pub-id pub-id-type="doi">10.3389/fnsys.2014.00006</pub-id><pub-id pub-id-type="pmid">24574979</pub-id></element-citation></ref><ref id="bib45"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wilson</surname> <given-names>CD</given-names></name><name><surname>Serrano</surname> <given-names>GO</given-names></name><name><surname>Koulakov</surname> <given-names>AA</given-names></name><name><surname>Rinberg</surname> <given-names>D</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>A primacy code for odor identity</article-title><source>Nature Communications</source><volume>8</volume><elocation-id>1477</elocation-id><pub-id pub-id-type="doi">10.1038/s41467-017-01432-4</pub-id><pub-id pub-id-type="pmid">29133907</pub-id></element-citation></ref><ref id="bib46"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zeck</surname> <given-names>G</given-names></name><name><surname>Lambacher</surname> <given-names>A</given-names></name><name><surname>Fromherz</surname> <given-names>P</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>Axonal transmission in the retina introduces a small dispersion of relative timing in the ganglion cell population response</article-title><source>PLoS One</source><volume>6</volume><elocation-id>e20810</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pone.0020810</pub-id><pub-id pub-id-type="pmid">21674067</pub-id></element-citation></ref></ref-list></back><sub-article article-type="decision-letter" id="SA1"><front-stub><article-id pub-id-type="doi">10.7554/eLife.34518.014</article-id><title-group><article-title>Decision letter</article-title></title-group><contrib-group><contrib contrib-type="editor"><name><surname>Kleinfeld</surname><given-names>David</given-names></name><role>Reviewing Editor</role><aff id="aff5"><institution>University of California, San Diego</institution><country>United States</country></aff></contrib></contrib-group></front-stub><body><boxed-text><p>In the interests of transparency, eLife includes the editorial decision letter and accompanying author responses. A lightly edited version of the letter sent to the authors after peer review is shown, indicating the most substantive concerns; minor comments are not usually included.</p></boxed-text><p>[Editors’ note: a previous version of this study was rejected after peer review, but the authors submitted for reconsideration. The first decision letter after peer review is shown below.]</p><p>Thank you for submitting your work entitled &quot;A spike sorting toolbox for up to thousands of electrodes validated with ground truth recordings in vitro and in vivo&quot; for consideration by <italic>eLife</italic>. Your article has been reviewed by three peer reviewers, and the evaluation has been overseen by a Reviewing Editor and a Senior Editor.</p><p>Your work is of particular interest based on the rarity of ground truth data for spike sorting. Unfortunately, the reviewers had mixed feeling about the depth and clarity of the data and voice some significant concerns that speak against publication. The chief concern is that the ground truth data for the MEA is limited to the 7 cells for sorting errors less than 20% (Figure 2C; see comment by reviewer 1). In fact, the example (presumably one of the seven points) in Figure 2B suggests that a given cell goes not contribute a waveform to many electrodes (as implied in Figure 1; see additional comment by reviewer 1). Thus the necessity as well as utility of the algorithm seems unmotivated as it stands. Another weakness, discussed by reviewers 1 and 2, is that the merging of clusters is &quot;by hand&quot;, although there is precedent in the literature (Fee et al. 1997) for automatic merging based on avoiding events at equal time in the autocorrelation of the merged clusters. Finally, all reviewers and the Reviewing Editor find the presentation confusing or lacking. Material is not presented in a logical order, details of the algorithm as glossed over, etc.</p><p>All reviewers felt that the topic of the manuscript is timely. We understand that you may wish to take this manuscript elsewhere at this time. On the other hand, if you agree with the reviewers, we would be willing to consider a revised manuscript with a larger useful data set and with a means for automation of the merging of clusters, without assurance that the revision would be successful.</p><p><italic>Reviewer #1:</italic> </p><p>These authors report their method to do classic spike sorting, creation of single neuron spike time records, from multisite recording. They report results on both multielectrode arrays, used to record in vitro from retinal tissue, and Si probes, used to record in vivo, most frequently from rodents. Their method has been previewed on bioRxiv for some time so there is some public information comparing performance of this method to existing and other recently developed packages. While the technical treatment is thorough, I find the paper confusing, in large part because of the bifurcation of the Materials and methods and the remainder of the paper. To begin, the authors say &quot;those snippets are detected, they are projected in a feature space of lower dimension&quot;. What feature space. Ten pages later I find out PCA. How many dimensions, either 5 or 6 depending on the parts of the algorithm. Without comment, the templates are 57 sites. This seems exceptionally large, perhaps usual for MEA recording. The choice of size deserves a clear comment.</p><p>I commend the authors on their contribution of &quot;ground truth&quot; MEA data. The field is seriously deficient in reference data and this deficiency impairs progress in the computational problem at hand. Figure 2A and B are commendably clear. I find 2C to be puzzling. I would assume only the inset of retina in vitro is of any interest to the practitioners of neural recording. Error rates above 20% are of no practical utility but occupy 95% of the plot. Alternatively only 1 data point in the in vivo plat is useful. This result is not surprising given the traces in 2B. Peak to peak noise is ~10-12 uV. The usual peak threshold is 3.5-5 x RMS or 12-15 uV. As such, one would not expect to sort signal below that amplitude. With the authors template matching routine, it can be argued that smaller signals can be found but they are buried in noise, again as Figure 2C seems to illustrate. I am left wondering what 2C teaches, except, that sorting has failed in most of the conditions plotted. Does this not call into question the success of the strategy of finding template pools at high amplitude then matching those templates to the raw traces? If that is not the lesson, then the authors need to clarify the value of plotting so many failed sorting exercises. I fail to understand the value of a 50% classification error that matches the optimal classification rate. I would conclude the experiment has failed to produce adequate usable data. Further, the authors choose to compare their sorting accuracy to a previously defined metric, Best Ellipsoidal Error Rate. Harris, 2000, the original source defines this measure as &quot;This measure was designed to estimate the optimal clustering performance for a given set of feature vectors by searching over all possible ellipsoidal cluster boundaries.&quot; Is not the principal weakness of the methods of Harris reported there and later an assumption that a cluster is well described by ellipsoidal boundaries? The authors should justify this assumption in the reference data sets. I see no a priori reason that their data should be so constrained, although the &quot;ground spikes&quot; may be.</p><p>In the Discussion, especially Figure 3, trends are difficult to understand. For 3A, the plot seems to argue a superlinear dependence on processor count, 6 processors taking 1/30th the time of 2 processors. This seems implausible. Would this plot be more informative on a log time scale without a trend-line. The current plot implies that 10 processors would digest the data in negative time! 3B is much more informative, showing 400 channels would take ~20 hours of computation for 1 hour of recording. While an improvement over many current methods, is not the method of Pachatariu et al., reference in this manuscript as a bioRxiv but now also published in Advances In Neural Information Processing Systems 4448-4456 (2016). The GPU based system reported their quotes &quot;First, we timed the algorithm on several large scale datasets. The average run times for 32, 128 and 384 channel recordings were 10, 29 and 140 minutes respectively, on a single GPU-equipped workstation&quot;. While they did not quote the duration of the recording or the total number of neuronal event (a better metric of the computation burden) it seems far faster than the ~30 hours in the present manuscript. Both of the packages are available in the public domain so a direct comparison is a reasonable request. In Figure 3E, the authors plot data ranging from 0 to 15% (including error bars) to 50% full scale. Why not use the full plot height for 15%. Same comment for 3F.</p><p>Finally, the authors freely admit their strategy over segments but offer a combination of an automated merging tool as well as a &quot;dedicated GUI&quot; for manual merging. This reviewer did not implement that interface so I cannot comment directly on performance or ease of use. In the Materials and methods section, they describe in detail the method for correlation, but they do no show the error rate as a function of the parameters used for that merging.</p><p>In summary, I am undecided. The authors use an admirable amount to &quot;ground truth&quot; data, both their own and that available publicly. Unfortunately, all of these data are inadequate to the problem since the known cells are so few and in the experimental data of such low amplitude yield a residual question of performance remains. This manuscript reports a novel combination of strategies but does not appear to exceed in performance or speed other recently published packages. More than one option is probably justified based on different needs of data sets, but that optimum path is difficult to discern from this manuscript of other published data. Reporting the method is a service to the community and justified in journal space, especially for an online journal such as <italic>eLife</italic>.</p><p><italic>Reviewer #2 (General assessment and major comments (Required)):</italic> </p><p>In this report, the authors present a new approach to spike sorting that they claim is scalable to thousands of electrodes. This a very timely report as there is renewed interest in spike sorting thanks to the new electrode technologies. However, I find this report to be mixed in terms of strength of the proposed solution and clarity with which the underlying claims are made.</p><p>The strength of the proposed solution is significantly under-cut by the need for manual cluster merging. This is a really major limitation. Clustering of thousands of electrodes has to be automatic if it is to be genuinely scalable. I can imagine it would take a long time for someone to check thousands of recordings and merge, especially if they are not an expert.</p><p>The authors cite several algorithms that are designed to scale and says they are untested. This is a fair point, but why don't they test them with their ground truth data and compare the results? This would seem to be an important issue for the reader to assess the value of the proposed work in the context of the cited literature.</p><p>The Introduction implies that the spike sorting problem has been addressed for small numbers of contacts, but does not include any citations to support the point. What forms of the classical approach that the authors are referring to? I would claim that despite a great deal of attention it is not the case that low-density sorting has been solved. The high density electrode case that the authors focus on here presents new challenges but the authors need to acknowledge the known limitations of low-density approaches.</p><p>A novelty of the proposed approach is that it claims to address the superposition problem but how well this works is not demonstrated or discussed. I think the work would be strengthened if this aspect received more attention.</p><p><italic>Reviewer #3:</italic> </p><p>This manuscript presents a novel resource for automated spike sorting on data from large-scale multi-electrode recordings. The authors present new strategies for tackling large recordings with hundreds to thousands of electrodes while being able to integrate information from multiple electrodes and to disentangle overlapping spikes from multiple neurons. Thus, the resource addresses fundamental issues of spike sorting. Given the current development of recording systems with hundreds to thousands of electrodes and the paucity of methods targeted to such data sets, the presented method should therefore make a timely and very strong contribution to the field of multi-electrode recordings.</p><p>The approach appears to be well thought-through and apparently guided by much practical experience with spike-sorting issues. The manuscript is accompanied by freely available software that can be downloaded from the authors' website, and the software appears to be well documented and versatile in that it can be run on different operating systems, using different hardware configurations, with straightforward parallelization. Moreover, the authors test their spike-sorting approach on ground-truth data by combining their extracellular multi-electrode recordings with the intracellular recording of individual neurons, a laudable effort. They generally find that their automated spike sorting performs nearly as well as an &quot;optimal classifier&quot;, obtained by supervised learning of an elliptical decision boundary in the space of raw electrode signals. The authors also make this ground-truth data available, which will be a great asset available to future developments of spike sorting approaches.</p><p>My only concerns therefore relate to the presentation of the material. Given that this is a presentation of a spike sorting resource, it seems mandatory that the computational approach and the technical aspects of the algorithm be explained as thoroughly and clearly as possible so that readers and users can fully understand the approach and adjust it to their own needs by tuning the appropriate parameters. In the Results part, the explanation of the algorithm is rather brief, and it would here be useful to provide a bit more of an intuitive description of the approach (see detailed points below). The Materials and methods section, on the other hand, appears to contain some inaccuracies and small omissions of detail that make it hard to follow some of the steps.</p><p>1) The Results part is a bit sparse on explaining the approach, although this would be a nice opportunity to lay out concepts without the need for technical details. For example, it might be useful to provide some brief explanations of why limiting the clustering to the search for centroids is less demanding and what the approach in density-based clustering is. Furthermore, some explanation of what is meant by &quot;clustering each group in parallel&quot; would be helpful, including the strategy for finding the right number of clusters and merging templates and units when necessary.</p><p>2) One aspect that doesn't become clear in the main part is to what extent merging of units generally needs to be performed and how it was done for the results of Figures 2 and 3. The Materials and methods section states that several templates were used for comparison with ground-truth data. It would be useful to obtain some more information about this. Was this merging done with the GUI described in the Discussion? Was the merging done &quot;blindly&quot;, that is, before comparison with the ground-truth data, or retrospectively? Was merging the norm or the exception?</p><p>3) A potential issue with automated spike sorting is that it might be difficult to judge the sorting quality of the obtained units, that is, how reliable the units are and to what degree one may expect contamination from other cells or missed spikes. Does the resource provide for any quality control? Useful simple statistics might be the normalized spike amplitude, the distance from other templates, the quality of the fits in the template matching phase, and the variability in the fitting parameters, but maybe the authors could also point out other ways of assessing sorting quality from their own experience of using their software.</p><p>[Editors’ note: what now follows is the decision letter after the authors submitted for further consideration.]</p><p>Thank you for resubmitting your article &quot;A spike sorting toolbox for up to thousands of electrodes validated with ground truth recordings in vitro and in vivo&quot; for consideration by <italic>eLife</italic>. Your article has been reviewed by three peer reviewers, and the evaluation has been overseen by a Reviewing Editor and Eve Marder as the Senior Editor. The reviewers have opted to remain anonymous.</p><p>The reviewers have discussed the reviews with one another and the Reviewing Editor has drafted this decision to help you prepare a revised submission.</p><p>The manuscript has been improved but there are some remaining issues that must be addressed before acceptance. This is an important paper that will gain from clarity in the exposition and the correction of numerous typographical errors. Of note:</p><p>1) A table of symbols and their definitions will be of great help for the reader.</p><p>2) Confusion remains in the implementation of the original clustering process as detailed by the first reviewer. Simply, a clear delineation of the process to create a template and use the template should be completely defined pictorially as well as mathematically.</p><p>3) The reviewers identify other confusing issues, missing references, and the need to avoid &quot;double counting&quot; by using correlation of the same data set for both analysis and verification.</p><p>Please address each of the reviewer criticisms in a written reply that addresses each reviewer comment and notes all changes to the text. The revised manuscript will be assessed by the Reviewing editor.</p><p><italic>Reviewer #1:</italic> </p><p>The authors have improved the clarity of the manuscript substantially. My prior concerns have been adequately addressed. In addition to the specific comments below I would ask for additions/clarifications on three subjects.</p><p>I) First, on the path of the computation: Figure 1 is clearly the axis for most readers to understand the spike sorting process. Having carefully read the revised text as well as the original, I am still not sure how the original clustering is done. For the step of template collection, the text seems to imply that there are N clustering steps for the N electrodes. If true, one expects that each neuron would be detected on 3-8 electrodes and thus there are 3-8 times more clusters than neurons at least. The content of 1 C implies that these very many clusters are reduced to a template with 57 site &quot;snipets&quot; that make up the template. However, the example of 1C is centered on a maximum amplitude transient. How those maximum amplitude &quot;centers&quot; for templates are found is not clear to me, nor is how the expected variation around that center accommodated. Perhaps it does not need to be, since the template field is large so even is the maximum amplitude site for a given spike is off center, there is still ample information to cluster. A clear delineation of this template creation and use process would be useful, especially if it can be done pictorially as well as mathematically. How are all these redundant units merged?</p><p>II) While reading the Materials and methods section especially, but also reading the manuscript, I was constantly looking back through the text for the definition of variables and symbols. Would it be possible for the authors to make a variable definition table so that a reader can have access in one place to be reminded of variable definition for all variables in the paper?</p><p>III) The use of BEER is much better explained, but it would be useful to discuss when this assumption of elliptical boundaries is unlikely true, such as bursting cells or electrode-tissue drift.</p><p><italic>Reviewer #3:</italic> </p><p>Let me begin by stating that it is very worthwhile to have a publication that describes SpyKING CIRCUS, since it is one of a handful of tools aimed at the automated analysis of multielectrode data.</p><p>Some comments follow:</p><p>1) This paper needs significant proofreading/editing to make it more readable.</p><p>As an example, the second sentence in the second section (Results) is:</p><p>“First, spikes are being detected as threshold crossings (Figure 1A) and isolated the extracellular waveforms for a number of randomly chosen spike times.”</p><p>I know what the authors intend, but it is garbled.</p><p>2) The Results section contains a description of the algorithm. Is that the format <italic>eLife</italic> requires? It would be clearer to have sections on the Algorithm, experimental results, validation experiments, etc.</p><p>3) A distinguishing feature of the method is the ability to resolve overlapping spikes in large systems in a reasonably automatic fashion and makes this an interesting contribution.</p><p>4) Other groups have used artificial template/spike insertion as a way to validate the algorithm and some reference could be given (e.g. Rossant 2016, Chung 2017).</p><p>5) The authors use cross-correlograms in order to help automate the merging process. It should be noted that, as a side effect, one can no longer use cross-correlograms as a validation metric.</p><p>6) Equation 1 is very confusing. The authors should explain the double sum notation (why index over events and units)? I'm sure they have something in mind but I don't know what it is.</p></body></sub-article><sub-article article-type="reply" id="SA2"><front-stub><article-id pub-id-type="doi">10.7554/eLife.34518.015</article-id><title-group><article-title>Author response</article-title></title-group></front-stub><body><p>[Editors’ note: the author responses to the first round of peer review follow.]</p><disp-quote content-type="editor-comment"><p>Reviewer #1:</p><p>These authors report their method to do classic spike sorting, creation of single neuron spike time records, from multisite recording. They report results on both multielectrode arrays, used to record in vitro from retinal tissue, and Si probes, used to record in vivo, most frequently from rodents. Their method has been previewed on bioRxiv for some time so there is some public information comparing performance of this method to existing and other recently developed packages. While the technical treatment is thorough, I find the paper confusing, in large part because of the bifurcation of the Materials and methods and the remainder of the paper. To begin, the authors say &quot;those snippets are detected, they are projected in a feature space of lower dimension&quot;. What feature space. Ten pages later I find out PCA. How many dimensions, either 5 or 6 depending on the parts of the algorithm. Without comment, the templates are 57 sites. This seems exceptionally large, perhaps usual for MEA recording. The choice of size deserves a clear comment.</p></disp-quote><p>We would like to thank the reviewer for the comment. The manuscript has been intensively rewritten, and we hope that the Materials and methods and the paper are easier to understand for the reader.</p><disp-quote content-type="editor-comment"><p>I commend the authors on their contribution of &quot;ground truth&quot; MEA data. The field is seriously deficient in reference data and this deficiency impairs progress in the computational problem at hand. Figure 2A and B are commendably clear. I find 2C to be puzzling. I would assume only the inset of retina in vitro is of any interest to the practitioners of neural recording. Error rates above 20% are of no practical utility but occupy 95% of the plot. Alternatively only 1 data point in the in vivo plat is useful. This result is not surprising given the traces in 2B. Peak to peak noise is ~10-12 uV. The usual peak threshold is 3.5-5 x RMS or 12-15 uV. As such, one would not expect to sort signal below that amplitude. With the authors template matching routine, it can be argued that smaller signals can be found but they are buried in noise, again as Figure 2C seems to illustrate. I am left wondering what 2C teaches, except, that sorting has failed in most of the conditions plotted. Does this not call into question the success of the strategy of finding template pools at high amplitude then matching those templates to the raw traces? If that is not the lesson, then the authors need to clarify the value of plotting so many failed sorting exercises. I fail to understand the value of a 50% classification error that matches the optimal classification rate. I would conclude the experiment has failed to produce adequate usable data.</p></disp-quote><p>We thank the reviewer for appreciating the value of ground truth MEA data. We agree that, in the major part of our previous recordings, the spike recorded with the loose patch electrode was too low on the MEA to be properly isolated. We have therefore collected more data where the spike height measured on the multi-electrode array is large enough so that the error rate is very low (18 cells below 10% ). We found that our spike sorting algorithm was successful for all these cells. Our algorithm is therefore able to sort accurately cells where a very low error rate as expected.</p><disp-quote content-type="editor-comment"><p>Further, the authors choose to compare their sorting accuracy to a previously defined metric, Best Ellipsoidal Error Rate. Harris, 2000, the original source defines this measure as &quot;This measure was designed to estimate the optimal clustering performance for a given set of feature vectors by searching over all possible ellipsoidal cluster boundaries.&quot; Is not the principal weakness of the methods of Harris reported there and later an assumption that a cluster is well described by ellipsoidal boundaries? The authors should justify this assumption in the reference data sets. I see no a priori reason that their data should be so constrained, although the &quot;ground spikes&quot; may be.</p></disp-quote><p>We agree that the comparison with the BEER estimate was not properly justified. Our motivation is that all cells cannot be sorted with equal performance: if a cell evoked small spikes on the array, or if the extracellular waveforms are very similar to the ones triggered by another neighbour cell, then it will be difficult to sort this cell, and even the best algorithm will produce a large error rate. We thus need to compare the performance of our algorithm with an estimate of how well the “best” algorithm should perform. Unfortunately, there is no known method to provide a perfect estimate of this best performance. One simple option is to plot the error of our algorithm against the height of the spike. We did this and show that the error rate decreases when the spike height increases, as expected (see Figure 2C). However, this does not tell us if this is the best performance reachable. The BEER estimate is just one attempt at getting close to this best performance. We agree with the reviewer about the limitation of the BEER estimate: it assumes that spikes can be found in a cluster with ellipsoidal boundaries, which is probably wrong. In particular, spikes in overlap with spikes from another cell will probably be missed. The BEER estimate cannot be considered as estimating the optimal error rate. We used it because it has been used in several papers describing spike sorting methods (Harris et al., 2000, Rossant et al., 2016, Kadir et al., 2014) and has been established as a commonly accepted benchmark. To our knowledge, there is no alternative method that circumvents the issues of the BEER. We have mentioned the limitations of the BEER in the text. When compared to the error rate of our algorithm, we found similar results to the BEER. While this cannot be taken as a proof that our algorithm is optimally sorting the spikes, the fact that the error rate is close to a supervised classifier learned on the ground truth data suggests that it does very well.</p><disp-quote content-type="editor-comment"><p>In the Discussion, especially Figure 3, trends are difficult to understand. For 3A, the plot seems to argue a superlinear dependence on processor count, 6 processors taking 1/30th the time of 2 processors. This seems implausible. Would this plot be more informative on a log time scale without a trend-line. The current plot implies that 10 processors would digest the data in negative time! 3B is much more informative, showing 400 channels would take ~20 hours of computation for 1 hour of recording. While an improvement over many current methods, is not the method of Pachatariu et al., reference in this manuscript as a bioRxiv but now also published in Advances In Neural Information Processing Systems 4448-4456 (2016). The GPU based system reported their quotes &quot;First, we timed the algorithm on several large scale datasets. The average run times for 32, 128 and 384 channel recordings were 10, 29 and 140 minutes respectively, on a single GPU-equipped workstation&quot;. While they did not quote the duration of the recording or the total number of neuronal event (a better metric of the computation burden) it seems far faster than the ~30 hours in the present manuscript. Both of the packages are available in the public domain so a direct comparison is a reasonable request. In Figure 3E, the authors plot data ranging from 0 to 15% (including error bars) to 50% full scale. Why not use the full plot height for 15%. Same comment for 3F.</p></disp-quote><p>We apologize for the confusion. The time to run the algorithm is inversely proportional to the number of CPUs. We have modified the plot to make this clearer. We have also performed a direct comparison with KiloSort (Pachitariu et al., 2016). For a small enough number of electrodes, Kilosort is faster than our algorithm. However, this comes at the cost of a much larger memory usage. As a consequence, KiloSort cannot handle large recordings with more than 500 channels, while our algorithm could handle up to 4225 channels.</p><disp-quote content-type="editor-comment"><p>Finally, the authors freely admit their strategy over segments but offer a combination of an automated merging tool as well as a &quot;dedicated GUI&quot; for manual merging. This reviewer did not implement that interface so I cannot comment directly on performance or ease of use. In the Materials and methods section, they describe in detail the method for correlation, but they do no show the error rate as a function of the parameters used for that merging.</p></disp-quote><p>We have now extensively described this tool for automated merging, and shown a solution where merging can be automated with only two parameters. We have tested this fully automated strategy using the ground truth data and found that it allows sorting neurons with a good accuracy.</p><disp-quote content-type="editor-comment"><p>In summary, I am undecided. The authors use an admirable amount to &quot;ground truth&quot; data, both their own and that available publicly. Unfortunately, all of these data are inadequate to the problem since the known cells are so few and in the experimental data of such low amplitude yield a residual question of performance remains. This manuscript reports a novel combination of strategies but does not appear to exceed in performance or speed other recently published packages. More than one option is probably justified based on different needs of data sets, but that optimum path is difficult to discern from this manuscript of other published data. Reporting the method is a service to the community and justified in journal space, especially for an online journal such as eLife.</p></disp-quote><p>We hope that the novel data and improvements in the algorithm will now convince the reviewer. The new datasets have spikes with high amplitude. Our algorithm for spike sorting also allows scaling up thousands of electrodes, which is not the case of other published software.</p><disp-quote content-type="editor-comment"><p>Reviewer #2 (General assessment and major comments (Required)):</p><p>In this report, the authors present a new approach to spike sorting that they claim is scalable to thousands of electrodes. This a very timely report as there is renewed interest in spike sorting thanks to the new electrode technologies. However, I find this report to be mixed in terms of strength of the proposed solution and clarity with which the underlying claims are made.</p><p>The strength of the proposed solution is significantly under-cut by the need for manual cluster merging. This is a really major limitation. Clustering of thousands of electrodes has to be automatic if it is to be genuinely scalable. I can imagine it would take a long time for someone to check thousands of recordings and merge, especially if they are not an expert.</p><p>The authors cite several algorithms that are designed to scale and says they are untested. This is a fair point, but why don't they test them with their ground truth data and compare the results? This would seem to be an important issue for the reader to assess the value of the proposed work in the context of the cited literature.</p></disp-quote><p>We thank the reviewer for this suggestion and have now designed our own strategy to automate fully the spike sorting, with a final step of automated merging. We have tested this automated merging step with our ground truth data and found that we could reach very good performance.</p><disp-quote content-type="editor-comment"><p>The Introduction implies that the spike sorting problem has been addressed for small numbers of contacts, but does not include any citations to support the point. What forms of the classical approach that the authors are referring to? I would claim that despite a great deal of attention it is not the case that low-density sorting has been solved. The high density electrode case that the authors focus on here presents new challenges but the authors need to acknowledge the known limitations of low-density approaches.</p></disp-quote><p>We apologize for the confusion. We did not imply that spike sorting was solved for small numbers of contacts. However, it has received a lot of attention and several solutions have been proposed, although we agree it is not clear if these solutions are optimal or not. The common point of most of these solutions is to use clustering and we have now emphasized the limitations of a “pure” clustering approach in the Introduction and Results.</p><disp-quote content-type="editor-comment"><p>A novelty of the proposed approach is that it claims to address the superposition problem but how well this works is not demonstrated or discussed. I think the work would be strengthened if this aspect received more attention.</p></disp-quote><p>The superposition problem is a salient issue when trying to estimate pairwise correlations between cells. If two nearby cells spike synchronously, their spikes will temporally and spatially overlap. A clustering-based approach will miss these synchronous spikes and, as a result, the correlation between the two cells will be underestimated (see Pillow et al., 2013). To demonstrate that our algorithm could solve this problem we simulated two correlated spike trains and added these artificial cells to real extracellular recordings. We therefore generated ground truth data where we know the true correlation value for these two points. We then showed that our algorithm was able to recover the correct value for correlation. Our algorithm is therefore able to solve the superposition problem. We have added these explanations in the text.</p><disp-quote content-type="editor-comment"><p>Reviewer #3:</p><p>[…] My only concerns therefore relate to the presentation of the material. Given that this is a presentation of a spike sorting resource, it seems mandatory that the computational approach and the technical aspects of the algorithm be explained as thoroughly and clearly as possible so that readers and users can fully understand the approach and adjust it to their own needs by tuning the appropriate parameters. In the Results part, the explanation of the algorithm is rather brief, and it would here be useful to provide a bit more of an intuitive description of the approach (see detailed points below). The Materials and methods section, on the other hand, appears to contain some inaccuracies and small omissions of detail that make it hard to follow some of the steps.</p></disp-quote><p>We have completely rewritten the Results and Materials and methods section. The results are now more complete, and the methods more accurate.</p><disp-quote content-type="editor-comment"><p>1) The Results part is a bit sparse on explaining the approach, although this would be a nice opportunity to lay out concepts without the need for technical details. For example, it might be useful to provide some brief explanations of why limiting the clustering to the search for centroids is less demanding and what the approach in density-based clustering is. Furthermore, some explanation of what is meant by &quot;clustering each group in parallel&quot; would be helpful, including the strategy for finding the right number of clusters and merging templates and units when necessary.</p></disp-quote><p>We have done our best to explain our clustering strategy here. When we search for cluster centroids, we can afford errors in the cluster borders. This is why this task can be considered as less demanding than a full sorting by clustering, where borders have to be correct. We have also detailed more what we meant by clustering in parallel: before clustering, we group spikes according the electrode where they peak. This creates as many groups as electrodes and we cluster each group independently.</p><disp-quote content-type="editor-comment"><p>2) One aspect that doesn't become clear in the main part is to what extent merging of units generally needs to be performed and how it was done for the results of Figures 2 and 3. The Materials and methods section states that several templates were used for comparison with ground-truth data. It would be useful to obtain some more information about this. Was this merging done with the GUI described in the Discussion? Was the merging done &quot;blindly&quot;, that is, before comparison with the ground-truth data, or retrospectively? Was merging the norm or the exception?</p></disp-quote><p>This part has been extensively rewritten and modified following the comments of the other reviewers. We have now designed a fully automated method for the merging step, and tested it on the ground truth data.</p><disp-quote content-type="editor-comment"><p>3) A potential issue with automated spike sorting is that it might be difficult to judge the sorting quality of the obtained units, that is, how reliable the units are and to what degree one may expect contamination from other cells or missed spikes. Does the resource provide for any quality control? Useful simple statistics might be the normalized spike amplitude, the distance from other templates, the quality of the fits in the template matching phase, and the variability in the fitting parameters, but maybe the authors could also point out other ways of assessing sorting quality from their own experience of using their software.</p></disp-quote><p>From our ground truth data one can see that the quality of the sorted units is directly related to the size of the spike waveform. We have not found any other parameter that played a significant role in determining the quality of the sorted unit. We have added a panel showing the relation between sorting quality and spike size.</p><p>[Editors' note: the author responses to the re-review follow.]</p><disp-quote content-type="editor-comment"><p>The manuscript has been improved but there are some remaining issues that must be addressed before acceptance. This is an important paper that will gain from clarity in the exposition and the correction of numerous typographical errors. Of note:</p><p>1) A table of symbols and their definitions will be of great help for the reader.</p><p>2) Confusion remains in the implementation of the original clustering process as detailed by the first reviewer. Simply, a clear delineation of the process to create a template and use the template should be completely defined pictorially as well as mathematically.</p><p>3) The reviewers identify other confusing issues, missing references, and the need to avoid &quot;double counting&quot; by using correlation of the same data set for both analysis and verification.</p><p>Please address each of the reviewer criticisms in a written reply that addresses each reviewer comment and notes all changes to the text. The revised manuscript will be assessed by the Reviewing editor.</p></disp-quote><p>This revised version aims at addressing all of the reviewers’ criticisms. The reviewers’ concerns are addressed in detail below. We thank the reviewers for their helpful comments and criticisms, which have helped to clarify this manuscript. We have answered to all their points:</p><p>- The text has been proofread to improve clarity;</p><p>- Figure 4 has been redrawn with new colors, to improve visibility (see comment from reviewer 1);</p><p>- We added a table at the end of the main manuscript to explain all the notations used in the paper;</p><p>- We added a supplementary figure to better explain pictorially how the clustering is parallelized (see first comment of reviewer 1).</p><disp-quote content-type="editor-comment"><p>Reviewer #1:</p><p>The authors have improved the clarity of the manuscript substantially. My prior concerns have been adequately addressed. In addition to the specific comments below I would ask for additions/clarifications on three subjects.</p><p>I) First, on the path of the computation: Figure 1 is clearly the axis for most readers to understand the spike sorting process. Having carefully read the revised text as well as the original, I am still not sure how the original clustering is done. For the step of template collection, the text seems to imply that there are N clustering steps for the N electrodes. If true, one expects that each neuron would be detected on 3-8 electrodes and thus there are 3-8 times more clusters than neurons at least. The content of 1 C implies that these very many clusters are reduced to a template with 57 site &quot;snipets&quot; that make up the template. However, the example of 1C is centered on a maximum amplitude transient. How those maximum amplitude &quot;centers&quot; for templates are found is not clear to me, nor is how the expected variation around that center accommodated. Perhaps it does not need to be, since the template field is large so even is the maximum amplitude site for a given spike is off center, there is still ample information to cluster. A clear delineation of this template creation and use process would be useful, especially if it can be done pictorially as well as mathematically. How are all these redundant units merged?</p></disp-quote><p>We thank the reviewer for this comment. We would like to clarify how we do this clustering step. Even if a spike is detected on several electrodes, it will only be assigned to the electrode where the voltage peak is the largest. Thanks to this method, if a spike has its largest peak on electrode 1, but is also detected on electrode 2, it will only be assigned to electrode 1. This means that, in general, the spikes of one cell will be assigned to only one electrode and will therefore correspond to a single cluster, not to 3-8 ones as predicted by the reviewer. We have explained this better in the text, and a supplementary figure to explain this procedure has been added to the manuscript.</p><disp-quote content-type="editor-comment"><p>II) While reading the Materials and methods section especially, but also reading the manuscript, I was constantly looking back through the text for the definition of variables and symbols. Would it be possible for the authors to make a variable definition table so that a reader can have access in one place to be reminded of variable definition for all variables in the paper?</p></disp-quote><p>We would like to thank the reviewer for this suggestion. A table has been added at the end of the paper.</p><disp-quote content-type="editor-comment"><p>III) The use of BEER is much better explained, but it would be useful to discuss when this assumption of elliptical boundaries is unlikely true, such as bursting cells or electrode-tissue drift.</p></disp-quote><p>The reviewer is right, and this is now better discussed in the manuscript. Indeed, the BEER is only an approximation of the expected best performance, as this non-linear classifier may not cope perfectly with temporal overlaps, drifts, or bursting behavior. Nevertheless, in our case, since we used only few minutes long recording, the drifts appear to be negligible.</p><disp-quote content-type="editor-comment"><p>Reviewer #3:</p><p>Let me begin by stating that it is very worthwhile to have a publication that describes SpyKING CIRCUS, since it is one of a handful of tools aimed at the automated analysis of multielectrode data.</p><p>Some comments follow:</p><p>1) This paper needs significant proofreading/editing to make it more readable.</p><p>As an example, the second sentence in the second section (Results) is:</p><p>“First, spikes are being detected as threshold crossings (Figure 1A) and isolated the extracellular waveforms for a number of randomly chosen spike times.”</p><p>I know what the authors intend, but it is garbled.</p></disp-quote><p>We would like to thank the reviewer for this comment on SpyKING CIRCUS. We have proofread the manuscript, in order to make it easier to understand. We hope that this is now suitable for publication.</p><disp-quote content-type="editor-comment"><p>2) The Results section contains a description of the algorithm. Is that the format eLife requires? It would be clearer to have sections on the Algorithm, experimental results, validation experiments, etc.</p></disp-quote><p>Many articles in <italic>eLife</italic> in the Tools and Resources category include in the results a brief description of the methods, which is expanded in the Materials and methods section. For example, see</p><p>- https://elifesciences.org/articles/28728</p><p>- https://elifesciences.org/articles/32671</p><p>- https://elifesciences.org/articles/24656</p><p>We have followed this organisation. This allows to grasp the main steps of the algorithm quickly for the standard user of the algorithm, while giving all the necessary details in the Materials and methods section.</p><disp-quote content-type="editor-comment"><p>3) A distinguishing feature of the method is the ability to resolve overlapping spikes in large systems in a reasonably automatic fashion and makes this an interesting contribution.</p></disp-quote><p>We would like to thank the reviewer for the comment. We have emphasized more this point in the text.</p><disp-quote content-type="editor-comment"><p>4) Other groups have used artificial template/spike insertion as a way to validate the algorithm and some reference could be given (e.g. Rossant 2016, Chung 2017).</p></disp-quote><p>We thank the reviewer for the comment. In fact, in the original manuscript, the reference to (Rossant et al., 2016) was already there in the Materials and methods section (Simulated ground truth tests). Indeed, we are fully aware that many groups have used this strategy of designing hybrid&quot; datasets as a way to validate spike sorting with artificial data. The reference to (Chung et al., 2017) has been added. We have also mentioned other papers where this was done previously (Segev et al., 2004, Marre et al., 2012)</p><disp-quote content-type="editor-comment"><p>5) The authors use cross-correlograms in order to help automate the merging process. It should be noted that, as a side effect, one can no longer use cross-correlograms as a validation metric.</p></disp-quote><p>The reviewer is right, and this is something that has now been explicitly stated in the manuscript.</p><disp-quote content-type="editor-comment"><p>6) Equation 1 is very confusing. The authors should explain the double sum notation (why index over events and units)? I'm sure they have something in mind but I don't know what it is.</p></disp-quote><p>We apologize for the lack of clarity. The manuscript has been modified in order to better explain this key equation. The core idea of this equation is that for every spike detected (indexed by <italic>i</italic>), we assume that several templates (indexed by <italic>j</italic>) could re and participate to this spiking event. This is why there is a double sum here. That said, since only a few cells will fire at the same spike time, most of the coefficients should be 0. This notation is nevertheless convenient to explain how spikes can be superimposed. We have clarified this in the text.</p></body></sub-article></article>