<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.1 20151215//EN"  "JATS-archivearticle1.dtd"><article article-type="research-article" dtd-version="1.1" xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink"><front><journal-meta><journal-id journal-id-type="nlm-ta">elife</journal-id><journal-id journal-id-type="publisher-id">eLife</journal-id><journal-title-group><journal-title>eLife</journal-title></journal-title-group><issn pub-type="epub" publication-format="electronic">2050-084X</issn><publisher><publisher-name>eLife Sciences Publications, Ltd</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="publisher-id">40292</article-id><article-id pub-id-type="doi">10.7554/eLife.40292</article-id><article-categories><subj-group subj-group-type="display-channel"><subject>Research Communication</subject></subj-group><subj-group subj-group-type="heading"><subject>Developmental Biology</subject></subj-group></article-categories><title-group><article-title>Is it possible to reconstruct an accurate cell lineage using CRISPR recorders?</article-title></title-group><contrib-group><contrib contrib-type="author" equal-contrib="yes" id="author-117912"><name><surname>Salvador-Martínez</surname><given-names>Irepan</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-3188-9784</contrib-id><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="fn" rid="equal-contrib1">†</xref><xref ref-type="other" rid="fund1"/><xref ref-type="fn" rid="con1"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" equal-contrib="yes" id="author-64726"><name><surname>Grillo</surname><given-names>Marco</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0003-2155-0645</contrib-id><xref ref-type="aff" rid="aff2">2</xref><xref ref-type="aff" rid="aff3">3</xref><xref ref-type="fn" rid="equal-contrib1">†</xref><xref ref-type="other" rid="fund1"/><xref ref-type="fn" rid="con2"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" corresp="yes" id="author-8058"><name><surname>Averof</surname><given-names>Michalis</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-6803-7251</contrib-id><email>michalis.averof@ens-lyon.fr</email><xref ref-type="aff" rid="aff2">2</xref><xref ref-type="aff" rid="aff3">3</xref><xref ref-type="other" rid="fund1"/><xref ref-type="fn" rid="con3"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" corresp="yes" id="author-30863"><name><surname>Telford</surname><given-names>Maximilian J</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-3749-5620</contrib-id><email>m.telford@ucl.ac.uk</email><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="other" rid="fund1"/><xref ref-type="fn" rid="con4"/><xref ref-type="fn" rid="conf1"/></contrib><aff id="aff1"><label>1</label><institution content-type="dept">Centre for Life’s Origins and Evolution, Department of Genetics Evolution and Environment</institution><institution>University College London</institution><addr-line><named-content content-type="city">London</named-content></addr-line><country>United Kingdom</country></aff><aff id="aff2"><label>2</label><institution content-type="dept">Institut de Génomique Fonctionnelle de Lyon (IGFL)</institution><institution>École Normale Supérieure de Lyon</institution><addr-line><named-content content-type="city">Lyon</named-content></addr-line><country>France</country></aff><aff id="aff3"><label>3</label><institution>Centre National de la Recherche Scientifique (CNRS)</institution><addr-line><named-content content-type="city">Paris</named-content></addr-line><country>France</country></aff></contrib-group><contrib-group content-type="section"><contrib contrib-type="senior_editor"><name><surname>Regev</surname><given-names>Aviv</given-names></name><role>Senior Editor</role><aff><institution>Broad Institute of MIT and Harvard</institution><country>United States</country></aff></contrib><contrib contrib-type="editor"><name><surname>Hsu</surname><given-names>Patrick</given-names></name><role>Reviewing Editor</role><aff><institution>Salk Institute for Biological Studies</institution><country>United States</country></aff></contrib></contrib-group><author-notes><fn fn-type="con" id="equal-contrib1"><label>†</label><p>These authors contributed equally to this work</p></fn></author-notes><pub-date date-type="publication" publication-format="electronic"><day>28</day><month>01</month><year>2019</year></pub-date><pub-date pub-type="collection"><year>2019</year></pub-date><volume>8</volume><elocation-id>e40292</elocation-id><history><date date-type="received" iso-8601-date="2018-08-13"><day>13</day><month>08</month><year>2018</year></date><date date-type="accepted" iso-8601-date="2019-01-11"><day>11</day><month>01</month><year>2019</year></date></history><permissions><copyright-statement>© 2019, Salvador-Martínez et al</copyright-statement><copyright-year>2019</copyright-year><copyright-holder>Salvador-Martínez et al</copyright-holder><ali:free_to_read/><license xlink:href="http://creativecommons.org/licenses/by/4.0/"><ali:license_ref>http://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>This article is distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use and redistribution provided that the original author and source are credited.</license-p></license></permissions><self-uri content-type="pdf" xlink:href="elife-40292-v1.pdf"/><abstract><object-id pub-id-type="doi">10.7554/eLife.40292.001</object-id><p>Cell lineages provide the framework for understanding how cell fates are decided during development. Describing cell lineages in most organisms is challenging; even a fruit fly larva has ~50,000 cells and a small mammal has &gt;1 billion cells. Recently, the idea of applying CRISPR to induce mutations during development, to be used as heritable markers for lineage reconstruction, has been proposed by several groups. While an attractive idea, its practical value depends on the accuracy of the cell lineages that can be generated. Here, we use computer simulations to estimate the performance of these approaches under different conditions. We incorporate empirical data on CRISPR-induced mutation frequencies in <italic>Drosophila</italic>. We show significant impacts from multiple biological and technical parameters - variable cell division rates, skewed mutational outcomes, target dropouts and different sequencing strategies. Our approach reveals the limitations of published CRISPR recorders, and indicates how future implementations can be optimised.</p><p><bold>Editorial note:</bold> This article has been through an editorial process in which the authors decide how to respond to the issues raised during peer review. The Reviewing Editor's assessment is that all the issues have been addressed (<xref ref-type="decision-letter" rid="SA1">see decision letter</xref>).</p></abstract><kwd-group kwd-group-type="author-keywords"><kwd>cell lineage</kwd><kwd>CRISPR-based lineage recorders</kwd><kwd>computer simulation</kwd></kwd-group><kwd-group kwd-group-type="research-organism"><title>Research organism</title><kwd><italic>D. melanogaster</italic></kwd><kwd>Zebrafish</kwd></kwd-group><funding-group><award-group id="fund1"><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100000854</institution-id><institution>Human Frontier Science Program</institution></institution-wrap></funding-source><award-id>HFSP RGP0002/2016</award-id><principal-award-recipient><name><surname>Salvador-Martínez</surname><given-names>Irepan</given-names></name><name><surname>Grillo</surname><given-names>Marco</given-names></name><name><surname>Averof</surname><given-names>Michalis</given-names></name></principal-award-recipient></award-group><funding-statement>The funders had no role in study design, data collection and interpretation, or the decision to submit the work for publication.</funding-statement></funding-group><custom-meta-group><custom-meta specific-use="meta-only"><meta-name>Author impact statement</meta-name><meta-value>Computer simulations reveal the potential and limitations of recently proposed CRISPR-based cell lineage recorders, and suggest how the recorders' design can be optimised to yield more accurate cell lineage trees.</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="s1" sec-type="intro"><title>Introduction</title><p>Starting from a single cell - the fertilised egg - multicellular organisms undergo repeated rounds of cell division to produce the adult form. The divisions that generate these adult cells constitute a genealogical tree with the fertilised egg at its root and each adult cell as a terminal branch. Knowing the cell lineage that produces a fully developed organism from a single cell provides the framework for understanding when, where and how cell fate decisions are made.</p><p>Obtaining high resolution (single-cell level) lineages is a challenging task that has been solved only in animals with relatively few cells, such as the nematode <italic>Caenorhabditis elegans</italic>: its complete lineage (~1000 cells) was deduced by painstaking observation of each cell division under the microscope. This approach is impossible in larger animals, in which most cells are inaccessible to microscopy and their number becomes quickly unmanageable. The 16 rounds of cell division required to produce a hatched <italic>Drosophila</italic> larva, for example, result in about 50,000 cells (<xref ref-type="bibr" rid="bib22">Lehner et al., 2001</xref>) and further rounds of division produce an adult with approximately <inline-formula><mml:math id="inf1"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msup><mml:mn>10</mml:mn><mml:mrow><mml:mn>6</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mstyle></mml:math></inline-formula> cells. The bodies of mice and humans consist of 10<sup>10</sup> to 10<sup>14</sup> cells respectively (<xref ref-type="bibr" rid="bib33">Sender et al., 2016</xref>).</p><p>Recently it was proposed that naturally occurring somatic mutations, which accumulate in cells during the lifetime of an organism, could be used as lineage markers to reconstruct its entire cell lineage (<xref ref-type="bibr" rid="bib11">Frumkin et al., 2005</xref>; <xref ref-type="bibr" rid="bib30">Salipante and Horwitz, 2006</xref>). This is directly analogous to the use of heritable mutations, accumulating through time, to reconstruct a species phylogeny. While this approach is theoretically possible (<xref ref-type="bibr" rid="bib11">Frumkin et al., 2005</xref>), it is nevertheless limited by the enormous challenge of detecting these rare mutations within the genomes of individual cells.</p><p>As a solution to the problem of reading the mutations, several recent papers have explored the idea of using CRISPR-induced somatic mutations, targeted to artificial sequences inserted as transgenes into the genome (termed ‘CRISPR recorders’) (<xref ref-type="bibr" rid="bib23">McKenna et al., 2016</xref>; <xref ref-type="bibr" rid="bib10">Frieda et al., 2017</xref>; <xref ref-type="bibr" rid="bib15">Junker et al., 2016</xref>; <xref ref-type="bibr" rid="bib16">Kalhor et al., 2018</xref>; <xref ref-type="bibr" rid="bib24">Perli et al., 2016</xref>; <xref ref-type="bibr" rid="bib2">Alemany et al., 2018</xref>; <xref ref-type="bibr" rid="bib32">Schmidt et al., 2017</xref>; <xref ref-type="bibr" rid="bib27">Raj et al., 2018</xref>; <xref ref-type="bibr" rid="bib4">Attardi et al., 2018</xref>; <xref ref-type="bibr" rid="bib35">Spanjaard et al., 2018</xref>; <xref ref-type="bibr" rid="bib15">Junker et al., 2016</xref>). The recorders consist of arrays of CRISPR target sites, targeted by their cognate sgRNAs and Cas9 during development. Starting in early embryogenesis, CRISPR-induced mutations occur stochastically at these target sites, in each cell of the body, and these mutations are stably inherited by the progeny of these cells. In most cases, the mutation destroys the match between target and sgRNA meaning a mutated target is immune to further change. At the end of development only the recorder sequence has to be read rather than the whole genome; the accumulated mutations can then be used as phylogenetic characters allowing the reconstruction of a tree of relationships between all cells (<xref ref-type="fig" rid="fig1">Figure 1</xref>).</p><fig id="fig1" position="float"><object-id pub-id-type="doi">10.7554/eLife.40292.002</object-id><label>Figure 1.</label><caption><title>Reconstructing cell lineages using CRISPR-induced somatic mutations.</title><p>Left: Development begins with a zygote carrying in its genome a lineage recorder composed of a series of CRISPR targets (blue boxes). During subsequent cell divisions, any target of the recorder can be cleaved by Cas9 in any cell, leaving a specific mutational signature on the target which will be inherited by all the descendants of the cell. Numbers represent the the cleaved target in the recorder and its mutational signature is represented by a colour. Middle: At the end of development, the recorder of every cell is sequenced, recovering the pattern of accumulated mutations in each of the targets (coloured boxes). Right: The pattern of mutations is used to reconstruct the cell lineage, in a similar way to how a phylogenetic tree is inferred from the sequences of homologous genes.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-40292-fig1-v1.tif"/></fig><p>The basic principle of recorder-based lineage tree reconstruction is easy to grasp. What is far less clear is whether the lineages produced by these methods are accurate enough for us to draw meaningful conclusions from them. Of course the required accuracy will depend on the intended use of the lineage, but to date few studies have considered how accurate the lineages produced might be (<xref ref-type="bibr" rid="bib10">Frieda et al., 2017</xref>; <xref ref-type="bibr" rid="bib32">Schmidt et al., 2017</xref>; <xref ref-type="bibr" rid="bib35">Spanjaard et al., 2018</xref>).</p><p>The ideal way of assessing the accuracy of these techniques would be to compare the real cell lineage of an organism against the lineage inferred by the recorder (<xref ref-type="bibr" rid="bib32">Schmidt et al., 2017</xref>). This is difficult to implement in practice, however, because in most cases the real cell lineages are unknown.</p><p>We have taken the alternative approach of computationally simulating the processes of cell division and accumulation of mutations in a recorder and then comparing the lineage inferred from the recorder to the known <italic>in silico</italic> reference tree. We have used this approach to estimate the accuracy of lineage reconstruction in different situations (type and complexity of recorder, mutation rates, cell lineage depth, etc.), taking into account empirical measures of mutation rates and frequencies of different mutational outcomes derived from <italic>in vivo</italic> experimental data from <italic>Drosophila melanogaster</italic>. While some previous studies used simulations to evaluate the reconstruction of small cell lineages, no study has attempted this on cell lineages of tens of thousands of cells (<xref ref-type="bibr" rid="bib10">Frieda et al., 2017</xref>; <xref ref-type="bibr" rid="bib32">Schmidt et al., 2017</xref>).</p><p>Different designs of CRISPR recorders have been implemented, including recorders that register point mutations on arrays of barcoded targets (GESTALT; <xref ref-type="bibr" rid="bib23">McKenna et al., 2016</xref>; <xref ref-type="bibr" rid="bib27">Raj et al., 2018</xref>), ones that rely on ‘collapsing’ target arrays through deletions (MEMOIR; <xref ref-type="bibr" rid="bib10">Frieda et al., 2017</xref>), recorders that target identical target sites located on separate transgenes (ScarTrace and LINNAEUS; <xref ref-type="bibr" rid="bib15">Junker et al., 2016</xref>; <xref ref-type="bibr" rid="bib32">Schmidt et al., 2017</xref>; <xref ref-type="bibr" rid="bib4">Attardi et al., 2018</xref>; <xref ref-type="bibr" rid="bib2">Alemany et al., 2018</xref>; <xref ref-type="bibr" rid="bib35">Spanjaard et al., 2018</xref>) and ones that target the CRISPR sgRNA itself (<xref ref-type="bibr" rid="bib16">Kalhor et al., 2018</xref>; <xref ref-type="bibr" rid="bib24">Perli et al., 2016</xref>). In this work we have simulated the behaviour of the first two types of recorders, but the insights that we have gained should apply to all types of recorders. Ultimately, these simulations will help us to establish a set of criteria for the optimal design of CRISPR-based lineage recorders, as well as to understand the limitations of these techniques when addressing real biological questions.</p><p>To assess the power of CRISPR-based lineage recorders in cell lineage reconstruction, we focus on the conditions required to reconstruct a cell lineage of <inline-formula><mml:math id="inf2"><mml:mo>∼</mml:mo></mml:math></inline-formula>65,000 cells. This roughly corresponds to the size of the cell lineage of a <italic>Drosophila</italic> first instar larva, of a pharyngula stage zebrafish embryo, or a stage E8.0 mouse embryo (<xref ref-type="bibr" rid="bib22">Lehner et al., 2001</xref>; <xref ref-type="bibr" rid="bib17">Kane, 1999</xref>; <xref ref-type="bibr" rid="bib19">Kojima et al., 2014</xref>, respectively).</p></sec><sec id="s2" sec-type="results"><title>Results</title><sec id="s2-1"><title>General description of the simulations</title><p>In our simulations, a cell is implemented as a vector of <inline-formula><mml:math id="inf3"><mml:mi>m</mml:mi></mml:math></inline-formula> targets. We begin each simulation with one cell, representing the fertilised egg, that has all its targets in an unmutated state. The initial cell then undergoes a series of cell divisions (<inline-formula><mml:math id="inf4"><mml:mi>d</mml:mi></mml:math></inline-formula>), growing into a population of <inline-formula><mml:math id="inf5"><mml:mi>N</mml:mi></mml:math></inline-formula> cells, where <inline-formula><mml:math id="inf6"><mml:mrow><mml:mi>N</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mn>2</mml:mn><mml:mi>d</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula>. Following each cell division, each unmutated target can mutate (with a given probability <inline-formula><mml:math id="inf7"><mml:msub><mml:mi>μ</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math></inline-formula>) to one of several possible mutated states. Once a target is mutated, it can no longer change, either to revert to the unmutated state or to transit to a new state (<xref ref-type="fig" rid="fig2">Figure 2A</xref>). We expect the frequency of reversions to be negligible as even single nucleotide changes result in a large decrease in mutation rate.</p><fig-group><fig id="fig2" position="float"><object-id pub-id-type="doi">10.7554/eLife.40292.003</object-id><label>Figure 2.</label><caption><title>Computational simulation of CRISPR recorders (<bold>A</bold>).</title><p>In our simulations, an initial cell with multiple CRISPR targets (<inline-formula><mml:math id="inf8"><mml:mi>m</mml:mi></mml:math></inline-formula>) yields <inline-formula><mml:math id="inf9"><mml:mi>N</mml:mi></mml:math></inline-formula> cells after a given number of cell divisions (<inline-formula><mml:math id="inf10"><mml:mi>d</mml:mi></mml:math></inline-formula>). The recorder accumulates independent CRISPR-induced mutations with a probability, in each target, of <inline-formula><mml:math id="inf11"><mml:msub><mml:mi>μ</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math></inline-formula> per cell division; the mutations are inherited in subsequent cell divisions. The pattern of mutations accumulated in each cell is used to infer the lineage tree. (<bold>B</bold>) The accuracy of lineage reconstruction was determined by comparing the inferred tree with the reference tree using using a measure related to the Robinson Foulds method. The unmutated state of the recorder was used to root the tree. (<bold>C</bold>) Accuracy of lineage reconstruction with a recorder of 100 CRISPR targets after 16 cell divisions (yielding 65,536 cells) over a range of mutation rates. Each line represents the mean accuracy (10 simulations) for simulations resulting in different numbers of equiprobable mutated states. The optimal mutation rate for each number of mutated states is indicated with an open circle. Vertical lines represent 95% confidence intervals. (<bold>D</bold>) Accuracy of lineage reconstruction for different mutation rates and numbers of CRISPR targets. Mutations were set to result in 16 equiprobable mutated states. Dashed lines represent different accuracy thresholds (levelplot) after a LOESS regression. For each parameter combination, we plot the mean accuracy of 10 simulations after 16 cell divisions.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-40292-fig2-v1.tif"/></fig><fig id="fig2s1" position="float" specific-use="child-fig"><object-id pub-id-type="doi">10.7554/eLife.40292.004</object-id><label>Figure 2—figure supplement 1.</label><caption><title>Comparing the performance of Neighbor Joining and Maximum Parsimony in lineage reconstruction.</title><p>(<bold>A</bold>) CPU time (shown in seconds at the left and in hours at the right of the Y-axis) required for tree reconstruction with a given number of cells (X-axis). Boxplots show the distribution of times taken to reconstruct 10 trees. Brown circles and cyan triangles indicate the average CPU time for Parsimony and NJ, respectively. Each reconstruction was performed on a single CPU thread. (<bold>B</bold>) Accuracy of the reconstructed trees from A. The brown and cyan lines represent the mean accuracy of 10 trees for a given number of cells (X-axis) with their distributions shown as a boxplot.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-40292-fig2-figsupp1-v1.tif"/></fig></fig-group><p>A unique label was given to each cell during the simulation. The sequence of simulated cell divisions were recorded in the form of a tree, whose topology describes the lineage relationships between all cells (the ‘reference tree’). At the end of the simulation, we randomly sampled a number of cells and used the pattern of mutations accumulated in those cells to infer their cell lineage (the ‘inferred tree’) using the Neighbor-Joining method (<xref ref-type="bibr" rid="bib29">Saitou and Nei, 1987</xref>) (for a comparison with parsimony see <xref ref-type="fig" rid="fig2s1">Figure 2—figure supplement 1</xref>).</p><p>The accuracy of lineage reconstruction of each simulation was determined by comparing the inferred tree with the reference tree using a measure derived from the Robinson-Foulds algorithm (<xref ref-type="bibr" rid="bib28">Robinson and Foulds, 1981</xref>), which calculates the percentage of splits in the reference tree that are precisely recovered in the inferred tree (<xref ref-type="fig" rid="fig2">Figure 2B</xref>). If the inferred tree is identical to the reference tree, the accuracy is 100%. This provides a strict measure of the global accuracy of the inferred lineage tree. The accuracy of each lineage reconstruction was estimated as the mean accuracy of 10 subsamples of 1000 cells.</p></sec><sec id="s2-2"><title>Impact of mutation rate on the accuracy of cell lineage reconstruction</title><p>We simulated a lineage with a depth of 16 cell divisions (<inline-formula><mml:math id="inf12"><mml:mrow><mml:mi>d</mml:mi><mml:mo>=</mml:mo><mml:mn>16</mml:mn></mml:mrow></mml:math></inline-formula>), yielding 65,536 cells (<inline-formula><mml:math id="inf13"><mml:msup><mml:mn>2</mml:mn><mml:mn>16</mml:mn></mml:msup></mml:math></inline-formula>). To determine the effect of varying the mutation rate on the accuracy of lineage reconstruction, we performed simulations with a recorder carrying 100 targets (<inline-formula><mml:math id="inf14"><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mn>100</mml:mn></mml:mrow></mml:math></inline-formula>) and a rate of mutation <inline-formula><mml:math id="inf15"><mml:msub><mml:mi>μ</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math></inline-formula> varying from 0.01 to 0.3 mutations per cell division per target. In parallel, we tested how the diversity of mutational outcomes (number of distinct mutated states) at each target could influence the accuracy of lineage reconstruction, by varying the number of possible mutational outcomes at each target between 2 and 32. In each case the different mutational outcomes were considered to be equiprobable.</p><p>As expected, these simulations show that the mutation rate and the diversity of mutations have a strong effect on the accuracy of cell lineage reconstruction (<xref ref-type="fig" rid="fig2">Figure 2C</xref>). A low diversity of possible mutational outcomes gives poorer results than a higher diversity. Mutation rates show a broad optimum between between 0.05 and 0.2 mutations per cell division per target; under these rates, 56–97% of target sites are mutated after 16 cell divisions. Lower mutation rates lead to more targets having no mutations, thus contributing no information for reconstructing the cell lineage. Higher mutation rates lead to most targets being mutated during the early cell divisions, leaving few targets available for recording later events.</p><p>In practice, CRISPR activity generates a range of mutations (mostly small deletions or insertions) at varying frequencies. We have measured the actual rates and diversity of CRISPR-induced mutations in vivo (see below) and used these empirical data in our subsequent simulations.</p></sec><sec id="s2-3"><title>Tuning the mutation rate of a CRISPR recorder in vivo</title><p>Our simulations show that specific mutation rates must be achieved experimentally in order to optimise cell lineage reconstruction. There are several ways to vary CRISPR mutation rates in vivo, including the use of different sgRNA:target pairs, varying the expression levels of sgRNA and Cas9, and using variants of sgRNA or Cas9 that influence their stability or activity. We chose to adjust the mutation rate by altering the target sequence in order to introduce mismatches in the sgRNA:target pairing (similar to the strategy used on cultured cells by <xref ref-type="bibr" rid="bib23">McKenna et al., 2016</xref>); this is known to reduce the targeting efficiency (<xref ref-type="bibr" rid="bib14">Hsu et al., 2013</xref>; <xref ref-type="bibr" rid="bib12">Fu et al., 2014</xref>). We have measured the mutation rate of a series of different variants of a CRISPR target to find those with the optimum rates for cell lineage reconstruction of the <italic>Drosophila</italic> embryo.</p><p>We took advantage of a previous study by <xref ref-type="bibr" rid="bib14">Hsu et al. (2013)</xref> who analysed the effects of sgRNA:target pairing mismatches on the efficiency of targeting a section of the human <italic>EMX1</italic> gene. Based on this study, we selected 32 variants of the Emx1.6 target (<xref ref-type="bibr" rid="bib14">Hsu et al., 2013</xref>), including the wild-type sequence and 31 variants with single- or double-nucleotide changes at different positions within the target sequence (<xref ref-type="supplementary-material" rid="supp1">Supplementary file 1—Table 1</xref>). To compare the mutation rates of the 32 targets, we designed and synthesised a single construct that carries all 32 variants in tandem. In the same construct, we incorporated a transgene constitutively expressing the Emx1.6 sgRNA under the <italic>Drosophila</italic> U6.2 promoter (<xref ref-type="bibr" rid="bib25">Port et al., 2014</xref>) (<xref ref-type="fig" rid="fig3">Figure 3A</xref>). We generated transgenic <italic>Drosophila</italic> lines carrying a single copy of this construct at the 37B7 locus, using <inline-formula><mml:math id="inf16"><mml:mi>ϕ</mml:mi></mml:math></inline-formula>C31-mediated integration (<xref ref-type="bibr" rid="bib5">Bateman et al., 2006</xref>).</p><fig id="fig3" position="float"><object-id pub-id-type="doi">10.7554/eLife.40292.005</object-id><label>Figure 3.</label><caption><title>Tuning the mutation rate of a CRISPR recorder in vivo.</title><p>(<bold>A</bold>) CRISPR recorder designed to test the mutation rates of 32 variants of the Emx1.6 target in <italic>Drosophila</italic>. The recorder consists of two transgenic constructs brought together by genetic crosses. The first construct carries an array of the 32 target variants and a transgene expressing the Emx1.6 sgRNA under the constitutive <italic>Drosophila</italic> U6.2 promoter (<xref ref-type="bibr" rid="bib25">Port et al., 2014</xref>). The second construct expresses the <italic>Streptococcus pyogenes</italic> Cas9 gene under the constitutive <italic>Drosophila Act5C</italic> promoter (<xref ref-type="bibr" rid="bib25">Port et al., 2014</xref>). (<bold>B</bold>) Double heterozygotes carrying both constructs were collected at embryonic, late larval (L3) and adult stages and analysed for mutations in the target array by PCR amplification and sequencing of the recorder. (<bold>C</bold>) Proportion of targets mutated at different stages, for the eight most efficient target variants. ‘Untargeted’ represents background mutations or sequencing errors observed in the absence of the Cas9 transgene. (<bold>D</bold>) Estimates of cell lineage accuracy from computer simulations (as in <xref ref-type="fig" rid="fig2">Figure 2C</xref>) using the mutational outcomes observed in vivo on the FAST target.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-40292-fig3-v1.tif"/></fig><p>Males carrying the Emx1.6 sgRNA and the target array were crossed with virgin females carrying a constitutively expressed Cas9 transgene (Actin::Cas9, <xref ref-type="bibr" rid="bib25">Port et al., 2014</xref>) to generate progeny carrying a single copy of the CRISPR target array, the sgRNA and the Cas9 transgene. We collected these progeny at different developmental stages (end of embryogenesis, late L3 larvae, newly eclosed adults) to assess the number of mutations that had accumulated in each of the 32 target variants at these three stages (<xref ref-type="fig" rid="fig3">Figure 3B</xref>).</p><p>We pooled individuals collected at each of the three chosen developmental stages, performed PCR on genomic DNA and used high throughput sequencing to characterise the mutated targets. In individual animals, mutational frequencies are influenced both by the probability of each mutational outcome of CRISPR and by the clonal expansion of cells that carry each mutation. Since we have analysed populations of individuals and expect no systematic clonal biases associated with specific mutations in CRISPR recorders, we expect that our estimates of mutational frequencies largely reflect the frequencies of CRISPR-induced mutations on our target.</p><p>Our results confirm that, by employing different target variants, we can achieve widely different rates of mutation. As expected, the target that has perfect complementarity with the Emx1.6 sgRNA (target 16, named the ‘FAST’ target) showed the highest mutation rate; having corrected for sequencing errors (<inline-formula><mml:math id="inf17"><mml:mo>∼</mml:mo></mml:math></inline-formula>1% of control targets have differences due to PCR or sequencing errors, <xref ref-type="supplementary-material" rid="supp1">Supplementary file 1—Table 1</xref>) we observed that 87% of the targets carried a mutation at the end of embryogenesis (<xref ref-type="fig" rid="fig3">Figure 3C</xref>). This corresponds to a mutation rate of <inline-formula><mml:math id="inf18"><mml:msub><mml:mi>μ</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math></inline-formula> = 0.1195 per cell division, assuming a constant mutation rate per cell division (see later for consideration of uneven rates per cell division). The other targets showed lower mutation rates: in the six variants with the highest rates, <inline-formula><mml:math id="inf19"><mml:msub><mml:mi>μ</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math></inline-formula> ranged from 4 × 10<sup>−4</sup> (target 15) to 6 × 10−<sup>2</sup> (target 6) mutations per cell division (<xref ref-type="supplementary-material" rid="supp1">Supplementary file 1—Table 2</xref>).</p><p>The mutation rate of the FAST target (<inline-formula><mml:math id="inf20"><mml:msub><mml:mi>μ</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math></inline-formula> = 0.1195) falls within the optimal range we had estimated for reconstructing the lineage of 65,536 cell embryos, assuming a uniform rate of cell division (see <xref ref-type="fig" rid="fig2">Figure 2C</xref>). Targets with slower mutation rates would be suited for lineaging past the embryonic stages. Conversely, faster mutation rates would be optimal for lineaging embryos at earlier stages, following fewer cell divisions. Instances of rapid or unequal rates of cell division would also require faster mutation rates (see below).</p></sec><sec id="s2-4"><title>Simulating cell lineage reconstruction based on experimentally observed mutational outcomes</title><p>Thus far, our simulations assumed that the targets can mutate to a certain number of character states with equal probability. This assumption does not reflect the complexity of CRISPR mutagenesis observed <italic>in vivo</italic>. Our sequencing data for the 32 variants of the Emx1.6 target in <italic>Drosophila</italic> provide empirical measurements not only of the rate of mutation but also of the diversity of different mutational outcomes and their relative frequencies in a CRISPR recorder <italic>in vivo</italic>. Using these data we refined our simulations using the real set of mutational outcomes and their observed relative frequencies.</p><p>We focused on the complexity of mutational outcomes affecting the FAST target. As reported in previous studies (<xref ref-type="bibr" rid="bib38">van Overbeek et al., 2016</xref>; <xref ref-type="bibr" rid="bib3">Allen et al., 2018</xref>; <xref ref-type="bibr" rid="bib6">Chen et al., 2018</xref>), we found that most of the mutations were located close to the Cas9 editing site. This suggests that most of the mutational information can be extracted by reading the nucleotides surrounding the editing site. Focusing on the 9 bp adjacent to the PAM sequence (<xref ref-type="fig" rid="fig4">Figure 4B</xref>) we observed &gt;200 mutated states. The frequencies of mutations follow an exponential curve, with a few variants occurring at high frequency (<xref ref-type="fig" rid="fig4">Figure 4C</xref>), in contrast to a naive assumption of equiprobable mutational outcomes.</p><fig-group><fig id="fig4" position="float"><object-id pub-id-type="doi">10.7554/eLife.40292.006</object-id><label>Figure 4.</label><caption><title>Mutational outcomes of CRISPR in vivo.</title><p>(<bold>A</bold>) Examples of two mutational outcomes after CRISPR cleavage. The 9-nucleotide sequence located immediately upstream of the PAM (coloured box) captures most of the variation resulting from CRISPR-induced mutations (<xref ref-type="fig" rid="fig4s1">Figure 4—figure supplement 1</xref>). The target sequence is shown in blue, PAM sequence in pink, flanking sequence in grey. (<bold>B</bold>) Relative frequencies of the five most common mutational outcomes in the FAST target. (<bold>C</bold>) Cumulative probability of the mutational outcomes. 59 mutations account for 95% of the total number of mutations.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-40292-fig4-v1.tif"/></fig><fig id="fig4s1" position="float" specific-use="child-fig"><object-id pub-id-type="doi">10.7554/eLife.40292.007</object-id><label>Figure 4—figure supplement 1.</label><caption><title>Accuracy of reconstruction varying the number of character states and nucleotides (Nmers) used for reconstruction.</title><p>Violin plots comparing the accuracy of lineage reconstruction when the mutational outcomes are reduced to the 40, 50 and 60 most common mutated character states observed when reading nine nucleotides (9mers), and 60 character states when reading 18 nucleotides (18mers). In each case, the the lowest frequency outcomes have been merged into a single character state.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-40292-fig4-figsupp1-v1.tif"/></fig></fig-group><p>Using the observed distribution of these 9mers and the estimated overall <inline-formula><mml:math id="inf21"><mml:msub><mml:mi>μ</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math></inline-formula>, we carried out 1000 simulations of the mutational process in a hypothetical construct carrying 32 identical FAST targets. We used 32 targets because we have shown that synthesising and generating transgenic flies with such a construct is feasible. For convenience, we considered 61 out of the ~200 observed states: 59 states representing the 59 most common mutations (which account for 95% of the total observed mutations; see <xref ref-type="fig" rid="fig4">Figure 4C</xref>), a 60th state with a frequency of 5% that accounts for all other outcomes combined, and the 61st state representing the unmutated target.</p><p>Using the experimentally measured distribution of mutational outcomes, the accuracy of cell lineage reconstruction is 72% (see <xref ref-type="fig" rid="fig5">Figure 5B</xref>). Rarely occurring mutations are less likely to appear independently in the same target in more than one branch of the lineage tree (an instance of homoplasy), suggesting that rare mutations are better lineage markers than more frequent mutations. To take advantage of this we introduced a weighting scheme whereby mutations are weighted in inverse proportion to their frequency of occurrence (see Materials and methods). Following this approach, the accuracy of lineage reconstruction using the same 61 states improved from 72% to 82% (<xref ref-type="fig" rid="fig5">Figure 5B</xref>).</p><fig-group><fig id="fig5" position="float"><object-id pub-id-type="doi">10.7554/eLife.40292.008</object-id><label>Figure 5.</label><caption><title>Effects of cell division rate on lineage reconstruction.</title><p>(<bold>A</bold>) Scheme of the comparison between uniform and actual cell division rates in <italic>Drosophila</italic> embryos. (<bold>B</bold>) Accuracy of lineage reconstruction under a uniform cell division rate (left) compared to rates that approximate those actually observed during <italic>Drosophila</italic> development (right) (<xref ref-type="bibr" rid="bib40">Zalokar and Erk, 1976</xref>; <xref ref-type="bibr" rid="bib9">Foe, 1989</xref>), using mutation rates calculated from real experiments for the FAST target (<inline-formula><mml:math id="inf22"><mml:msub><mml:mi>μ</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:math></inline-formula> = 0.0014), or optimised for accuracy of reconstruction (<inline-formula><mml:math id="inf23"><mml:msub><mml:mi>μ</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:math></inline-formula> = 0.0154). Violin plots represent the distribution of reconstruction accuracies of 1000 simulations after 16 cell divisions. The accuracy of reconstruction using 32 FAST targets, with or without weighting of mutations, is represented in orange and green respectively. In yellow is the accuracy of 32 targets with an optimal <inline-formula><mml:math id="inf24"><mml:msub><mml:mi>μ</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:math></inline-formula> (with no weighting).</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-40292-fig5-v1.tif"/></fig><fig id="fig5s1" position="float" specific-use="child-fig"><object-id pub-id-type="doi">10.7554/eLife.40292.009</object-id><label>Figure 5—figure supplement 1.</label><caption><title>Finding the optimal mutation rate for the real rates of cell division in <italic>Drosophila</italic> embryos.</title><p>Accuracy of lineage reconstruction is given for different mutation rates (<inline-formula><mml:math id="inf25"><mml:msub><mml:mi>μ</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:math></inline-formula>). Simulations were performed to approximate <italic>Drosophila</italic>'s known cell division rate over 16 cell divisions, under a Poisson model. Boxplots represent the distribution of 1000 simulations.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-40292-fig5-figsupp1-v1.tif"/></fig></fig-group></sec><sec id="s2-5"><title>Impact of uneven rates of cell division on the accuracy of cell lineage reconstruction</title><p>So far we have assumed that the probability of mutation per available target (<inline-formula><mml:math id="inf26"><mml:msub><mml:mi>μ</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math></inline-formula>) is the same in every cell division. This would be a reasonable assumption if all cells have a similar rate of cell division and if that rate remains constant during the course of development. In many species, however, the rate of cell division in embryogenesis varies among cells and through time. Early <italic>Drosophila</italic> embryos, for example, initially go through a series of 13 rapid and near-synchronous nuclear divisions to generate a uniform syncytial blastoderm (<xref ref-type="bibr" rid="bib40">Zalokar and Erk, 1976</xref>); during this phase the duration of each mitotic cycle is very short (~10 min). After cellularisation at cell cycle 14, the rate of cell division in the embryo slows considerably and becomes asynchronous (<xref ref-type="bibr" rid="bib9">Foe, 1989</xref>; <xref ref-type="bibr" rid="bib13">Hartenstein, 1993</xref>).</p><p>To estimate the impact of uneven rates of cell division on cell lineage reconstruction we modelled the mutation events as a Poisson process dependent on time rather than on cell divisions. A Poisson process assumes that a given event (in this case a CRISPR-induced mutation) occurs stochastically at a given rate <inline-formula><mml:math id="inf27"><mml:msub><mml:mi>μ</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:math></inline-formula>. We estimated that setting <inline-formula><mml:math id="inf28"><mml:msub><mml:mi>μ</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:math></inline-formula> at 0.0014 mutations per site per minute would produce the observed proportion of mutated FAST targets (87%) after 24 hr of embryonic development. We set the cell division intervals to approximate those known from <italic>Drosophila</italic> development (see Materials and methods) and we modelled the frequency and diversity of mutational outcomes on those observed in the FAST target (see previous section). Under these conditions, we would expect the accuracy of lineage reconstruction to be considerably worse, as there will be many fewer mutations accumulated in the rapid early cell cycles, and indeed the accuracy fell to just 9% (without using the weighting scheme; see <xref ref-type="fig" rid="fig5">Figure 5B</xref>).</p><p>We hypothesized that the optimal value of <inline-formula><mml:math id="inf29"><mml:msub><mml:mi>μ</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:math></inline-formula> would be different in this scenario of unequal cell divisions: that a higher <inline-formula><mml:math id="inf30"><mml:msub><mml:mi>μ</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:math></inline-formula> should improve the accuracy of the reconstructed lineage because it would help to lineage the rapid early cell cycles. To test this hypothesis we performed simulations using different values of <inline-formula><mml:math id="inf31"><mml:msub><mml:mi>μ</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:math></inline-formula>. The results show that the accuracy did indeed improve with increasing rates of mutation (<xref ref-type="fig" rid="fig5s1">Figure 5—figure supplement 1</xref>), with a maximum accuracy of 73% at <inline-formula><mml:math id="inf32"><mml:msub><mml:mi>μ</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:math></inline-formula> = 0.0154 (11 times higher than the optimal rate for embryos with a uniform rate of cell division; <xref ref-type="fig" rid="fig5">Figure 5B</xref>). These results suggest that higher mutation rates are needed for high lineaging accuracy when the rates of cell division are uneven.</p></sec><sec id="s2-6"><title>Modelling the effects of target dropouts</title><p>Given the number of targets needed to reconstruct a cell lineage accurately (<xref ref-type="fig" rid="fig2">Figure 2D</xref>), lineage recorders must include arrays of tens or hundreds of targets. CRISPR activity affecting multiple targets simultaneously, in the same cell, can result in deletions of the DNA between these targets (see <xref ref-type="fig" rid="fig6">Figure 6</xref>). Such deletions could remove multiple targets, hampering accurate cell lineage reconstruction. We modelled the potential impact of these ‘dropouts’ on the accuracy of lineage reconstruction, by conducting simulations (with uniform cell divisions, <inline-formula><mml:math id="inf33"><mml:msub><mml:mi>μ</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math></inline-formula> = 0.1195 and <inline-formula><mml:math id="inf34"><mml:mi>m</mml:mi></mml:math></inline-formula> = 32, as before) under a scenario in which every time two or more targets were mutated in a given cell at a given cell cycle, we removed all the targets located between them (see Materials and methods). We find that dropouts have a major impact on the accuracy of lineage reconstruction (<xref ref-type="fig" rid="fig6">Figure 6B</xref>); after 16 cell divisions, the accuracy dropped from 72% to 23% (or from 82% to 26% with weighted mutational outcomes).</p><fig-group><fig id="fig6" position="float"><object-id pub-id-type="doi">10.7554/eLife.40292.010</object-id><label>Figure 6.</label><caption><title>Effects of dropouts on lineage reconstruction.</title><p>(<bold>A</bold>) Schematic representing how targets can be dropped out by simultaneous CRISPR edits. (<bold>B</bold>) Accuracy of lineage reconstruction without dropouts (left) or with the presence of dropouts (right), using a <inline-formula><mml:math id="inf35"><mml:msub><mml:mi>μ</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math></inline-formula> = 0.1195. Violin plots represent the distribution of reconstruction accuracies of 1000 simulations after 16 cell divisions. The accuracy of reconstruction using 32 FAST targets, with or without weighting of mutations, is represented in orange and green respectively. In black is the accuracy when simulating the 10 targets of the Gestalt v7 construct (with no weighting; see <xref ref-type="fig" rid="fig6s1">Figure 6—figure supplement 1</xref>).</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-40292-fig6-v1.tif"/></fig><fig id="fig6s1" position="float" specific-use="child-fig"><object-id pub-id-type="doi">10.7554/eLife.40292.011</object-id><label>Figure 6—figure supplement 1.</label><caption><title>Simulating the mutational outcomes of the GESTALT v7 recorder.</title><p>(<bold>A</bold>) Comparison between the observed target saturation of the GESTALT v7 recorder (top) and our simulations (bottom). Left: Relative frequency of mutations and dropouts affecting each target after 15 cell divisions. Right: Proportion of targets (remaining after dropouts) carrying a mutation. (<bold>B</bold>) Mutation rate (<inline-formula><mml:math id="inf36"><mml:msub><mml:mi>μ</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math></inline-formula>) necessary to produce the proportion of mutations observed in each target after 15 cell divisions, assuming a geometric distribution. (<bold>C</bold>) Histogram of the number of ‘alleles’ found per simulation, in 1,000 GESTALT simulations. The red dashed line represents the mean number of alleles per simulation. 100 samples of 10,000 cells were analysed per simulation. (<bold>D</bold>) The relative frequencies of the 60 most common mutated states (mean values for all replicates and targets, in red) follow a gamma distribution with shape parameter <inline-formula><mml:math id="inf37"><mml:mi>κ</mml:mi></mml:math></inline-formula> = 0.1 and scale parameter <inline-formula><mml:math id="inf38"><mml:mi>θ</mml:mi></mml:math></inline-formula> = 2 (in blue).</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-40292-fig6-figsupp1-v1.tif"/></fig></fig-group></sec><sec id="s2-7"><title>Optimising cell lineage reconstruction for <italic>in situ</italic> sequencing with 2, 4 or 16 character states</title><p>Besides the biological constraints that influence our ability to reconstruct the cell lineage based on CRISPR recorders (mutation rates, diversity of CRISPR mutations, rates of cell division, target dropouts), there are technical constraints that currently limit our ability to read the information contained in these recorders. Thus far, our simulations have assumed that we can reliably read up to nine nucleotides surrounding each target site over tens of targets, from individual cells. This can be achieved in dissociated single cells using modern high-throughput sequencing technologies (<xref ref-type="bibr" rid="bib35">Spanjaard et al., 2018</xref>; <xref ref-type="bibr" rid="bib2">Alemany et al., 2018</xref>; <xref ref-type="bibr" rid="bib27">Raj et al., 2018</xref>).</p><p>Ideally, CRISPR-based lineage recorders could also be used in combination with spatially resolved sequencing (<italic>in situ</italic> sequencing), so that lineage information of single cells could be recorded together with their exact position in the developed embryo. Achieving accurate sequencing of multiple nucleotides in tens of targets in cells <italic>in situ</italic> is currently impractical, however, less ambitious <italic>in situ</italic> approaches have been proposed. The MEMOIR approach (<xref ref-type="bibr" rid="bib10">Frieda et al., 2017</xref>) has addressed this by employing single molecule <italic>in situ</italic> hybridization to distinguish mutated from unmutated targets.</p><p>In MEMOIR, only two character states can be detected per target (‘scratchpad’), mutated versus unmutated. Moreover, successive rounds of <italic>in situ</italic> hybridization are needed to interrogate many distinct targets, which places a constraint on the number of targets that can be read. (<xref ref-type="bibr" rid="bib10">Frieda et al., 2017</xref>) have shown that three targets can be read per hybridization and up to 9 rounds of hybridization are feasible (<xref ref-type="bibr" rid="bib10">Frieda et al., 2017</xref>); thus, reading two character states per target over <inline-formula><mml:math id="inf39"><mml:mo>∼</mml:mo></mml:math></inline-formula>30 targets seems to be achievable by the MEMOIR approach.</p><p>We carried out simulations to test how MEMOIR would perform using 32 targets, a mutation rate <inline-formula><mml:math id="inf40"><mml:msub><mml:mi>μ</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math></inline-formula> = 0.1195 and a readout of 2 character states (‘mutated’ or ‘unmutated’). We find that the accuracy is only 4%. Even with an optimal mutation rate resulting in 50% target saturation (<xref ref-type="bibr" rid="bib10">Frieda et al., 2017</xref>) the accuracy of lineage reconstruction would be only <inline-formula><mml:math id="inf41"><mml:mo>∼</mml:mo></mml:math></inline-formula>15% (data not shown).</p><p>In the future, <italic>in situ</italic> sequencing methods could be developed to interrogate the sequence of each target. These methods would be subject to different technical constraints than MEMOIR. Thus far, <italic>in situ</italic> sequencing efforts have mostly been based on sequencing by ligation and used the SOLiD sequencing technology (<xref ref-type="bibr" rid="bib20">Lee et al., 2014</xref>; <xref ref-type="bibr" rid="bib18">Ke et al., 2013</xref>), which uses consecutive ligations of fluorescent oligonucleotides to interrogate pairs of dinucleotides in the target sequence sequentially (<xref ref-type="bibr" rid="bib37">Valouev et al., 2008</xref>)). The SOLiD colour code is degenerate, as four colours are used to represent all 16 possible DNA dinucleotides.</p><p>As a first step we wanted to explore the SOLiD parameter space extensively, to determine how the number of targets (<inline-formula><mml:math id="inf42"><mml:mi>m</mml:mi></mml:math></inline-formula>) and mutation rates (<inline-formula><mml:math id="inf43"><mml:msub><mml:mi>μ</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math></inline-formula>) affect the accuracy of lineage reconstruction when reading each target with one SOLiD ligation/detection cycle (only four character states) (<xref ref-type="fig" rid="fig7">Figure 7A</xref>). For this, we performed 10 simulations over a range of values for <inline-formula><mml:math id="inf44"><mml:msub><mml:mi>μ</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math></inline-formula> (from 0.01 to 0.3 mutations per cell division) and <inline-formula><mml:math id="inf45"><mml:mi>m</mml:mi></mml:math></inline-formula> (from 10 to 300 targets). In these simulations we assumed that the four possible mutated states were equiprobable and used the complete inferred tree to estimate the accuracy. Our results show (<xref ref-type="fig" rid="fig7">Figure 7C</xref>) that the optimal mutation rate for lineage reconstruction by this approach lies between 0.05 and 0.12 mutations per cell division, and that is possible to get up to 99% accuracy with 260 targets or more. Using alternative measures of reconstruction accuracy (see below) gives us a very similar estimate of optimal mutation rate (<xref ref-type="fig" rid="fig7">Figure 7C</xref>)</p><fig-group><fig id="fig7" position="float"><object-id pub-id-type="doi">10.7554/eLife.40292.012</object-id><label>Figure 7.</label><caption><title>Combining CRISPR lineaging with <italic>in situ</italic> sequencing.</title><p>(<bold>A</bold>) The most common mutational outcome of the FAST target is shown. The coloured box highlights the most informative dinucleotide position to read by SOLiD sequencing (6–7 bp from PAM after CRISPR cleavage) and its SOLiD colour code (see <xref ref-type="fig" rid="fig7s1">Figure 7—figure supplement 1</xref>). Sequence colours as in <xref ref-type="fig" rid="fig4">Figure 4</xref>. (<bold>B</bold>) Accuracy of lineage reconstruction after sequencing with 2 SOLiD sequencing reads (left), 1 SOLiD read (center) and as in MEMOIR (right) using a <inline-formula><mml:math id="inf46"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>μ</mml:mi><mml:mrow><mml:mi>d</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> = 0.1195. In blue and pink are the accuracy of a construct with 32 and 64 FAST targets, respectively. (<bold>C</bold>) Accuracy of lineage reconstruction using all cells after 16 cell divisions (<inline-formula><mml:math id="inf47"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> = 65,536) and <italic>in situ</italic> SOLiD sequencing, for different mutation rates and numbers of CRISPR targets, using a <inline-formula><mml:math id="inf48"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:msub><mml:mi>μ</mml:mi><mml:mrow><mml:mi>d</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math></inline-formula> = 0.1195 and assuming equiprobable colour frequencies after 1 SOLiD read; accuracy (left), false positives (center) and false negatives (right). Dashed lines represent different accuracy thresholds (levelplot) after a LOESS regression. For each parameter combination, we used the mean accuracy of 10 simulations after 16 cell divisions. We found the global accuracy to be similar when subsampling 1,000 cells (<xref ref-type="fig" rid="fig7s2">Figure 7—figure supplement 2</xref>).</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-40292-fig7-v1.tif"/></fig><fig id="fig7s1" position="float" specific-use="child-fig"><object-id pub-id-type="doi">10.7554/eLife.40292.013</object-id><label>Figure 7—figure supplement 1.</label><caption><title>Distribution of SOLiD sequencing outcomes on the FAST target, to identify the most informative sites.</title><p>(<bold>A</bold>) SOLiD colour-space coding. Each dinucleotide-specific probe is labelled with 1 of 4 fluorescent markers. The colour code for the 16 possible dinucleotides is shown on the left. The outcome of interrogating two different dinucleotides in the unmutated target is shown on the right; positions 3–4 (green) and 6–7 (red) from the PAM sequence (in purple). (<bold>B</bold>) The frequencies of experimentally observed mutational outcomes on the FAST target are shown, using the SOLiD colour code. For reference, the sequence of colours for the unmutated target is shown at the top. The dinucleotide located 6–7 nucleotides upstream of the PAM is the most informative for lineage reconstruction. The grey boxes highlight the dinucleotides used for the SOLiD simulations.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-40292-fig7-figsupp1-v1.tif"/></fig><fig id="fig7s2" position="float" specific-use="child-fig"><object-id pub-id-type="doi">10.7554/eLife.40292.014</object-id><label>Figure 7—figure supplement 2.</label><caption><title>Accuracy of lineage reconstruction using a single-read of SOLiD sequencing.</title><p>(<bold>A</bold>) Accuracy of lineage reconstruction, for different mutation rates and numbers of CRISPR targets, after a single read of SOLiD sequencing at positions 6–7 of the FAST target (see <xref ref-type="fig" rid="fig7s1">Figure 7—figure supplement 1</xref>). For each parameter combination, accuracy values represent the average of 10 simulations. (<bold>B</bold>) Accuracy thresholds after applying a Loess regression on the same data.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-40292-fig7-figsupp2-v1.tif"/></fig></fig-group><p>In SOLiD sequencing, the number of ligation/detection cycles that can be performed is limited by photodamage of the target amplicons and by the time required to perform this type of sequencing (10 days for 30 ligation cycles; <xref ref-type="bibr" rid="bib21">Lee et al., 2015</xref>). The practical upper limit on the number of SOLiD cycles that can be performed is therefore currently in the order of 30–60 cycles. Given these constraints, it is important to optimise the sequencing strategy so as to maximise the amount of sequence information obtained for a given number of SOLiD sequencing cycles. We can ask, for example, whether it would be preferable to perform a single ligation/detection cycle on 64 targets rather than two ligation/detection cycles on 32 targets. Given the experimentally measured spectrum of CRISPR-induced mutations on the targets, we can also determine which nucleotides of the target we should interrogate in order to extract the most information.</p><p>We determined that positions 6–7 bp 5’ of the PAM sequence yield the most equiprobable colour frequencies for the FAST target (<xref ref-type="fig" rid="fig7">Figure 7A</xref>), minimising homoplasy in the observed character states (see <xref ref-type="fig" rid="fig5">Figure 5</xref>). The frequency of each mutated state was determined by the real frequency of mutations observed (see above) and the overall frequency of mutation was set to <inline-formula><mml:math id="inf49"><mml:msub><mml:mi>μ</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math></inline-formula> = 0.1195 per cell division. We note that the unmutated state (red) is indistinguishable from one of the four mutated states. With 4-character states, homoplasy will arise frequently from convergent appearance of the same colour (even arising from different mutated states) in independent cells. Our results show that, with a single SOLiD read, using a recorder with 32 targets, the mean accuracy of reconstructed cell lineages is 45% (<xref ref-type="fig" rid="fig7">Figure 7B</xref>).</p><p>Clearly, increasing the number of targets will improve performance, but we wanted to know whether it would be better instead to read double the number of nucleotides per target, which represents the same sequencing effort. We found that the reconstruction accuracy obtained by performing 1 SOLiD sequencing cycle on 64 FAST targets is higher (69%) than performing 2 SOLiD cycles on 32 FAST targets (65%) (<xref ref-type="fig" rid="fig7">Figure 7B</xref>). For the second SOLiD cycle we used the positions 11–12 bp 5’ from the PAM sequence, as, in SOLiD, the sequentially interrogated dinucleotide pairs are typically separated by five nucleotides (<xref ref-type="bibr" rid="bib21">Lee et al., 2015</xref>).</p></sec><sec id="s2-8"><title>Assessing the accuracy of an existing recorder</title><p>Recently, a number of lineaging approaches using CRISPR recorders have been tested in the nematode <italic>Caenorhabditis elegans</italic> and the zebrafish <italic>Danio rerio</italic>, as well as in cultured human cells (<xref ref-type="bibr" rid="bib23">McKenna et al., 2016</xref>; <xref ref-type="bibr" rid="bib32">Schmidt et al., 2017</xref>; <xref ref-type="bibr" rid="bib10">Frieda et al., 2017</xref>). We have used our simulation approach to assess the accuracy of GESTALT, one of the first and most ambitious approaches, which aimed to reconstruct the cell lineage of the tens of thousands of cells of the zebrafish embryo (<xref ref-type="bibr" rid="bib23">McKenna et al., 2016</xref>). It is important to note that in GESTALT the cell lineage is reconstructed at a coarse-grained level, with clones (instead of cells) as nodes in the tree, whereas our measure of success assesses the ability to reconstruct the complete cell lineage at a single-cell level.</p><p>GESTALT uses arrays of 10 different CRISPR targets, mutated by injecting fertilised eggs with 10 corresponding sgRNAs and Cas9. The mutated targets are then sequenced at different developmental stages. We based our simulations on the mutational outcomes derived from the GESTALT recorder v7 at 30 hr post-fertilisation (downloaded from the Dryad repository). At this stage the zebrafish embryo consists of approximately 25,000 cells, resulting from ~15 rounds of cell division.</p><p>In our simulations, we assumed a constant mutation rate (per cell division), which, as we have shown, will probably overestimate of the accuracy of the inferred lineage. For each of the 10 CRISPR targets, we estimated the mutation rate (<inline-formula><mml:math id="inf50"><mml:msub><mml:mi>μ</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math></inline-formula>) necessary to obtain the fraction of mutated targets observed after 15 cell divisions (<xref ref-type="fig" rid="fig6s1">Figure 6—figure supplement 1</xref>). The estimated mutation rate ranges from ~0.01 (for target 10) to ~0.23 (for target 7) per cell division.</p><p>The v7 GESTALT construct shows a high incidence of target dropouts which were modelled as previously described. The mutational process was modelled as a gamma distribution of 60 possible mutated states (<xref ref-type="fig" rid="fig6s1">Figure 6—figure supplement 1</xref>), with frequencies closely approximating the observed distribution of mutations reported in the GESTALT publication (see Materials and methods for detail). We compared the number of different alleles (i.e., unique combinations of mutated targets) obtained in the simulated and the experimental results; the mutational complexity used in our simulations generated a number of alleles that closely approximates the experimentally observed number (see Materials and methods for more details).</p><p>We performed 1000 simulations and inferred the cell lineage of 1000 randomly sampled cells from each simulation. We find that the mean accuracy of the GESTALT approach is just 14% after 16 cell divisions (<xref ref-type="fig" rid="fig6">Figure 6B</xref>). This means that this implementation of GESTALT is not suited for reconstructing a complete, accurate cell lineage.</p></sec><sec id="s2-9"><title>Measuring accuracy at different depths of the tree</title><p>To quantify the decay in number of targets available for mutation, we measured the accuracy (percentage of correct splits) when reconstructing the relationships between groups of four granddaughter cells derived from a single grandmother, sampled after different numbers of cell division (quartet analysis). The only targets that vary amongst the daughters, and hence inform the tree reconstruction, are those mutated in the previous two cell divisions. This analysis allows us to visualise (<xref ref-type="fig" rid="fig8">Figure 8</xref>) the effect of the decline in available targets as they are mutated, but excludes the effects of subsequent homoplasy or the later loss of targets through dropouts.</p><fig id="fig8" position="float"><object-id pub-id-type="doi">10.7554/eLife.40292.015</object-id><label>Figure 8.</label><caption><title>Quartet analysis.</title><p>Boxplots showing the percentage of correct splits in quartet trees measured at cell divisions 2 to 16. Red diamonds represent the average of up to 250 randomly sampled groups of quartet trees from the different simulations. The black dashed line indicates the average percentage of correct splits observed in 100,000 random quartet trees.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-40292-fig8-v1.tif"/></fig><p>To see how this decay in information interacts with other factors, such as dropouts and homoplasy, we applied our Robinson-Foulds related accuracy measure to branches of increasing size (<xref ref-type="fig" rid="fig9">Figure 9</xref>). When comparing with the quartet analysis, in the simulation with FAST targets and no dropouts, we can see a similar decline in accuracy in later branches of the tree. In simulations with dropouts (with FAST targets and GESTALT) the earlier branches are, in contrast, less well reconstructed than the later ones, presumably due to the loss of informative mutations through dropouts.</p><fig-group><fig id="fig9" position="float"><object-id pub-id-type="doi">10.7554/eLife.40292.016</object-id><label>Figure 9.</label><caption><title>Assessing reconstruction accuracy at different tree depths.</title><p>Three different measures of reconstruction accuracy (rows) are shown for four set of simulations (columns). The x-axis in each plot indicates the size of the clade of cells that is being assessed. In the False Positives and Negatives plots, black crosses show the average values of 1000 random trees.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-40292-fig9-v1.tif"/></fig><fig id="fig9s1" position="float" specific-use="child-fig"><object-id pub-id-type="doi">10.7554/eLife.40292.017</object-id><label>Figure 9—figure supplement 1.</label><caption><title>Method to estimate false positives and false negatives.</title><p>False positives were measured by counting the proportion of cells that need to be pruned from a branch of the inferred tree to match a given branch in the reference tree. Similarly, false negatives were measured by counting the proportion of cells that need to be pruned from a branch of the reference tree to match a given branch of the inferred lineage tree. For details see Materials and methods.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-40292-fig9-figsupp1-v1.tif"/></fig></fig-group><p>As an additional measure of tree accuracy, which could provide a more intuitive estimate of usefulness when thinking about the clonal composition of tissues, we estimated the proportion of false positive (FP) and false negative (FN) assignments of cells to clones in the reconstructed cell lineage (<xref ref-type="fig" rid="fig9">Figure 9</xref> and <xref ref-type="fig" rid="fig9s1">Figure 9—figure supplement 1</xref>). False positives were defined as the proportion of cells that are erroneously assigned to a given cell clone. Conversely, false negatives were defined as the proportion of cells that are not assigned to a cell clone to which they belong. As before, our measurements of false positives and false negatives were performed on trees subsampled from the full simulated lineage and analysed monophyletic groups of cells (‘clones’) of variable size, as described in the Materials and methods section.</p><p>Unsurprisingly, the FP and FN measures closely reflect the topology based accuracy measure. Our results show, for example, that the clones of 33–64 cells reconstructed in simulations based on our FAST construct without dropouts have a high accuracy of 90% and correspondingly low errors, with less than 5% of both FP and FN.</p></sec></sec><sec id="s3" sec-type="discussion"><title>Discussion</title><p>The use of CRISPR-induced somatic mutations is emerging as an attractive approach for reconstructing complex cell lineages. A variety of CRISPR-based lineage recorders has been developed to test this approach (<xref ref-type="bibr" rid="bib23">McKenna et al., 2016</xref>; <xref ref-type="bibr" rid="bib10">Frieda et al., 2017</xref>; <xref ref-type="bibr" rid="bib16">Kalhor et al., 2018</xref>; <xref ref-type="bibr" rid="bib24">Perli et al., 2016</xref>; <xref ref-type="bibr" rid="bib2">Alemany et al., 2018</xref>; <xref ref-type="bibr" rid="bib32">Schmidt et al., 2017</xref>; <xref ref-type="bibr" rid="bib27">Raj et al., 2018</xref>; <xref ref-type="bibr" rid="bib4">Attardi et al., 2018</xref>; <xref ref-type="bibr" rid="bib35">Spanjaard et al., 2018</xref>; <xref ref-type="bibr" rid="bib15">Junker et al., 2016</xref>). If the results of these methods are to be useful for gaining biological insights, however, it is essential that the inferred lineage trees are sufficiently reliable, that is that they accurately reconstruct the real cell lineages of the organism. The required accuracy of a lineage will depend on the application; for example, accurate trees will be necessary to detect stereotypic divisions and cell fates such as those found in <italic>Drosophila</italic> sensory organ precursor and CNS neuroblast lineages, but less accurate trees may be sufficient to detect biases/trends reflecting major lineage commitments. The potential accuracy of the trees inferred using these methods has not yet been established, however.</p><p>We have used simulations of the process of cell division and the accumulation of mutations across a lineage tree covering tens of thousands of cells, to examine the effects of different factors on the accuracy of a reconstructed tree. Our simulations allowed us to look at the influence of different rates of mutation on the CRISPR targets, of different designs of lineage recorders and of how mutations could be read experimentally. We have also investigated the effects of irregular cell divisions, target deletions following simultaneous double-stranded cuts and the variable mutational outcomes of the CRISPR process itself.</p><p>Unsurprisingly, the accuracy of lineage reconstruction largely rests on the quantity and quality of lineage information carried by the recorders, which is influenced by several factors. Although it is obvious that the accuracy of the lineage tree depends on the number of CRISPR targets in the recorder, our results serve to place strict upper limits on the level of accuracy that we can expect from CRISPR recorders. Under ideal conditions (optimized mutation rates, uniform cell divisions, fully sequenced targets), 30 targets are sufficient to reach an overall tree accuracy of ~70% for a lineage of ~65,000 cells; 100 targets would yield trees that have an accuracy above 90% (<xref ref-type="fig" rid="fig2">Figure 2D</xref>). If we were only able to take a single 4-colour SOLiD read per target, more than 200 targets would be required to get a highly accurate (&gt;95%) tree (<xref ref-type="fig" rid="fig7">Figure 7C</xref>).</p><p>A second important requirement is to match the mutation rate to the rate of cell division; mutation rates that are too low will leave many cell divisions unmarked, while mutations that accumulate too rapidly will quickly saturate the targets and leave very few available to record later cell divisions. The range of mutation rates that can produce accurate lineage reconstructions fortunately proves to be quite broad for a given tree size; 0.05 to 0.25 mutations per cell division can yield reasonably high levels of accuracy for trees of ~65,000 cells, if the division rates are relatively even (<xref ref-type="fig" rid="fig2">Figure 2C,D</xref>). This flexibility will be beneficial in cases where the cell division rates are poorly characterised. Alongside the number of targets, mutation rates are an attribute of the experiment that can be adjusted. Rates can potentially be increased by increasing the expression levels of the CRISPR effectors, or decreased by introducing mismatches between the sgRNA and the CRISPR targets, as we have shown experimentally (<xref ref-type="fig" rid="fig3">Figure 3C</xref>).</p><p>The information carried by CRISPR recorders is also influenced by the diversity of the experimentally observed mutations accumulating at each CRISPR target. Our observations of CRISPR mutations in <italic>Drosophila</italic> show that these are biased towards a small number of frequently observed outcomes. Simulations show how targets that accumulate a broad set of more equiprobable mutations generate more reliable trees (<xref ref-type="fig" rid="fig2">Figure 2C</xref>). If, as expected, the diversity of mutations and their relative frequencies vary depending on the target sequence and its local environment (<xref ref-type="bibr" rid="bib38">van Overbeek et al., 2016</xref>; <xref ref-type="bibr" rid="bib39">Vu et al., 2017</xref>; <xref ref-type="bibr" rid="bib3">Allen et al., 2018</xref>; <xref ref-type="bibr" rid="bib6">Chen et al., 2018</xref>; <xref ref-type="bibr" rid="bib34">Shen et al., 2018</xref>) sampling different targets to approach this optimum would be worthwhile.</p><p>Some factors affecting tree reconstruction accuracy are outside of experimental control, but simulating their effects can nevertheless show which responses can successfully mitigate them. We have shown, for example, that uneven rates of cell division across the tree require faster mutation rates and/or larger numbers of targets, to provide sufficient coverage during the fastest divisions. In an extreme case, such as the <italic>Drosophila</italic> embryonic lineage where 13 of the 16 cell divisions take place at a very high rate (1 cell division every ~10 min), the optimum mutation rate proves to be &gt;10 times higher than in an equivalent tree with uniform division rates. Even with this optimised mutation rate, the potential accuracy of lineage reconstruction with a given number of targets is much lower (<xref ref-type="fig" rid="fig5">Figure 5A</xref>).</p><p>Besides the intrinsic limitations imposed by CRISPR mutagenesis, the information that we can obtain from each CRISPR target is further constrained by our ability to read and to discriminate between the mutational outcomes. As an obvious goal would be to sequence the mutated targets in individual cells <italic>in situ</italic>, we have explored the specific case of obtaining a single 4-colour SOLiD sequencing read per target. It is encouraging to find that accurate lineage reconstruction is still possible given a sufficient number of targets (<xref ref-type="fig" rid="fig7">Figure 7C</xref>).</p><p>Finally, we show the degree to which the accuracy of lineage reconstruction is sensitive to loss of information caused by the loss of targets through deletion resulting from simultaneous cleavage at two sites (<xref ref-type="fig" rid="fig6">Figure 6B</xref>). While we have used the most pessimistic estimate of the frequency of dropouts - assuming that every pair of targets cleaved in the same cell would lead to a deletion of the intervening targets in the array - data from GESTALT suggest that target dropouts are frequent when mutation rates are high (<xref ref-type="bibr" rid="bib23">McKenna et al., 2016</xref>). The strong deleterious effect of dropouts that we observe in simulations highlights the need to address this issue. The problem of dropouts could be reduced by opting for the lower end of the optimal range of mutation rates; or eliminated by targeting separate loci in the genome rather than arrays of targets.</p><p>Available implementations of CRISPR type recorders are based on different conceptual designs: barcoded arrays recording point mutations (<xref ref-type="bibr" rid="bib23">McKenna et al., 2016</xref>; <xref ref-type="bibr" rid="bib27">Raj et al., 2018</xref>), ‘collapsing’ arrays (<xref ref-type="bibr" rid="bib10">Frieda et al., 2017</xref>), targets distributed in different genomic locations (<xref ref-type="bibr" rid="bib15">Junker et al., 2016</xref>; <xref ref-type="bibr" rid="bib32">Schmidt et al., 2017</xref>; <xref ref-type="bibr" rid="bib4">Attardi et al., 2018</xref>; <xref ref-type="bibr" rid="bib2">Alemany et al., 2018</xref>; <xref ref-type="bibr" rid="bib35">Spanjaard et al., 2018</xref>) and mutations induced by self-targeting guide RNAs (<xref ref-type="bibr" rid="bib16">Kalhor et al., 2018</xref>; <xref ref-type="bibr" rid="bib24">Perli et al., 2016</xref>). Here we have simulated the first two types of recorders, but we expect that the insights that we have gained on the importance of optimising mutation rates, target numbers and the complexity of character states will apply to all types of recorders.</p><p>Our analysis suggests that most of the CRISPR recorders published to date, which rely on at most 10 CRISPR targets (<xref ref-type="bibr" rid="bib23">McKenna et al., 2016</xref>; <xref ref-type="bibr" rid="bib27">Raj et al., 2018</xref>; <xref ref-type="bibr" rid="bib10">Frieda et al., 2017</xref>; <xref ref-type="bibr" rid="bib15">Junker et al., 2016</xref>; <xref ref-type="bibr" rid="bib32">Schmidt et al., 2017</xref>; <xref ref-type="bibr" rid="bib2">Alemany et al., 2018</xref>), yield trees of very low overall accuracy and lineage resolution. While these recorders must, nevertheless, carry lineage information of lower resolution, it is sensible to interpret the results from these recorders in the light of this expected low level of accuracy.</p><p>A simulation-guided design of lineage recorders, taking into account the specific parameters of each experimental system, is essential. We hope our study will encourage the general use of simulations of lineage recorders, with the aim of testing their limits, adjusting their design and improving their performance. This approach should stimulate the development of a new generation of CRISPR recorders whose performance will be assessed explicitly and adapted to match the biological questions at hand. Our study predicts that optimised recorders will ultimately allow the reconstruction of accurate cell lineages of complex multicellular organisms at the level of a single cell.</p></sec><sec id="s4" sec-type="materials|methods"><title>Materials and methods</title><sec id="s4-1"><title>CRISPR recorder and sequencing</title><sec id="s4-1-1"><title>Design and synthesis</title><p>We designed a DNA construct containing an array of 32 targets of the human Emx1.6 sgRNA (<xref ref-type="bibr" rid="bib14">Hsu et al., 2013</xref>), including the wild-type Emx1.6 target sequence and 31 variants carrying 1 or 2 mismatches and/or an alternative PAM sequence (see <xref ref-type="supplementary-material" rid="supp1">Supplementary file 1—Table1</xref>). To facilitate synthesis of this construct, between each pair of targets we introduced 80 bp spacers, harbouring unique sequences which would be recognised by specific primers (<xref ref-type="supplementary-material" rid="supp1">Supplementary file 1—Table 3</xref>). We optimised these spacer sequences <italic>in silico</italic> to minimise the presence of repetitive sequences. Unique KpnI and NotI cloning sites were included at either end of the array to help with subsequent cloning steps.</p><p>We designed a second plasmid carrying the KpnI and NotI restriction sites and the <italic>Drosophila</italic> U6.2 promoter driving expression of the Emx1.6 sgRNA (<xref ref-type="bibr" rid="bib14">Hsu et al., 2013</xref>) using a standard sgRNA scaffold: GUUUUAGAGCUAGAAAUAGCAAGUUAAAAUAAGGCUAGUCCGUUAUCAACUUGAAAAAGUGGCACCGAG (<xref ref-type="bibr" rid="bib14">Hsu et al., 2013</xref>; <xref ref-type="bibr" rid="bib25">Port et al., 2014</xref>). This DNA sequence was flanked by two attB sites. The <italic>Drosophila</italic> U6.2 promoter has been shown by previous studies to produce lower levels of CRISPR activity when compared to the U6.1 and U6.3 promoters (<xref ref-type="bibr" rid="bib25">Port et al., 2014</xref>).</p><p>Both constructs were synthesised by Biomatik (Ontario, Canada) using standard gene synthesis techniques. The CRISPR target array was excised from the first construct by KpnI-NotI digestion and subcloned into the KpnI and NotI sites of the second plasmid.</p></sec><sec id="s4-1-2"><title>Fly transgenesis, genetics and strains</title><p>The construct carrying the CRISPR target array and U6.2::Emx1.6 sgRNA was inserted via recombinase-mediated cassette exchange (<xref ref-type="bibr" rid="bib5">Bateman et al., 2006</xref>) into the second chromosome of <italic>Drosophila melanogaster</italic> (acceptor strain # 27387) using a commercially available service (BestGene Inc, USA).</p><p>Homozygous Act-5C-Cas9 females (Bloomington stock # 54590) were crossed with homozygous males carrying the CRISPR target array, set to lay eggs over 30 min intervals in order to obtain synchronised egg collections, and the progeny were collected at different developmental stages (24 hr embryos, third instar larvae, recently hatched adults). As negative controls, to account for sequencing errors, we used adults carrying the CRISPR target array (in heterozygous condition), but lacking the Cas9 transgene.</p></sec><sec id="s4-1-3"><title>DNA extraction, generation of libraries and sequencing</title><p>For DNA extraction and sequencing, we pooled approximately 100 embryos, 10 larvae or 20 adults (10 males and 10 females). We extracted genomic DNA by phenol chloroform extraction followed by alcohol precipitation, and generated libraries by PCR using primers harbouring adapter sequences (‘fusion PCR’) barcoded by condition (see <xref ref-type="supplementary-material" rid="supp1">Supplementary file 1—Table 3</xref>) for sequencing on Ion Torrent Personal Genome Machine (PGM, Life Technologies): as the maximum PGM read length is 400 bp and each target repeat in our construct is 100 bp long, we amplified the repeats in 10 groups of 3 units (amplicons 1–10), plus a group of 2 units (amplicon 11). PCRs were performed using the Phusion High Fidelity Polymerase (New England Biolabs), according to the manufacturer's instructions. Amplicons were run on a gel, excised and purified to eliminate primer dimers. Purified amplicons were then mixed in equimolar amounts and the final pooled mix was sequenced on the PGM sequencer with a 318 v2 chip, as well as a calibration standard to enhance the read quality.</p></sec><sec id="s4-1-4"><title>Filtering of sequencing data</title><p>The 7,347,400 reads obtained were de-multiplexed by condition and trimmed to meet quality standards using the Phred software included in the seqtk_trimfq package of the Galaxy software (<xref ref-type="bibr" rid="bib1">Afgan et al., 2016</xref>). We next eliminated sequencing reads that were shorter than 100 bp, lacked the 5’ primer sequence, or lacked a target-specific sequence of 11–20 bp downstream of the target (including the PAM) using a custom Python script. In each sequencing read, we used the 9 bp adjacent to the PAM sequence (9mer) to determine whether a target was mutated (the results are shown in <xref ref-type="supplementary-material" rid="supp1">Supplementary file 1—Table 1</xref>).</p><p>We quantified sequencing errors (with a custom Python script) by analysing the target sequences of adult flies carrying the CRISPR recorder and the sgRNA but not carrying Act-Cas9 (‘untargeted’ condition): in these animals we expect any differences from the unmutated state to reflect sequencing errors. In target 16 (FAST target) we found two frequent sequencing errors (single nucleotide deletions) downstream of the target; we decided to include the reads carrying these errors. Targets 17 and 18 did not yield a sufficient number of good quality reads, and targets 13, 21, and 23 showed a high proportion of sequencing errors (<xref ref-type="supplementary-material" rid="supp1">Supplementary file 1—Table 1</xref>).</p></sec></sec><sec id="s4-2"><title>Estimating mutation rate and mutational complexity</title><sec id="s4-2-1"><title>FAST target</title><p>We estimated the mutation rate of the FAST target based on the proportion of targets that were mutated at the end of embryonic development (86.95%) using a custom Python script based on the geometric cumulative distribution function. The mutation rate of <inline-formula><mml:math id="inf51"><mml:msub><mml:mi>μ</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math></inline-formula> = 0.1195 mutations per cell division produces the observed saturation of 86.95% after 16 cell divisions.</p><p>We modelled the mutational outcomes of the FAST target based on the mutational outcomes observed at the end of embryonic development (&gt;200 distinct 9mers with frequencies following an exponential curve; see <xref ref-type="fig" rid="fig4">Figure 4C</xref>). We considered that a mutation would result in a change to one of 59 states with a probability reflecting the observed occurrence of the 59 most frequent real mutations (95% of the total; see <xref ref-type="fig" rid="fig4">Figure 4C</xref> and <xref ref-type="fig" rid="fig4s1">Figure 4—figure supplement 1</xref>) or to a 60th state with a probability of 0.05. For the simulation of SOLiD sequencing we used the real distribution of the dinucleotides observed at positions 6–7 and 11–12 upstream of the PAM. We translated each dinucleotide into one of four different colour states according to the SOLiD protocol (<xref ref-type="fig" rid="fig7s1">Figure 7—figure supplement 1</xref>).</p></sec><sec id="s4-2-2"><title>Gestalt</title><p>To analyse the accuracy of GESTALT, we used data from the v7 construct at the 30 hr post-fertilisation stage (available at <ext-link ext-link-type="uri" xlink:href="https://datadryad.org/resource/doi:10.5061/dryad.478t9">https://datadryad.org/resource/doi:10.5061/dryad.478t9</ext-link>). These consist of six biological replicates. The v7 construct contains 10 different CRISPR targets that were targeted with 10 different sgRNAs.</p><p>For each biological replicate we quantified the frequency of mutations and dropouts in each target (<xref ref-type="fig" rid="fig6s1">Figure 6—figure supplement 1</xref>) using a custom Perl script. We considered any deletion greater than 26 bp to be a dropout, as this would affect more than one target (each target is 23 bp). For each target, we quantified saturation as the proportion of reads of the target that were mutated. For each target, we estimated the mutation rate per cell division (<inline-formula><mml:math id="inf52"><mml:msub><mml:mi>μ</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math></inline-formula>) necessary to produce the level of saturation (proportion of mutated targets) observed after 15 cell divisions, assuming that mutations follow a geometric distribution. The estimated mutation rate ranges from ~0.01 (target 10) to ~0.23 (target 7) (<xref ref-type="fig" rid="fig6s1">Figure 6—figure supplement 1</xref>).</p><p>The mutational complexity varied between targets and replicates, from ~25 to ~200 different mutations per target. In all cases, however, their frequencies followed an exponential curve, with one mutation usually accounting for 20–30% of the total reads and with the majority of the mutations observed only rarely. For each target we modelled the mutational outcome as 60 different mutations with frequencies sampled from a random gamma distribution, with shape parameter <inline-formula><mml:math id="inf53"><mml:mi>κ</mml:mi></mml:math></inline-formula> = 0.1 and scale parameter <inline-formula><mml:math id="inf54"><mml:mi>θ</mml:mi></mml:math></inline-formula> = 2, which approximate the observed distribution (see <xref ref-type="fig" rid="fig6s1">Figure 6—figure supplement 1D</xref>).</p></sec></sec><sec id="s4-3"><title>Computer simulations</title><p>Computer simulations were performed using MATLAB v2017a (Mathworks, 2017) and are available at a Github repository (<xref ref-type="bibr" rid="bib31">Salvador-Martínez, 2018</xref>; copy archived at <ext-link ext-link-type="uri" xlink:href="https://github.com/elifesciences-publications/CRISPR_recorders_sims">https://github.com/elifesciences-publications/CRISPR_recorders_sims</ext-link>). CRISPR mutations were simulated following a geometric or a poisson distribution.</p><sec id="s4-3-1"><title>Simulating mutation events using a geometric distribution</title><p>To simulate mutations using a geometric distribution, the probability of mutation was the same for all targets per cell division. Given a mutation rate <inline-formula><mml:math id="inf55"><mml:msub><mml:mi>μ</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math></inline-formula> (per cell division), the probability that a site remains unmutated after <inline-formula><mml:math id="inf56"><mml:mi>d</mml:mi></mml:math></inline-formula> cell divisions is <inline-formula><mml:math id="inf57"><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msub><mml:mi>μ</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>d</mml:mi></mml:msup></mml:math></inline-formula>. Thus, we can determine the mutation rate <inline-formula><mml:math id="inf58"><mml:msub><mml:mi>μ</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math></inline-formula> from the proportion of targets that are mutated after a given number of cell divisions.</p></sec><sec id="s4-3-2"><title>Simulating mutation events using a poisson distribution</title><p>Under the Poisson model, given a mutation rate <inline-formula><mml:math id="inf59"><mml:msub><mml:mi>μ</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:math></inline-formula> (per minute), the probability that a site remains unmutated after <inline-formula><mml:math id="inf60"><mml:mi>t</mml:mi></mml:math></inline-formula> minutes is: <inline-formula><mml:math id="inf61"><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mi>μ</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>⁢</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:msup></mml:math></inline-formula>. Thus, we can determine the mutation rate <inline-formula><mml:math id="inf62"><mml:msub><mml:mi>μ</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:math></inline-formula> from the proportion of targets that are mutated after a given amount of time. The time interval for each cell division was set to approximate the rates of cell division in early <italic>Drosophila</italic> embryos: for the first 13 cell divisions the interval was set to 10 min, and to 130 min per division for the last three divisions (<xref ref-type="bibr" rid="bib40">Zalokar and Erk, 1976</xref>; <xref ref-type="bibr" rid="bib9">Foe, 1989</xref>).</p></sec><sec id="s4-3-3"><title>Simulation of target dropouts</title><p>For the dropouts simulations, if any two targets were hit during a given cell division, all the targets between them were removed. When three or more targets were hit during the same cell division, two were selected randomly and the intervening targets were removed. In subsequent phylogenetic analyses, dropouts were treated as missing data.</p></sec><sec id="s4-3-4"><title>Simulations of GESTALT</title><p>We performed 1000 simulations with the estimated <inline-formula><mml:math id="inf63"><mml:msub><mml:mi>μ</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:math></inline-formula> for each target over 16 cell divisions. We accounted for dropouts as described previously. To test whether our simulations match the experimental results in terms of mutational complexity, we compared the number of ‘alleles’ (unique combinations of mutated targets) found in the experimental and in the simulated data.</p><p>Our simulations encompassed 15 cell divisions, yielding 32,768 cells, which approximates the 30 hpf zebrafish embryo (<inline-formula><mml:math id="inf64"><mml:mo>∼</mml:mo></mml:math></inline-formula>25,000 cells). For each simulation, we took 100 random samples of 10,000 cells and counted the number of alleles in each sample. Our simulated samples produced an average of 3022 alleles (s.d. = 877 alleles; see <xref ref-type="fig" rid="fig6s1">Figure 6—figure supplement 1</xref>), compared to the 1,000–2,500 alleles found in the experimental data (<xref ref-type="bibr" rid="bib23">McKenna et al., 2016</xref>).</p></sec></sec><sec id="s4-4"><title>Analysis of simulated targets</title><p>The main outcome of each simulation was a <inline-formula><mml:math id="inf65"><mml:mi>T</mml:mi></mml:math></inline-formula> matrix of size <inline-formula><mml:math id="inf66"><mml:mrow><mml:mi>N</mml:mi><mml:mo>×</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:math></inline-formula>, for <inline-formula><mml:math id="inf67"><mml:mi>N</mml:mi></mml:math></inline-formula> cells and <inline-formula><mml:math id="inf68"><mml:mi>m</mml:mi></mml:math></inline-formula> targets. This matrix is equivalent to a DNA alignment with species as rows and DNA positions as columns. For most simulations, 10 random samples of 1,000 cells were chosen for lineage reconstruction and for assessing the accuracy of the reconstructed cell lineage. A ‘root’ taxon with unmutated character states was added to the alignment prior to the lineage inference. For some simulations, we inferred cell lineages using all cells after 16 cell divisions (<inline-formula><mml:math id="inf69"><mml:mrow><mml:mi>N</mml:mi><mml:mo>=</mml:mo><mml:mi/></mml:mrow></mml:math></inline-formula> 65,536) and found that their global accuracy was similar to that when subsampling 1,000 cells (<xref ref-type="fig" rid="fig7s2">Figure 7—figure supplement 2</xref>).</p><p>For the target dropouts simulations we added to the <inline-formula><mml:math id="inf70"><mml:mi>T</mml:mi></mml:math></inline-formula> matrix an extra character for each distinct dropout of one or more targets that was shared between <inline-formula><mml:math id="inf71"><mml:mo>≥</mml:mo></mml:math></inline-formula>32 cells (character state ‘1’ if present, ‘0’ if absent). This was done to take advantage of the information coming from shared target dropouts.</p></sec><sec id="s4-5"><title>Cell lineage inference</title><sec id="s4-5-1"><title>Reconstructing lineage trees using neighbor joining (PAUP*)</title><p>Most cell lineages were inferred using the Neighbor-Joining method (NJ). We used the Neighbor joining algorithm as implemented in the PAUP* software (version 4.0a build 158; (<xref ref-type="bibr" rid="bib36">Swofford, 2017</xref>)). In PAUP*, up to 64 character states can be specified, with the possibility of giving different weights to the occurrence of specific mutations. We used a substitution matrix based on the frequency of each mutation. The matrix has size <inline-formula><mml:math id="inf72"><mml:mrow><mml:mi>s</mml:mi><mml:mo>×</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:math></inline-formula> for <inline-formula><mml:math id="inf73"><mml:mi>s</mml:mi></mml:math></inline-formula> number of states, where the distance from state <inline-formula><mml:math id="inf74"><mml:mi>i</mml:mi></mml:math></inline-formula> to state <inline-formula><mml:math id="inf75"><mml:mi>j</mml:mi></mml:math></inline-formula> is weighted according to the natural logarithm of the inverse of their frequencies (<xref ref-type="bibr" rid="bib7">Felsenstein, 1981</xref>) with the equation:<disp-formula id="equ1"><mml:math id="m1"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mtable columnalign="left left" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mrow><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">f</mml:mi></mml:mrow><mml:mspace width="thinmathspace"/><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mi>j</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mi>F</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mrow><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">f</mml:mi></mml:mrow><mml:mspace width="thinmathspace"/><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mi>u</mml:mi><mml:mi>n</mml:mi><mml:mi>m</mml:mi><mml:mi>u</mml:mi><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>d</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mi>F</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mrow><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">f</mml:mi></mml:mrow><mml:mspace width="thinmathspace"/><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mi>u</mml:mi><mml:mi>n</mml:mi><mml:mi>m</mml:mi><mml:mi>u</mml:mi><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>d</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mi>F</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mi>F</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mrow><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">h</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">w</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">s</mml:mi><mml:mi mathvariant="normal">e</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mo fence="true" stretchy="true" symmetric="true"/></mml:mrow></mml:mrow></mml:mstyle></mml:math></disp-formula>where <inline-formula><mml:math id="inf76"><mml:mrow><mml:mi>F</mml:mi><mml:mo>⁢</mml:mo><mml:mi>r</mml:mi><mml:mo>⁢</mml:mo><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf77"><mml:mrow><mml:mi>F</mml:mi><mml:mo>⁢</mml:mo><mml:mi>r</mml:mi><mml:mo>⁢</mml:mo><mml:mi>e</mml:mi><mml:mo>⁢</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> are the frequencies of states <inline-formula><mml:math id="inf78"><mml:mi>i</mml:mi></mml:math></inline-formula> and <inline-formula><mml:math id="inf79"><mml:mi>j</mml:mi></mml:math></inline-formula> respectively.</p><p>In simulations where we modelled dropouts, an extra character state was assigned to each cell containing a dropout that was shared by <inline-formula><mml:math id="inf80"><mml:mo>≥</mml:mo></mml:math></inline-formula>32 cells. For these simulations, the distance matrix was applied to the <inline-formula><mml:math id="inf81"><mml:mi>m</mml:mi></mml:math></inline-formula> original targets and for the extra characters the following distance was applied:<disp-formula id="equ2"><mml:math id="m2"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mtable columnalign="left left" columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mrow><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">f</mml:mi></mml:mrow><mml:mspace width="thinmathspace"/><mml:mspace width="thinmathspace"/><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mi>j</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>100</mml:mn><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mrow><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">h</mml:mi><mml:mi mathvariant="normal">e</mml:mi><mml:mi mathvariant="normal">r</mml:mi><mml:mi mathvariant="normal">w</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">s</mml:mi><mml:mi mathvariant="normal">e</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable><mml:mo fence="true" stretchy="true" symmetric="true"/></mml:mrow></mml:mrow></mml:mstyle></mml:math></disp-formula></p><p>For samples of up to 180 cells we compared the accuracy achieved using Neighbor Joining with an alternative approach using a parsimony method. We show that, while accuracy is consistently slightly higher using parsimony, the average time taken to reconstruct a tree of only 180 cells is on average ~52 hr compared to less than 1 s using Neighbor Joining (see <xref ref-type="fig" rid="fig2s1">Figure 2—figure supplement 1</xref>).</p></sec><sec id="s4-5-2"><title>Reconstructing lineage trees using FastTree</title><p>When inferring complete cell lineage trees in the simulations of SOLiD sequencing data (<inline-formula><mml:math id="inf82"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>N</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> = 65,536 cells), we used an heuristic method that approximates the Maximum Likelihood approach, implemented by the FastTree software (<xref ref-type="bibr" rid="bib26">Price et al., 2010</xref>). FastTree was chosen for its ability to infer trees from large alignments, consisting of tens of thousands of sequences, and for doing so very efficiently.</p></sec><sec id="s4-5-3"><title>Reconstructing lineage trees using maximum parsimony (PAUP*)</title><p>The use of parsimony for the cell lineage reconstruction of our simulations was not practical for the thousands of cells/taxa we consider. Nevertheless, to assess the relative performance of NJ and Maximum Parsimony in the context of lineage data, we compared the two methods using trees of variable size of randomly sampled cells, from 10 to 180 (<xref ref-type="fig" rid="fig2s1">Figure 2—figure supplement 1</xref>). We calculated the accuracy of lineage reconstruction with NJ and parsimony methods on 10 separate simulations, based on the mutational frequencies of FAST targets, four character states and a mutation rate of 0.1195 over 16 cell divisions. For the parsimony analysis, we used the Camin-Sokal model (i.e., irreversible mutated states) and a substitution matrix based on character states frequencies (as used in GESTALT).</p></sec></sec><sec id="s4-6"><title>Tree accuracy estimation</title><sec id="s4-6-1"><title>Robinson-Foulds related measure of accuracy</title><p>The accuracy of each cell-lineage reconstruction was determined by calculating a measure related to the Robinson-Foulds distance between the reference and the inferred trees. We counted the percentage of splits (sets of cells separated into two groups by a node in the tree) in the reference tree that were also found in the inferred tree. For this task we used the CompareTree software (CompareTree.pl is available at <ext-link ext-link-type="uri" xlink:href="http://www.microbesonline.org/fasttree/treecmp.html">http://www.microbesonline.org/fasttree/treecmp.html</ext-link>).</p></sec><sec id="s4-6-2"><title>Calculating false positives and false negatives</title><p>False positives (FP) and false negatives (FN) were calculated by comparing the reference tree (<inline-formula><mml:math id="inf83"><mml:mi>R</mml:mi></mml:math></inline-formula>) with the inferred tree (<inline-formula><mml:math id="inf84"><mml:mi>I</mml:mi></mml:math></inline-formula>) using the newick-tools software (<xref ref-type="bibr" rid="bib8">Flouri et al., 2018</xref>) using the –difftree command, which analyses the split differences between two trees. The options –filter_eq and –filter_gt were used to specify the number of cells <italic>n</italic> (or a given range) to be analysed (see the newick-tools reference for details).</p><p>False positives were measured by counting the proportion of cells that need to be pruned from a branch of the inferred tree to match a given branch of <italic>n</italic> cells in the reference tree. More formally, the false positives were estimated as follows (see <xref ref-type="fig" rid="fig9s1">Figure 9—figure supplement 1</xref>):</p><list list-type="order"><list-item><p>We extracted the <inline-formula><mml:math id="inf85"><mml:mi>x</mml:mi></mml:math></inline-formula> number of subtrees in <inline-formula><mml:math id="inf86"><mml:mi>R</mml:mi></mml:math></inline-formula> that contained <italic>n</italic> cells (subtrees <inline-formula><mml:math id="inf87"><mml:msubsup><mml:mi>R</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mi>x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>′</mml:mo></mml:msubsup></mml:math></inline-formula>)</p></list-item><list-item><p>Then for each <inline-formula><mml:math id="inf88"><mml:msup><mml:mi>R</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math></inline-formula> subtree we find the subtree from <inline-formula><mml:math id="inf89"><mml:mi>I</mml:mi></mml:math></inline-formula> (<inline-formula><mml:math id="inf90"><mml:msup><mml:mi>I</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math></inline-formula> subtree) that includes all the cells present in <inline-formula><mml:math id="inf91"><mml:msup><mml:mi>R</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math></inline-formula>. The FP is then calculated with the following equation:</p></list-item></list><p><disp-formula id="equ3"><label>(1)</label><mml:math id="m3"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>F</mml:mi><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>R</mml:mi><mml:mo>,</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mi>x</mml:mi></mml:mfrac><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>x</mml:mi></mml:mrow></mml:munderover><mml:mfrac><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msubsup><mml:mi>I</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy="false">]</mml:mo><mml:mo>−</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msubsup><mml:mi>R</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msubsup><mml:mi>I</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:mfrac></mml:mrow></mml:mstyle></mml:math></disp-formula>where [<inline-formula><mml:math id="inf92"><mml:msubsup><mml:mi>R</mml:mi><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msubsup></mml:math></inline-formula>] and [<inline-formula><mml:math id="inf93"><mml:msubsup><mml:mi>I</mml:mi><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msubsup></mml:math></inline-formula>] are the number of cells in trees <inline-formula><mml:math id="inf94"><mml:msubsup><mml:mi>R</mml:mi><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msubsup></mml:math></inline-formula> and <inline-formula><mml:math id="inf95"><mml:msubsup><mml:mi>I</mml:mi><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msubsup></mml:math></inline-formula> respectively.</p><p>False negatives were measured by counting the proportion of cells that need to be pruned from a branch of the reference tree to match a given branch of <italic>n</italic> cells in the inferred lineage tree. More formally, the false negatives were estimated as follows (see <xref ref-type="fig" rid="fig9s1">Figure 9—figure supplement 1</xref>):</p><list list-type="order"><list-item><p>We extracted the <inline-formula><mml:math id="inf96"><mml:mi>x</mml:mi></mml:math></inline-formula> number of subtrees from <inline-formula><mml:math id="inf97"><mml:mi>I</mml:mi></mml:math></inline-formula> that contained <italic>n</italic> cells (subtrees <inline-formula><mml:math id="inf98"><mml:msubsup><mml:mi>I</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mi>x</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>′</mml:mo></mml:msubsup></mml:math></inline-formula>).</p></list-item><list-item><p>Then for each <inline-formula><mml:math id="inf99"><mml:msup><mml:mi>I</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math></inline-formula> subtree we extracted the subtree from <inline-formula><mml:math id="inf100"><mml:mi>R</mml:mi></mml:math></inline-formula> (<inline-formula><mml:math id="inf101"><mml:msup><mml:mi>R</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math></inline-formula> subtree) that included all cells from the <inline-formula><mml:math id="inf102"><mml:msup><mml:mi>I</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math></inline-formula> tree. The FN is calculated then with the following equation:</p></list-item></list><p><disp-formula id="equ4"><label>(2)</label><mml:math id="m4"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>F</mml:mi><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>R</mml:mi><mml:mo>,</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mi>x</mml:mi></mml:mfrac><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>x</mml:mi></mml:mrow></mml:munderover><mml:mfrac><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msubsup><mml:mi>R</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy="false">]</mml:mo><mml:mo>−</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msubsup><mml:mi>I</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msubsup><mml:mi>R</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">′</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:mfrac></mml:mrow></mml:mstyle></mml:math></disp-formula>where [<inline-formula><mml:math id="inf103"><mml:msubsup><mml:mi>R</mml:mi><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msubsup></mml:math></inline-formula>] and [<inline-formula><mml:math id="inf104"><mml:msubsup><mml:mi>I</mml:mi><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msubsup></mml:math></inline-formula>] are the number of cells in trees <inline-formula><mml:math id="inf105"><mml:msubsup><mml:mi>R</mml:mi><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msubsup></mml:math></inline-formula> and <inline-formula><mml:math id="inf106"><mml:msubsup><mml:mi>I</mml:mi><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msubsup></mml:math></inline-formula> respectively.</p></sec><sec id="s4-6-3"><title>Quartet analysis</title><p>We measured the accuracy (percentage of correct splits) when reconstructing the relationships between groups of four granddaughter cells derived from a single grandmother, sampled after different numbers of cell division. We considered sets of 4 granddaughter cells (each cell represented as the array of targets with accumulated mutations) derived from their single most recent common ancestor. We reconstructed a tree using NJ, rooting the tree with an outgroup, represented by an array of unmutated targets. We calculated the percentage of splits from the reference tree also present in the inferred tree. In cases when a simulation had fewer than 1,000 cells (divisions 2–9) we considered all possible quartets. When there are more than 1,000 cells (divisions 10–16) we extracted 250 random 4 cell trees (total cells = 1000).</p></sec></sec></sec></body><back><ack id="ack"><title>Acknowledgements</title><p>We thank Sandrine Hughes and Benjamin Gillet for expert assistance in sequencing the CRISPR target arrays, Tomas Flouri for helping implement the false positives/negatives analysis, Ziheng Yang for advice on phylogenetic reconstruction, Je Hyuk Lee, Jessica Svedlund and Mats Nilsson for discussions on <italic>in situ</italic> sequencing, Nikos Konstantinides, Pierre Martinez, James Cotterell, Rosa Barrio, Michael Akam, Isaac Salazar-Ciudad and Richard Copley for critical comments on the manuscript, and the High Performance Computing platform at the UCL Department of Computer Science. This research was supported by a grant from the Human Frontier Science Programme (HFSP RGP0002/2016).</p></ack><sec id="s5" sec-type="additional-information"><title>Additional information</title><fn-group content-type="competing-interest"><title>Competing interests</title><fn fn-type="COI-statement" id="conf1"><p>No competing interests declared</p></fn></fn-group><fn-group content-type="author-contribution"><title>Author contributions</title><fn fn-type="con" id="con1"><p>Conceptualization, Data curation, Software, Formal analysis, Investigation, Visualization, Methodology, Writing—original draft, Writing—review and editing</p></fn><fn fn-type="con" id="con2"><p>Conceptualization, Resources, Investigation, Methodology, Writing—original draft, Writing—review and editing</p></fn><fn fn-type="con" id="con3"><p>Conceptualization, Supervision, Funding acquisition, Methodology, Writing—original draft, Project administration, Writing—review and editing</p></fn><fn fn-type="con" id="con4"><p>Conceptualization, Supervision, Funding acquisition, Methodology, Writing—original draft, Project administration, Writing—review and editing</p></fn></fn-group></sec><sec id="s6" sec-type="supplementary-material"><title>Additional files</title><supplementary-material id="supp1"><object-id pub-id-type="doi">10.7554/eLife.40292.018</object-id><label>Supplementary file 1.</label><caption><p>Supplementary Table 1. Proportion of mutated targets (target saturation) for each of the 32 Emx1.6 target variants, sampled at different developmental stages (embryos, L3 larvae, adults) and in the absence of Cas9 (untargeted). Targets 13, 17, 18, 21 and 23 were not analysed further because there were no good quality reads in the untargeted condition or because the targets showed a high proportion of sequencing errors. Supplementary Table 2. Proportion of mutated targets (target saturation) in the embryo after correcting for sequencing errors and estimated mutation rates per cell division, for the target variants showing the highest mutation rates. Supplementary Table 3. PCR primers used for preparation of the sequencing libraries. Forward primers (F) carry adapter sequences (uppercase), barcodes specific for each condition (underlined, BC1 to BC6), and sequences annealing to the spacers of the repeat construct (lowercase). Reverse primers (R) carry adapters (uppercase) and sequences annealing to the spacers of the repeat construct (lowercase); see <xref ref-type="fig" rid="fig3">Figure 3B</xref> and Materials and methods.</p></caption><media mime-subtype="octet-stream" mimetype="application" xlink:href="elife-40292-supp1-v1.ods"/></supplementary-material><supplementary-material id="transrepform"><object-id pub-id-type="doi">10.7554/eLife.40292.019</object-id><label>Transparent reporting form</label><media mime-subtype="docx" mimetype="application" xlink:href="elife-40292-transrepform-v1.docx"/></supplementary-material><sec id="s7" sec-type="data-availability"><title>Data availability</title><p>The sequencing data for the in vivo assessment of mutagenesis rates are available at: doi:10.5061/dryad.qb7r0d3. The scripts used to generate all the simulations used in this work, for the analysis of the sequencing reads and for the analysis of the GESTALT construct are available at the Github repository <ext-link ext-link-type="uri" xlink:href="https://github.com/irepansalvador/CRISPR_recorders_sims">https://github.com/irepansalvador/CRISPR_recorders_sims</ext-link> (doi: doi.org/10.5281/zenodo.1320964; copy archived at <ext-link ext-link-type="uri" xlink:href="https://github.com/elifesciences-publications/CRISPR_recorders_sims">https://github.com/elifesciences-publications/CRISPR_recorders_sims</ext-link>).</p><p>The following dataset was generated:</p><p><element-citation id="dataset1" publication-type="data" specific-use="isSupplementedBy"><person-group person-group-type="author"><name><surname>Salvador-Martínez</surname><given-names>I</given-names></name><name><surname>Grillo</surname><given-names>M</given-names></name><name><surname>Averof</surname><given-names>M</given-names></name><name><surname>Telford</surname><given-names>MJ</given-names></name></person-group><year iso-8601-date="2018">2018</year><data-title>Sequencing data from 'Is it possible to reconstruct an accurate cell lineage using CRISPR recorders?'</data-title><source>Dryad Digital Repository</source><pub-id assigning-authority="Dryad" pub-id-type="doi">10.5061/dryad.qb7r0d3</pub-id></element-citation></p></sec></sec><ref-list><title>References</title><ref id="bib1"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Afgan</surname> <given-names>E</given-names></name><name><surname>Baker</surname> <given-names>D</given-names></name><name><surname>van den Beek</surname> <given-names>M</given-names></name><name><surname>Blankenberg</surname> <given-names>D</given-names></name><name><surname>Bouvier</surname> <given-names>D</given-names></name><name><surname>Čech</surname> <given-names>M</given-names></name><name><surname>Chilton</surname> <given-names>J</given-names></name><name><surname>Clements</surname> <given-names>D</given-names></name><name><surname>Coraor</surname> <given-names>N</given-names></name><name><surname>Eberhard</surname> <given-names>C</given-names></name><name><surname>Grüning</surname> <given-names>B</given-names></name><name><surname>Guerler</surname> <given-names>A</given-names></name><name><surname>Hillman-Jackson</surname> <given-names>J</given-names></name><name><surname>Von Kuster</surname> <given-names>G</given-names></name><name><surname>Rasche</surname> <given-names>E</given-names></name><name><surname>Soranzo</surname> <given-names>N</given-names></name><name><surname>Turaga</surname> <given-names>N</given-names></name><name><surname>Taylor</surname> <given-names>J</given-names></name><name><surname>Nekrutenko</surname> <given-names>A</given-names></name><name><surname>Goecks</surname> <given-names>J</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>The galaxy platform for accessible, reproducible and collaborative biomedical analyses: 2016 update</article-title><source>Nucleic Acids Research</source><volume>44</volume><fpage>W3</fpage><lpage>W10</lpage><pub-id pub-id-type="doi">10.1093/nar/gkw343</pub-id><pub-id pub-id-type="pmid">27137889</pub-id></element-citation></ref><ref id="bib2"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Alemany</surname> <given-names>A</given-names></name><name><surname>Florescu</surname> <given-names>M</given-names></name><name><surname>Baron</surname> <given-names>CS</given-names></name><name><surname>Peterson-Maduro</surname> <given-names>J</given-names></name><name><surname>van Oudenaarden</surname> <given-names>A</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Whole-organism clone tracing using single-cell sequencing</article-title><source>Nature</source><volume>556</volume><fpage>108</fpage><lpage>112</lpage><pub-id pub-id-type="doi">10.1038/nature25969</pub-id><pub-id pub-id-type="pmid">29590089</pub-id></element-citation></ref><ref id="bib3"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Allen</surname> <given-names>F</given-names></name><name><surname>Crepaldi</surname> <given-names>L</given-names></name><name><surname>Alsinet</surname> <given-names>C</given-names></name><name><surname>Strong</surname> <given-names>AJ</given-names></name><name><surname>Kleshchevnikov</surname> <given-names>V</given-names></name><name><surname>De Angeli</surname> <given-names>P</given-names></name><name><surname>Páleníková</surname> <given-names>P</given-names></name><name><surname>Khodak</surname> <given-names>A</given-names></name><name><surname>Kiselev</surname> <given-names>V</given-names></name><name><surname>Kosicki</surname> <given-names>M</given-names></name><name><surname>Bassett</surname> <given-names>AR</given-names></name><name><surname>Harding</surname> <given-names>H</given-names></name><name><surname>Galanty</surname> <given-names>Y</given-names></name><name><surname>Muñoz-Martínez</surname> <given-names>F</given-names></name><name><surname>Metzakopian</surname> <given-names>E</given-names></name><name><surname>Jackson</surname> <given-names>SP</given-names></name><name><surname>Parts</surname> <given-names>L</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Predicting the mutations generated by repair of Cas9-induced double-strand breaks</article-title><source>Nature Biotechnology</source><volume>37</volume><fpage>64</fpage><lpage>72</lpage><pub-id pub-id-type="doi">10.1038/nbt.4317</pub-id></element-citation></ref><ref id="bib4"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Attardi</surname> <given-names>A</given-names></name><name><surname>Fulton</surname> <given-names>T</given-names></name><name><surname>Florescu</surname> <given-names>M</given-names></name><name><surname>Shah</surname> <given-names>G</given-names></name><name><surname>Muresan</surname> <given-names>L</given-names></name><name><surname>Lenz</surname> <given-names>MO</given-names></name><name><surname>Lancaster</surname> <given-names>C</given-names></name><name><surname>Huisken</surname> <given-names>J</given-names></name><name><surname>van Oudenaarden</surname> <given-names>A</given-names></name><name><surname>Steventon</surname> <given-names>B</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Neuromesodermal progenitors are a conserved source of spinal cord with divergent growth dynamics</article-title><source>Development</source><volume>145</volume><elocation-id>dev166728</elocation-id><pub-id pub-id-type="doi">10.1242/dev.166728</pub-id><pub-id pub-id-type="pmid">30333213</pub-id></element-citation></ref><ref id="bib5"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bateman</surname> <given-names>JR</given-names></name><name><surname>Lee</surname> <given-names>AM</given-names></name><name><surname>Wu</surname> <given-names>CT</given-names></name></person-group><year iso-8601-date="2006">2006</year><article-title>Site-specific transformation of <italic>Drosophila</italic> via phiC31 integrase-mediated cassette exchange</article-title><source>Genetics</source><volume>173</volume><fpage>769</fpage><lpage>777</lpage><pub-id pub-id-type="doi">10.1534/genetics.106.056945</pub-id><pub-id pub-id-type="pmid">16547094</pub-id></element-citation></ref><ref id="bib6"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Chen</surname> <given-names>W</given-names></name><name><surname>McKenna</surname> <given-names>A</given-names></name><name><surname>Schreiber</surname> <given-names>J</given-names></name><name><surname>Yin</surname> <given-names>Y</given-names></name><name><surname>Agarwal</surname> <given-names>V</given-names></name><name><surname>Noble</surname> <given-names>WS</given-names></name><name><surname>Shendure</surname> <given-names>J</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Massively parallel profiling and predictive modeling of the outcomes of CRISPR/Cas9-mediated double-strand break repair</article-title><source>bioRxiv</source><pub-id pub-id-type="doi">10.1101/481069</pub-id></element-citation></ref><ref id="bib7"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Felsenstein</surname> <given-names>J</given-names></name></person-group><year iso-8601-date="1981">1981</year><article-title>A likelihood approach to character weighting and what it tells us about parsimony and compatibility</article-title><source>Biological Journal of the Linnean Society</source><volume>16</volume><fpage>183</fpage><lpage>196</lpage><pub-id pub-id-type="doi">10.1111/j.1095-8312.1981.tb01847.x</pub-id></element-citation></ref><ref id="bib8"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Flouri</surname> <given-names>T</given-names></name><name><surname>Stamatakis</surname> <given-names>A</given-names></name><name><surname>Kapli</surname> <given-names>P</given-names></name></person-group><year iso-8601-date="2018">2018</year><data-title>newick-tools: a novel software for simulating and processing phylogenetic trees</data-title><source>GitHub</source><ext-link ext-link-type="uri" xlink:href="https://github.com/xflouris/newick-tools">https://github.com/xflouris/newick-tools</ext-link></element-citation></ref><ref id="bib9"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Foe</surname> <given-names>VE</given-names></name></person-group><year iso-8601-date="1989">1989</year><article-title>Mitotic domains reveal early commitment of cells in <italic>Drosophila</italic> embryos</article-title><source>Development</source><volume>107</volume><fpage>1</fpage><lpage>22</lpage><pub-id pub-id-type="pmid">2516798</pub-id></element-citation></ref><ref id="bib10"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Frieda</surname> <given-names>KL</given-names></name><name><surname>Linton</surname> <given-names>JM</given-names></name><name><surname>Hormoz</surname> <given-names>S</given-names></name><name><surname>Choi</surname> <given-names>J</given-names></name><name><surname>Chow</surname> <given-names>KK</given-names></name><name><surname>Singer</surname> <given-names>ZS</given-names></name><name><surname>Budde</surname> <given-names>MW</given-names></name><name><surname>Elowitz</surname> <given-names>MB</given-names></name><name><surname>Cai</surname> <given-names>L</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Synthetic recording and <italic>in situ</italic> readout of lineage information in single cells</article-title><source>Nature</source><volume>541</volume><fpage>107</fpage><lpage>111</lpage><pub-id pub-id-type="doi">10.1038/nature20777</pub-id><pub-id pub-id-type="pmid">27869821</pub-id></element-citation></ref><ref id="bib11"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Frumkin</surname> <given-names>D</given-names></name><name><surname>Wasserstrom</surname> <given-names>A</given-names></name><name><surname>Kaplan</surname> <given-names>S</given-names></name><name><surname>Feige</surname> <given-names>U</given-names></name><name><surname>Shapiro</surname> <given-names>E</given-names></name></person-group><year iso-8601-date="2005">2005</year><article-title>Genomic variability within an organism exposes its cell lineage tree</article-title><source>PLOS Computational Biology</source><volume>1</volume><elocation-id>e50</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pcbi.0010050</pub-id><pub-id pub-id-type="pmid">16261192</pub-id></element-citation></ref><ref id="bib12"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fu</surname> <given-names>Y</given-names></name><name><surname>Sander</surname> <given-names>JD</given-names></name><name><surname>Reyon</surname> <given-names>D</given-names></name><name><surname>Cascio</surname> <given-names>VM</given-names></name><name><surname>Joung</surname> <given-names>JK</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Improving CRISPR-Cas nuclease specificity using truncated guide RNAs</article-title><source>Biotechnology</source><volume>32</volume><fpage>279</fpage><lpage>284</lpage><pub-id pub-id-type="doi">10.1038/nbt.2808</pub-id></element-citation></ref><ref id="bib13"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Hartenstein</surname> <given-names>V</given-names></name></person-group><year iso-8601-date="1993">1993</year><source>Atlas of Drosophila Development</source><publisher-name>Cold Spring Harbor Laboratory Press</publisher-name></element-citation></ref><ref id="bib14"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hsu</surname> <given-names>PD</given-names></name><name><surname>Scott</surname> <given-names>DA</given-names></name><name><surname>Weinstein</surname> <given-names>JA</given-names></name><name><surname>Ran</surname> <given-names>FA</given-names></name><name><surname>Konermann</surname> <given-names>S</given-names></name><name><surname>Agarwala</surname> <given-names>V</given-names></name><name><surname>Li</surname> <given-names>Y</given-names></name><name><surname>Fine</surname> <given-names>EJ</given-names></name><name><surname>Wu</surname> <given-names>X</given-names></name><name><surname>Shalem</surname> <given-names>O</given-names></name><name><surname>Cradick</surname> <given-names>TJ</given-names></name><name><surname>Marraffini</surname> <given-names>LA</given-names></name><name><surname>Bao</surname> <given-names>G</given-names></name><name><surname>Zhang</surname> <given-names>F</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>DNA targeting specificity of RNA-guided Cas9 nucleases</article-title><source>Nature Biotechnology</source><volume>31</volume><fpage>827</fpage><lpage>832</lpage><pub-id pub-id-type="doi">10.1038/nbt.2647</pub-id><pub-id pub-id-type="pmid">23873081</pub-id></element-citation></ref><ref id="bib15"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Junker</surname> <given-names>JP</given-names></name><name><surname>Spanjaard</surname> <given-names>B</given-names></name><name><surname>Peterson-Maduro</surname> <given-names>J</given-names></name><name><surname>Alemany</surname> <given-names>A</given-names></name><name><surname>Hu</surname> <given-names>B</given-names></name><name><surname>Florescu</surname> <given-names>M</given-names></name><name><surname>van Oudenaarden</surname> <given-names>A</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Massively parallel whole-organism lineage tracing using CRISPR/Cas9 induced genetic scars</article-title><source>Biorxiv</source><pub-id pub-id-type="doi">10.1101/205971</pub-id></element-citation></ref><ref id="bib16"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kalhor</surname> <given-names>R</given-names></name><name><surname>Kalhor</surname> <given-names>K</given-names></name><name><surname>Mejia</surname> <given-names>L</given-names></name><name><surname>Leeper</surname> <given-names>K</given-names></name><name><surname>Graveline</surname> <given-names>A</given-names></name><name><surname>Mali</surname> <given-names>P</given-names></name><name><surname>Church</surname> <given-names>GM</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Developmental barcoding of whole mouse via homing CRISPR</article-title><source>Science</source><volume>361</volume><elocation-id>eaat9804</elocation-id><pub-id pub-id-type="doi">10.1126/science.aat9804</pub-id><pub-id pub-id-type="pmid">30093604</pub-id></element-citation></ref><ref id="bib17"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Kane</surname> <given-names>DA</given-names></name></person-group><year iso-8601-date="1999">1999</year><chapter-title>Cell cycles and development in the embryonic zebrafish</chapter-title><person-group person-group-type="editor"><name><surname>Detrich</surname> <given-names>H. W</given-names></name><name><surname>Westerfield</surname> <given-names>M</given-names></name><name><surname>Zon</surname> <given-names>L. I</given-names></name></person-group><source>Methods in Cell Biology Series</source><publisher-name>Academic Press</publisher-name></element-citation></ref><ref id="bib18"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ke</surname> <given-names>R</given-names></name><name><surname>Mignardi</surname> <given-names>M</given-names></name><name><surname>Pacureanu</surname> <given-names>A</given-names></name><name><surname>Svedlund</surname> <given-names>J</given-names></name><name><surname>Botling</surname> <given-names>J</given-names></name><name><surname>Wählby</surname> <given-names>C</given-names></name><name><surname>Nilsson</surname> <given-names>M</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title><italic>In situ</italic> sequencing for RNA analysis in preserved tissue and cells</article-title><source>Nature Methods</source><volume>10</volume><fpage>857</fpage><lpage>860</lpage><pub-id pub-id-type="doi">10.1038/nmeth.2563</pub-id><pub-id pub-id-type="pmid">23852452</pub-id></element-citation></ref><ref id="bib19"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kojima</surname> <given-names>Y</given-names></name><name><surname>Tam</surname> <given-names>OH</given-names></name><name><surname>Tam</surname> <given-names>PP</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Timing of developmental events in the early mouse embryo</article-title><source>Seminars in Cell &amp; Developmental Biology</source><volume>34</volume><fpage>65</fpage><lpage>75</lpage><pub-id pub-id-type="doi">10.1016/j.semcdb.2014.06.010</pub-id><pub-id pub-id-type="pmid">24954643</pub-id></element-citation></ref><ref id="bib20"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lee</surname> <given-names>JH</given-names></name><name><surname>Daugharthy</surname> <given-names>ER</given-names></name><name><surname>Scheiman</surname> <given-names>J</given-names></name><name><surname>Kalhor</surname> <given-names>R</given-names></name><name><surname>Yang</surname> <given-names>JL</given-names></name><name><surname>Ferrante</surname> <given-names>TC</given-names></name><name><surname>Terry</surname> <given-names>R</given-names></name><name><surname>Jeanty</surname> <given-names>SS</given-names></name><name><surname>Li</surname> <given-names>C</given-names></name><name><surname>Amamoto</surname> <given-names>R</given-names></name><name><surname>Peters</surname> <given-names>DT</given-names></name><name><surname>Turczyk</surname> <given-names>BM</given-names></name><name><surname>Marblestone</surname> <given-names>AH</given-names></name><name><surname>Inverso</surname> <given-names>SA</given-names></name><name><surname>Bernard</surname> <given-names>A</given-names></name><name><surname>Mali</surname> <given-names>P</given-names></name><name><surname>Rios</surname> <given-names>X</given-names></name><name><surname>Aach</surname> <given-names>J</given-names></name><name><surname>Church</surname> <given-names>GM</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Highly multiplexed subcellular RNA sequencing <italic>in situ</italic></article-title><source>Science</source><volume>343</volume><fpage>1360</fpage><lpage>1363</lpage><pub-id pub-id-type="doi">10.1126/science.1250212</pub-id><pub-id pub-id-type="pmid">24578530</pub-id></element-citation></ref><ref id="bib21"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lee</surname> <given-names>JH</given-names></name><name><surname>Daugharthy</surname> <given-names>ER</given-names></name><name><surname>Scheiman</surname> <given-names>J</given-names></name><name><surname>Kalhor</surname> <given-names>R</given-names></name><name><surname>Ferrante</surname> <given-names>TC</given-names></name><name><surname>Terry</surname> <given-names>R</given-names></name><name><surname>Turczyk</surname> <given-names>BM</given-names></name><name><surname>Yang</surname> <given-names>JL</given-names></name><name><surname>Lee</surname> <given-names>HS</given-names></name><name><surname>Aach</surname> <given-names>J</given-names></name><name><surname>Zhang</surname> <given-names>K</given-names></name><name><surname>Church</surname> <given-names>GM</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Fluorescent <italic>in situ</italic> sequencing (FISSEQ) of RNA for gene expression profiling in intact cells and tissues</article-title><source>Nature Protocols</source><volume>10</volume><fpage>442</fpage><lpage>458</lpage><pub-id pub-id-type="doi">10.1038/nprot.2014.191</pub-id><pub-id pub-id-type="pmid">25675209</pub-id></element-citation></ref><ref id="bib22"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Lehner</surname> <given-names>CF</given-names></name><name><surname>Jacobs</surname> <given-names>HW</given-names></name><name><surname>Sauer</surname> <given-names>K</given-names></name><name><surname>Meyer</surname> <given-names>CA</given-names></name></person-group><year iso-8601-date="2001">2001</year><chapter-title>Regulation of the embryonic cell proliferation by <italic>Drosophila</italic> cyclin D and cyclin E complexes</chapter-title><person-group person-group-type="editor"><name><surname>Bock G</surname> <given-names>R</given-names></name><name><surname>Cardew</surname> <given-names>G</given-names></name><name><surname>Goode</surname> <given-names>J. A</given-names></name></person-group><source>The Cell Cycle and Development</source><volume>237</volume><publisher-loc>Wiley, Chichester</publisher-loc><publisher-name>John Wiley and Sons</publisher-name><fpage>43</fpage><lpage>54</lpage><pub-id pub-id-type="doi">10.1002/0470846666.ch5</pub-id></element-citation></ref><ref id="bib23"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>McKenna</surname> <given-names>A</given-names></name><name><surname>Findlay</surname> <given-names>GM</given-names></name><name><surname>Gagnon</surname> <given-names>JA</given-names></name><name><surname>Horwitz</surname> <given-names>MS</given-names></name><name><surname>Schier</surname> <given-names>AF</given-names></name><name><surname>Shendure</surname> <given-names>J</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Whole-organism lineage tracing by combinatorial and cumulative genome editing</article-title><source>Science</source><volume>353</volume><elocation-id>aaf7907</elocation-id><pub-id pub-id-type="doi">10.1126/science.aaf7907</pub-id><pub-id pub-id-type="pmid">27229144</pub-id></element-citation></ref><ref id="bib24"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Perli</surname> <given-names>SD</given-names></name><name><surname>Cui</surname> <given-names>CH</given-names></name><name><surname>Lu</surname> <given-names>TK</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Continuous genetic recording with self-targeting CRISPR-Cas in human cells</article-title><source>Science</source><volume>353</volume><elocation-id>aag0511</elocation-id><pub-id pub-id-type="doi">10.1126/science.aag0511</pub-id><pub-id pub-id-type="pmid">27540006</pub-id></element-citation></ref><ref id="bib25"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Port</surname> <given-names>F</given-names></name><name><surname>Chen</surname> <given-names>HM</given-names></name><name><surname>Lee</surname> <given-names>T</given-names></name><name><surname>Bullock</surname> <given-names>SL</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Optimized CRISPR/Cas tools for efficient germline and somatic genome engineering in Drosophila</article-title><source>PNAS</source><volume>111</volume><fpage>E2967</fpage><lpage>E2976</lpage><pub-id pub-id-type="doi">10.1073/pnas.1405500111</pub-id><pub-id pub-id-type="pmid">25002478</pub-id></element-citation></ref><ref id="bib26"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Price</surname> <given-names>MN</given-names></name><name><surname>Dehal</surname> <given-names>PS</given-names></name><name><surname>Arkin</surname> <given-names>AP</given-names></name></person-group><year iso-8601-date="2010">2010</year><article-title>FastTree 2--approximately maximum-likelihood trees for large alignments</article-title><source>PLOS ONE</source><volume>5</volume><elocation-id>e9490</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pone.0009490</pub-id><pub-id pub-id-type="pmid">20224823</pub-id></element-citation></ref><ref id="bib27"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Raj</surname> <given-names>B</given-names></name><name><surname>Wagner</surname> <given-names>DE</given-names></name><name><surname>McKenna</surname> <given-names>A</given-names></name><name><surname>Pandey</surname> <given-names>S</given-names></name><name><surname>Klein</surname> <given-names>AM</given-names></name><name><surname>Shendure</surname> <given-names>J</given-names></name><name><surname>Gagnon</surname> <given-names>JA</given-names></name><name><surname>Schier</surname> <given-names>AF</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Simultaneous single-cell profiling of lineages and cell types in the vertebrate brain</article-title><source>Nature Biotechnology</source><volume>36</volume><fpage>442</fpage><lpage>450</lpage><pub-id pub-id-type="doi">10.1038/nbt.4103</pub-id><pub-id pub-id-type="pmid">29608178</pub-id></element-citation></ref><ref id="bib28"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Robinson</surname> <given-names>DF</given-names></name><name><surname>Foulds</surname> <given-names>LR</given-names></name></person-group><year iso-8601-date="1981">1981</year><article-title>Comparison of phylogenetic trees</article-title><source>Mathematical Biosciences</source><volume>53</volume><fpage>131</fpage><lpage>147</lpage><pub-id pub-id-type="doi">10.1016/0025-5564(81)90043-2</pub-id></element-citation></ref><ref id="bib29"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Saitou</surname> <given-names>N</given-names></name><name><surname>Nei</surname> <given-names>M</given-names></name></person-group><year iso-8601-date="1987">1987</year><article-title>The neighbor-joining method: a new method for reconstructing phylogenetic trees</article-title><source>Molecular Biology and Evolution</source><volume>4</volume><fpage>406</fpage><lpage>425</lpage><pub-id pub-id-type="doi">10.1093/oxfordjournals.molbev.a040454</pub-id><pub-id pub-id-type="pmid">3447015</pub-id></element-citation></ref><ref id="bib30"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Salipante</surname> <given-names>SJ</given-names></name><name><surname>Horwitz</surname> <given-names>MS</given-names></name></person-group><year iso-8601-date="2006">2006</year><article-title>Phylogenetic fate mapping</article-title><source>PNAS</source><volume>103</volume><fpage>5448</fpage><lpage>5453</lpage><pub-id pub-id-type="doi">10.1073/pnas.0601265103</pub-id><pub-id pub-id-type="pmid">16569691</pub-id></element-citation></ref><ref id="bib31"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Salvador-Martínez</surname> <given-names>I</given-names></name></person-group><year iso-8601-date="2018">2018</year><data-title><italic>CRISPR_recorders_sims</italic></data-title><source>Github</source><version designator="3.1.0">v3.1.0</version><ext-link ext-link-type="uri" xlink:href="https://github.com/irepansalvador/CRISPR_recorders_sims">https://github.com/irepansalvador/CRISPR_recorders_sims</ext-link></element-citation></ref><ref id="bib32"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Schmidt</surname> <given-names>ST</given-names></name><name><surname>Zimmerman</surname> <given-names>SM</given-names></name><name><surname>Wang</surname> <given-names>J</given-names></name><name><surname>Kim</surname> <given-names>SK</given-names></name><name><surname>Quake</surname> <given-names>SR</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Quantitative analysis of synthetic cell lineage tracing using nuclease barcoding</article-title><source>ACS Synthetic Biology</source><volume>6</volume><fpage>936</fpage><lpage>942</lpage><pub-id pub-id-type="doi">10.1021/acssynbio.6b00309</pub-id><pub-id pub-id-type="pmid">28264564</pub-id></element-citation></ref><ref id="bib33"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sender</surname> <given-names>R</given-names></name><name><surname>Fuchs</surname> <given-names>S</given-names></name><name><surname>Milo</surname> <given-names>R</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Revised estimates for the number of human and bacteria cells in the body</article-title><source>PLOS Biology</source><volume>14</volume><elocation-id>e1002533</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pbio.1002533</pub-id><pub-id pub-id-type="pmid">27541692</pub-id></element-citation></ref><ref id="bib34"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Shen</surname> <given-names>MW</given-names></name><name><surname>Arbab</surname> <given-names>M</given-names></name><name><surname>Hsu</surname> <given-names>JY</given-names></name><name><surname>Worstell</surname> <given-names>D</given-names></name><name><surname>Culbertson</surname> <given-names>SJ</given-names></name><name><surname>Krabbe</surname> <given-names>O</given-names></name><name><surname>Cassa</surname> <given-names>CA</given-names></name><name><surname>Liu</surname> <given-names>DR</given-names></name><name><surname>Gifford</surname> <given-names>DK</given-names></name><name><surname>Sherwood</surname> <given-names>RI</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Predictable and precise template-free CRISPR editing of pathogenic variants</article-title><source>Nature</source><volume>563</volume><fpage>646</fpage><lpage>651</lpage><pub-id pub-id-type="doi">10.1038/s41586-018-0686-x</pub-id><pub-id pub-id-type="pmid">30405244</pub-id></element-citation></ref><ref id="bib35"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Spanjaard</surname> <given-names>B</given-names></name><name><surname>Hu</surname> <given-names>B</given-names></name><name><surname>Mitic</surname> <given-names>N</given-names></name><name><surname>Olivares-Chauvet</surname> <given-names>P</given-names></name><name><surname>Janjuha</surname> <given-names>S</given-names></name><name><surname>Ninov</surname> <given-names>N</given-names></name><name><surname>Junker</surname> <given-names>JP</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Simultaneous lineage tracing and cell-type identification using CRISPR/Cas9-induced genetic scars</article-title><source>Nature Biotechnology</source><volume>2018</volume><fpage>469</fpage><lpage>473</lpage><pub-id pub-id-type="doi">10.1038/nbt.4124</pub-id></element-citation></ref><ref id="bib36"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Swofford</surname> <given-names>DL</given-names></name></person-group><year iso-8601-date="2017">2017</year><source>PAUP* Phylogenetic Analysis Using Parsimony (*and Other Methods)</source><version designator="4.0a">4.0a</version><publisher-loc>Sunderland, Massachusetts</publisher-loc><publisher-name>Sinauer Associates</publisher-name></element-citation></ref><ref id="bib37"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Valouev</surname> <given-names>A</given-names></name><name><surname>Ichikawa</surname> <given-names>J</given-names></name><name><surname>Tonthat</surname> <given-names>T</given-names></name><name><surname>Stuart</surname> <given-names>J</given-names></name><name><surname>Ranade</surname> <given-names>S</given-names></name><name><surname>Peckham</surname> <given-names>H</given-names></name><name><surname>Zeng</surname> <given-names>K</given-names></name><name><surname>Malek</surname> <given-names>JA</given-names></name><name><surname>Costa</surname> <given-names>G</given-names></name><name><surname>McKernan</surname> <given-names>K</given-names></name><name><surname>Sidow</surname> <given-names>A</given-names></name><name><surname>Fire</surname> <given-names>A</given-names></name><name><surname>Johnson</surname> <given-names>SM</given-names></name></person-group><year iso-8601-date="2008">2008</year><article-title>A high-resolution, nucleosome position map of <italic>C. elegans</italic> reveals a lack of universal sequence-dictated positioning</article-title><source>Genome Research</source><volume>18</volume><fpage>1051</fpage><lpage>1063</lpage><pub-id pub-id-type="doi">10.1101/gr.076463.108</pub-id><pub-id pub-id-type="pmid">18477713</pub-id></element-citation></ref><ref id="bib38"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>van Overbeek</surname> <given-names>M</given-names></name><name><surname>Capurso</surname> <given-names>D</given-names></name><name><surname>Carter</surname> <given-names>MM</given-names></name><name><surname>Thompson</surname> <given-names>MS</given-names></name><name><surname>Frias</surname> <given-names>E</given-names></name><name><surname>Russ</surname> <given-names>C</given-names></name><name><surname>Reece-Hoyes</surname> <given-names>JS</given-names></name><name><surname>Nye</surname> <given-names>C</given-names></name><name><surname>Gradia</surname> <given-names>S</given-names></name><name><surname>Vidal</surname> <given-names>B</given-names></name><name><surname>Zheng</surname> <given-names>J</given-names></name><name><surname>Hoffman</surname> <given-names>GR</given-names></name><name><surname>Fuller</surname> <given-names>CK</given-names></name><name><surname>May</surname> <given-names>AP</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>DNA repair profiling reveals nonrandom outcomes at Cas9-Mediated breaks</article-title><source>Molecular Cell</source><volume>63</volume><fpage>633</fpage><lpage>646</lpage><pub-id pub-id-type="doi">10.1016/j.molcel.2016.06.037</pub-id><pub-id pub-id-type="pmid">27499295</pub-id></element-citation></ref><ref id="bib39"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Vu</surname> <given-names>GTH</given-names></name><name><surname>Cao</surname> <given-names>HX</given-names></name><name><surname>Fauser</surname> <given-names>F</given-names></name><name><surname>Reiss</surname> <given-names>B</given-names></name><name><surname>Puchta</surname> <given-names>H</given-names></name><name><surname>Schubert</surname> <given-names>I</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Endogenous sequence patterns predispose the repair modes of CRISPR/Cas9-induced DNA double-stranded breaks in <italic>arabidopsis thaliana</italic></article-title><source>The Plant Journal : For Cell and Molecular Biology</source><volume>92</volume><fpage>57</fpage><lpage>67</lpage><pub-id pub-id-type="doi">10.1111/tpj.13634</pub-id><pub-id pub-id-type="pmid">28696528</pub-id></element-citation></ref><ref id="bib40"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zalokar</surname> <given-names>M</given-names></name><name><surname>Erk</surname> <given-names>I</given-names></name></person-group><year iso-8601-date="1976">1976</year><article-title>Division and migration of nuclei during early embryogenesis of <italic>Drosophila melanogaster</italic></article-title><source>Journal De Microscopie Et De Biologie Cellulaire</source><volume>25</volume></element-citation></ref></ref-list></back><sub-article article-type="decision-letter" id="SA1"><front-stub><article-id pub-id-type="doi">10.7554/eLife.40292.023</article-id><title-group><article-title>Decision letter</article-title></title-group><contrib-group><contrib contrib-type="editor"><name><surname>Hsu</surname><given-names>Patrick</given-names></name><role>Reviewing Editor</role><aff><institution>Salk Institute for Biological Studies</institution><country>United States</country></aff></contrib></contrib-group></front-stub><body><boxed-text><p>In the interests of transparency, eLife includes the editorial decision letter, peer reviews, and accompanying author responses.</p></boxed-text><p>[<bold>Editorial note:</bold> This article has been through an editorial process in which the authors decide how to respond to the issues raised during peer review. The Reviewing Editor's assessment is that all the issues have been addressed.]</p><p><italic>Acceptance notification:</italic></p><p>Prof Telford and colleagues have greatly improved their thoughtful manuscript exploring the limitations and key experimental/analytical parameters of CRISPR-based recorders for lineage tracing, and appropriately addressed the reviewers' comments. Importantly, this study now includes an expanded assessment of lineage accuracy, false positive and negative reconstruction events, and choice of cell lineage inference method. This is a very useful addition to the field that informs optimized design of next-generation CRISPR recorders.</p><p><italic>Decision letter after peer review:</italic></p><p>Thank you for submitting your article &quot;Is it possible to reconstruct an accurate cell lineage using CRISPR recorders?&quot; for consideration by <italic>eLife</italic>. Your article has been reviewed by three peer reviewers, one of whom is a guest Reviewing Editor, and the evaluation has been overseen by Aviv Regev as the Senior Editor. The following individuals involved in review of your submission have agreed to reveal their identity: Aaron McKenna and Jay Shendure co-reviewed as Reviewer #3. The other reviewers remain anonymous.</p><p>The Reviewing Editor has highlighted the concerns that require revision and/or responses, and we have included the separate reviews below for your consideration. If you have any questions, please do not hesitate to contact us.</p><p>As you will see, the reviewers agree this work is a valuable addition to the rapidly growing field of CRISPR recorders and lineage tracing. They also each raise concerns about the results presented and their interpretation. In particular, there was clear consensus about the appropriate definition of and requirements for &quot;accurate&quot; lineage reconstruction, justification of the tree reconstruction algorithms used, and the methodologies used for analysis of editing in <italic>Drosophila</italic> target arrays. Reviewer 2 also has specific suggestions for the title. We hope these points will be straightforward to assess in a revised manuscript.</p><p>Separate reviews (please respond to each point):</p><p><italic>Reviewer #1:</italic> </p><p>There has been an explosion in CRISPR lineage tracing studies over the past few years. However, assessing the &quot;accuracy&quot; of these reported lineage reconstructions is difficult because the correct lineage is typically unknown. In this study, the authors primarily use computational approaches, along with some experimental data in <italic>Drosophila</italic> embryos, to assess various parameters that affect reconstruction accuracy, such as mutation rate, cell division rate, mutational diversity, and others.</p><p>Some thoughts for the authors to consider: From a practical perspective, what is accurate enough? In an experiment where the &quot;real&quot; tree is unknown, how do the investigators determine the appropriate parameters? Are some CRISPR recorder designs fundamentally better than others, and does this study suggest a better approach?</p><p>Major comments:</p><p>1) Recently, there was a systematic follow up to van Overbeek et al., 2016, by Leopold Parts at the Sanger (Allen BioRxiv 2018), which used a large dataset to provide an indel distribution prediction tool. It would be very interesting to consider this for specific target sequences, and discuss &quot;optimized&quot; spacer sequences for CRISPR recorders that have higher mutational diversity than others.</p><p>2) The rationale for assuming that CRISPR recorders generate irreversible target mutations is unclear. For example, there can be a &quot;back rate&quot; where a mutated target that creates a single base indel can still be recognized by Cas9 after a cell division.</p><p>3) Why is neighbor-joining chosen over parsimony (and over several other possible algorithms?) This should be elaborated on. Can the authors leverage their insights to improve these reconstruction algorithms to specifically address the challenges of CRISPR recorders?</p><p>4) The chosen definition of &quot;accuracy&quot; seems to be problematic because it does not generally discriminate between false positive and false negative reconstruction events. This is briefly considered in Figure 7 but should be expanded.</p><p>5) The authors show that setting the correct mutation rate matters. How can mutation rates be matched to the rate of cell division when the rate or interval of cell divisions is unknown/itself variable (e.g. in a tumor)? This would be worth discussing.</p><p><italic>Reviewer #2:</italic> </p><p>The manuscript &quot;Is it possible to reconstruct an accurate cell lineage using CRISPR recorders?&quot; uses simulations and some experimental data to conduct a thorough exploration of the parameters governing the accuracy of CRISPR lineage tracing. They define and sweep four key parameters for two types of CRISPR recorders: number of targets, mutation rate, mutational character states, and dropouts. This work is important and valuable to a growing community exploring the potential of CRISPR recorders. It provides a path for future optimization of these type of lineage tracing tools. For the most part, the writing and figures are clear and informative. I have five major concerns listed below.</p><p>1) The provocative title in the form of a question is somewhat misleading – is the answer yes? The manuscript doesn't explicitly answer this question. I would suggest a more accurate title, for example &quot;design specifications for more accurate CRISPR recorders.&quot;</p><p>2) I have two concerns with the term &quot;accuracy.&quot;</p><p>First concern: The authors should be explicit upfront about their definition of the term accuracy, which includes both false positives and false negatives. I would argue that false positives (wrong branchpoints) are worse than false negatives (i.e. missing branchpoints). Can't an &quot;accurate&quot; tree have missing branchpoints but no wrong branchpoints? The authors briefly describe this distinction, but only at the very end of the Results section and then calculate these subscores of &quot;accuracy&quot; only for the SOLID sequencing approach. I would appreciate a longer discussion of this definition and scoring at the beginning of the results, and FP/FN calculated and reported for all simulations.</p><p>Second concern: Generally speaking, how accurate do we need CRISPR recorders to be? The authors set a high bar: complete and accurate lineage tracing of a 65,000 cell tree. Is 4% or 14% (the final &quot;scores&quot; given to MEMOIR and GESTALT) good enough for many scientific applications? It is certainly better than nearly all existing lineage tracing techniques, from which we have learned a great deal about biology. I would appreciate a discussion of why 100% complete and accurate trees are such an important goal, and what we can still learn from less accurate trees.</p><p>3) I am concerned about three library prep or filtering steps in the sequencing of the <italic>Drosophila</italic> target site array that are not clearly explained in the text, which may reduce the number of character states used in all following simulations:</p><p>a) To call character states – why only use 9bp flanking the target site instead of simply aligning each read to unedited sites? I would assume that this would eliminate some character states.</p><p>b) If I understand Figure 4A, the authors use a primer that sits directly on the PAM -mutational outcomes that disrupt any bases within the PAM presumably would not be captured by the PCR and sequencing. Can the authors discuss the impact of this?</p><p>c) Why merge 140 rare character states into a shared state (state 60)? This would obviously lead to tree errors. Why not treat these just as all other character states? The authors write that this was &quot;for convenience,&quot; but I'm not sure why this is convenient and it seems to be a potential source of false positives.</p><p>I believe other papers have shown a higher number of potential character states, and I'm concerned these steps listed above may impact the simulations.</p><p>4) The authors, as they admit, use &quot;the most pessimistic estimate&quot; of the frequency of dropouts. It is entirely possible to have two cuts within a cell cycle result in two edits instead of a dropout. Have the authors considered explicitly using their own experimental data (even with library prep caveats), or the GESTALT data, to simulate dropout rates? Since this assumption dramatically impacts accuracy, it would seem important to be careful about how to model dropouts.</p><p>5) Choice of tree reconstruction algorithm matters. In their own simulations, Parsimony appears more successful that Neighbor Joining (Figure 2—figure supplement 1). However, this was never stated explicitly in the text, and there is no discussion of algorithm selection and its impact on accuracy. While NJ was selected for obvious reasons (speed), the authors should provide a clear discussion of other options and their impact on tree accuracy.</p><p>Minor Comments:</p><p>1) GESTALT cell culture approach also used a similar strategy of an array of off-targets and 1 guide RNA, and should be cited when discussing the fly array design, along with the caveats associated with this approach (poor editing at many off targets).</p><p>2) The MEMOIR paper extensively considers accuracy of tree reconstruction, including comparisons to reference trees. These data and discussions should be mentioned and referenced in this paper.</p><p><italic>Reviewer #3:</italic> </p><p>In this manuscript, Salvador-Martínez and Grillo et al. present a simulation study of newly developed CRISPR lineage tracing technologies. The authors do a good job of setting up the problem, explaining their choices of various parameters and assumptions, and adding experimental data in <italic>Drosophila</italic> to reinforce these choices. This work will be a valuable addition to a quickly advancing field, particularly as a reality check on the extent of organismal engineering that will likely be required to achieve near-complete, accurate trees by this class of methods. Our first major comment is about the tone of the paper, while our our additional major comments primarily relate to alternative measures that should be evaluated that strike more of a balance between strict accuracy and the general conservation of tree topology. Additionally, some basic flaws in the experimental design and analysis of editing outcomes in <italic>Drosophila</italic> should be addressed before publication.</p><p>1) A first major comment is that the measure of accuracy used throughout the paper is very conservative, and more generally the tone that is struck in many parts of the paper is (we feel) overly conservative. Although strict accuracy and completeness are of course goals worth shooting for, they are not prerequisites these kinds of experiments to achieve biological insights. For example, lineage relationships between cell types might well be accurately inferred from the general topology of a tree that contained inaccuracies or uncertainty near its tips. For any new technology, proof-of-concept studies are just that -- proof-of-concept, and it's always been clear that significant additional engineering would be (and still is) required to maximize the value of these methods. This point does not detract from the value of the simulations presented in this paper. A more optimistic take on the same results is that it is possible to reconstruct large trees with reasonably high accuracy (great!), but it will require the introduction of at least 50 targets (and ideally several hundred targets), tuning of the mutation rate (although the broad plateau presented in Figure 2D is rather encouraging), and careful consideration of variable cell division rates. These conclusions and other analyses presented in the paper provide important guidance for the field (and a reality check against short term thinking), but the paper often slips into a negative tone that in our view is inconsistent with the results themselves (e.g. the fact that conditions are identified where reconstruction with 99% accuracy is achieved; subsection “Optimising cell lineage reconstruction for in situ sequencing with 2, 4 or 16 character states” paragraph six). We urge the authors to: (a) make it clearer, from the beginning of the paper, the extent to which accuracy as defined here is a highly conservative definition, relative to what might be required to achieve biological insights from trees reconstructed from GESTALT or related methods. (b) strike a more balanced tone, with less emphasis on what is not possible using the systems as reported in their proof-of-concept implementations, and more emphasis on the path forward, i.e. the extent to which further engineering (more targets, reducing inter-site deletion, tuning of mutation rate, etc.) is required to get the most out of these methods.</p><p>2) The simulation of CRISPR-based lineage tracing technologies in the first section (Figure 2) focuses on accuracy with Robinson-Foulds, but should include characterization with the clonal reconstruction measurements (FP / FN analysis). These measurements are used later in the MEMOIR simulation section, and many people will be interested in this use of lineage tracing technologies for this purpose. A mention or comparison to other distance metrics might be more appropriate, see https://www.ncbi.nlm.nih.gov/pubmed/21383415 or the review https://www.ncbi.nlm.nih.gov/pubmed/25378436</p><p>3) You show higher accuracy with maximum parsimony approaches, but use neighbor-joining throughout the paper. A strong justification of this choice is important, as this appears to be a strong bias against the methods you're evaluating.</p><p>4) Robinson-Foulds is a distance metric, and here you've normalized it to an accuracy over [0-100%], which is not detailed anywhere in the paper. Details in the Materials and methods section would improve the clarity of the paper.</p><p>5) Counting 9mers is a bit liberal for determining editing outcomes from the FAST target sequencing. Given the known double-stranded break location and repair outcomes, most mutational outcomes should be centered at, or overlap the cutsite. By including all of the 9 proximal bases, the captured editing diversity will include sequencing errors and PCR errors. This shouldn't affect the overall profile of editing outcomes, but will increase the number of mutations, and should be mentioned. This is made apparent by the elevated mutation rates in the untargered column of Supplementary Table 1 in Supplementary file 1, as some of the more active off-targets have changes in bases believed to strongly obstruct Cas9 binding (bases that are very close the PAM sequence).</p><p>6) Also the location of the primer (Figure 4) precludes find deletions that extend downstream into the PAM sequence. This eliminates the detection of mutations that extend 3' of the cutsite, and will deflate the diversity of editing you see. This is a major bias, and could also affect the FAST off-target results.</p><p>7) It's been shown that very large deletion frequency decreases with the distance between two cutsites (https://www.ncbi.nlm.nih.gov/pubmed/24907273). it would be worth including in the dropout simulations, or at least mentioning an alternative model with decreasing dropout efficiency at larger distances.</p><p>8) It would be good to characterize the accuracy of genotype collapsed trees (https://www.ncbi.nlm.nih.gov/pubmed/29474671) which aim to reduce the number of false branch points (branch points introduced by the tree bifurcation requirement, not mutations).</p><p>9) In the SOLiD simulation section (for Figure 7) it's unclear what sequence would be used for the primer, and how often that binding sequence would be obstructed by deletions in its target sequence. Some more details here would be helpful.</p><p>Minor Comments:</p><p>Fourth sentence of the Abstract should probably say approaches (you profile at least two).</p><p>Abstract: not all terminal branches are fully differentiated cells.</p><p>Introduction paragraph two: there's probably a better phase than “simple cases” (it was quite the effort, which you mention further on).</p><p>Introduction paragraph eight is a bit strong. Certainly simulations will inform future synthetic recording systems, but the assumptions and simplifications of simulation might prevent finding the optimal solution without more true biological validation.</p><p>Subsection “Optimising cell lineage reconstruction for in situ sequencing with 2, 4 or 16 character states” paragraph nine: shouldn't &quot;double the number of reads per target&quot; be &quot;double the read length&quot; or &quot;double the number of cycles&quot;?</p><p>Really beautiful figures all through the supplement, but the most minor change, add &quot; + theme_classic()&quot; or similar to the R command for Figure 2—figure supplement 1.</p><p>Additional details are needed in the experimental section about the PCR reaction.</p></body></sub-article><sub-article article-type="reply" id="SA2"><front-stub><article-id pub-id-type="doi">10.7554/eLife.40292.024</article-id><title-group><article-title>Author response</article-title></title-group></front-stub><body><disp-quote content-type="editor-comment"><p>As you will see, the reviewers agree this work is a valuable addition to the rapidly growing field of CRISPR recorders and lineage tracing. They also each raise concerns about the results presented and their interpretation. In particular, there was clear consensus about the appropriate definition of and requirements for &quot;accurate&quot; lineage reconstruction, justification of the tree reconstruction algorithms used, and the methodologies used for analysis of editing in Drosophila target arrays. Reviewer 2 also has specific suggestions for the title. We hope these points will be straightforward to assess in a revised manuscript.</p></disp-quote><p>We thank the reviewers for their constructive comments. We have revised the manuscript to address and to clarify the points that have been raised, paying particular attention to estimating and interpreting accuracy, and to clarifying our methodology.</p><p>Important messages of our paper are that: there will always be a minimal level of accuracy that must be achieved if reconstructed lineage relationships are to be interpreted confidently; that this will be problem dependent; and that this requirement needs to be considered when designing a lineaging experiment.</p><p>Having a measure of lineage reconstruction accuracy is the essential basis for comparisons of different designs of recorders and for anticipating the effects of different biological factors.</p><p>All reviewers commented on the meaning of the accuracy metrics, asking what level of accuracy would be required for this lineaging approach to be useful. We cannot provide a uniform answer to this question because the level of accuracy required will depend on the questions being asked and the biological conclusions drawn from the cell lineage. Researchers will need to assess the level of lineage accuracy needed to answer a given question, on a case-by-case basis.</p><p>To extend and to clarify our measurements of lineage accuracy, in the revised manuscript we include the following new results:</p><p>1) In addition to our global measure of accuracy, we provide estimates of lineage accuracy at different levels of the lineage tree. This gives an indication of accuracy for large (early) clones versus smaller (later) clones.</p><p>2) We developed a new measure of reconstruction accuracy that we are able to apply at all levels of the lineage tree to supplement our global measure of tree accuracy. This measure can show how the information content within the targets decays during development, as the targets become saturated.</p><p>3) We have extended the estimates of False positives and False Negatives (a measure the reviewers agree is useful for understanding the impact of accuracy) to all our major simulations, and we provide estimates of false positives and false negatives for different clone sizes.</p><disp-quote content-type="editor-comment"><p>Separate reviews (please respond to each point):</p></disp-quote><p>Reviewer #1:</p><disp-quote content-type="editor-comment"><p>There has been an explosion in CRISPR lineage tracing studies over the past few years. However, assessing the &quot;accuracy&quot; of these reported lineage reconstructions is difficult because the correct lineage is typically unknown. In this study, the authors primarily use computational approaches, along with some experimental data in Drosophila embryos, to assess various parameters that affect reconstruction accuracy, such as mutation rate, cell division rate, mutational diversity, and others.</p><p>Some thoughts for the authors to consider: From a practical perspective, what is accurate enough?</p></disp-quote><p>We have as our ultimate goal an accurate lineage tree for an entire embryo but recognise that less accurate/resolved trees can also be useful, depending on the biological questions being asked.</p><p>We clarify this in the revised manuscript, as follows:</p><p>1) Already in the Introduction we state &quot;Of course the required accuracy will depend on the intended use of the lineage&quot;.</p><p>2) In the Discussion we have added:”The required accuracy of a lineage will depend on the application; for example, accurate trees will be necessary to detect stereotypic divisions and cell fates such as those found in <italic>Drosophila</italic> sensory organ precursor and CNS neuroblast lineages, but less accurate trees may be sufficient to detect biases/trends reflecting major lineage commitments.”</p><disp-quote content-type="editor-comment"><p>In an experiment where the &quot;real&quot; tree is unknown, how do the investigators determine the appropriate parameters?</p></disp-quote><p>In a sense, this is what we are doing, as the embryonic lineage tree of <italic>Drosophila</italic> is unknown (in fact the lineage is not stereotypic, it varies in every individual). We are getting as much information as possible from experimental data and knowledge of fly biology, and include these parameters (mutation rate, mutational diversity, cell division rates) in our simulations to model the reconstruction of this unknown tree.</p><p>In cases where the cell division rates are difficult to determine, simulations allow us to estimate the expected levels of accuracy for a range of parameters. As we explain below (in response to point 5), we find that even when mutation rates cannot be matched precisely to cell division rates, lineage reconstruction can be quite accurate, given a sufficient number of targets.</p><disp-quote content-type="editor-comment"><p>Are some CRISPR recorder designs fundamentally better than others, and does this study suggest a better approach?</p></disp-quote><p>Our study suggests that recorder design is important, and that adjusting target number, mutation rate and dropout rates will each have a major impact for lineage reconstruction, with any type of recorder. This message is explicit throughout the manuscript.</p><p>Different recorder implementations (GESTALT, MEMOIR, ScarTrace, LINNAEUS…) are likely to differ in performance, and this will largely depend on specific target numbers, mutation rates, etc. In this manuscript we specifically test the performance of two published recorders (GESTALT and MEMOIR). We suggest that simulations would be valuable for testing any recorder design.</p><disp-quote content-type="editor-comment"><p>Major comments:</p><p>1) Recently, there was a systematic follow up to van Overbeek et al., 2016, by Leopold Parts at the Sanger (Allen BioRxiv 2018), which used a large dataset to provide an indel distribution prediction tool. It would be very interesting to consider this for specific target sequences, and discuss &quot;optimized&quot; spacer sequences for CRISPR recorders that have higher mutational diversity than others.</p></disp-quote><p>Indeed, the study of Allen et al. (and two other recently published studies, by Shen et al. and Chen et al.) suggests that the diversity and relative frequencies of mutational outcomes are influenced by the target and flanking sequences. We agree that this will be important to consider when designing recorder sequences. These predictions will need to be validated experimentally in the relevant species and in the context of the genomic locus harbouring the CRISPR recorder.</p><p>In the revised text we acknowledge this as follows: “If, as expected, the diversity of mutations and their relative frequencies vary depending on the target sequence and its local environment (Overbeek et al., 2016; Vu et al., 2017; Allen et al., 2018; Shen et al., 2018; Chen et al., 2018) sampling different targets to approach this optimum would be worthwhile.”</p><disp-quote content-type="editor-comment"><p>2) The rationale for assuming that CRISPR recorders generate irreversible target mutations is unclear. For example, there can be a &quot;back rate&quot; where a mutated target that creates a single base indel can still be recognized by Cas9 after a cell division.</p></disp-quote><p>To our knowledge no systematic study has been carried out to address the efficiency of re-targeting of mutated sites by the same gRNA. We expect the frequency of reversions to be very low, however, because (1) following mutation, the majority of targets have multiple mismatches to the gRNA near the CRISPR cleavage site (Allen et al., 2018) and these sites are expected to be targeted with very low efficiency compared with unmutated targets (Hsu et al., 2013), (2) even single nucleotide mismatches near the cleavage site can be deleterious for CRISPR targeting (see Hsu et al., 2013 and our results), and (3) even when mutated targets are re-cleaved, the great majority will not revert to the unmutated sequence (see mutational outcomes in Allen et al., 2018). Based on these data, we estimate that reversion rates will be much lower than 1% of the forward mutation rates. For these reasons we consider that the rate of reversion is negligible. “Irreversibility” seems to be a reasonable approximation when simulating the mutational process and lineage reconstruction.</p><p>We have added a sentence to the Results to this effect: “We expect the frequency of reversions to be negligible as even single nucleotide changes result in a large decrease in mutation rate.”</p><disp-quote content-type="editor-comment"><p>3) Why is neighbor-joining chosen over parsimony (and over several other possible algorithms?) This should be elaborated on. Can the authors leverage their insights to improve these reconstruction algorithms to specifically address the challenges of CRISPR recorders?</p></disp-quote><p>The choice of NJ over Parsimony was a practical one. We have shown that a Parsimony approach would be slightly more accurate on average than NJ, however it is considerably slower. We have now quantified the difference in speed. In the revised manuscript we show that the time taken by the parsimony method increases exponentially with lineage depth, such that reconstructing a lineage of just 180 cells takes ~52 hours (Figure 2—figure supplement 1B). With NJ the same tree can be reconstructed in less than 1 second.</p><p>While it may be worth attempting to use Parsimony with a real data set (one would probably have to take a two-step heuristic approach and produce an initial best guess tree using NJ, followed by optimisation using the parsimony criterion and branch swapping), for our purposes of comparing thousands of different simulations it is important to have a good method and essential to have one that is computationally tractable. Most of our analysis concerns comparisons of the effects of different designs and various parameters on the accuracy of lineage reconstruction, and the conclusions hold as long as the tree reconstruction method is consistent.</p><p>In the revised manuscript we address this point as follows:</p><p>1)We provide a more detailed comparison of the accuracy of NJ and Parsimony methods (Figure 2—figure supplement 1A and B). We find that Parsimony performs 5-10% better than NJ for trees of up to 180 sampled cells.</p><p>2) We justify the choice of NJ in the Materials and methods section.</p><disp-quote content-type="editor-comment"><p>4) The chosen definition of &quot;accuracy&quot; seems to be problematic because it does not generally discriminate between false positive and false negative reconstruction events. This is briefly considered in Figure 7 but should be expanded.</p></disp-quote><p>Robinson-Foulds is a standard metric that is widely used to compare trees in phylogenetics. We adopted a metric related to Robinson Foulds that gives the percentage of correctly resolved splits as a global measure of tree accuracy. This is suitable for comparing the overall accuracy of lineage reconstruction achieved in different conditions. This has been clarified in the manuscript.</p><p>As suggested, we have expanded the use of False Positives and False Negatives – an alternative measure of tree accuracy intended to be more easily interpreted in a developmental context. Our original use of False Positives and False Negatives considered clones of just one size. We have now extended the FP/FN approach to encompass multiple different sized clones and have applied this extended approach to the simulation of the 32-target CRISPR recorder with optimised mutation rates with and without dropouts, to GESTALT and to MEMOIR (Section “Measuring accuracy at different depths of the tree” and Figure 9 in revised manuscript).</p><p>Finally, to provide a more complete estimate of accuracy at different depths of the lineage tree, we now record how the ability to reconstruct the cell lineage varies through the tree as the process of mutation accumulation proceeds (see “quartet analysis”). We present this analysis for the simulation of the 32-target CRISPR recorder with optimised mutation rates with and without dropouts, for GESTALT and for MEMOIR (Figure 8 in revised manuscript).</p><disp-quote content-type="editor-comment"><p>5) The authors show that setting the correct mutation rate matters. How can mutation rates be matched to the rate of cell division when the rate or interval of cell divisions is unknown/itself variable (e.g. in a tumor)? This would be worth discussing.</p></disp-quote><p>One of the important outcomes of our simulations has been to show that the range of mutation rates that produce similarly accurate lineage reconstruction can be quite broad (see Figure 2C,D). Thus, even when mutation rates cannot be matched precisely to cell division rates (such as when these are unknown or vary within a tree), a mismatch between mutation rates and expected rates of cell division will have relatively limited impact on overall accuracy within fairly broad limits.</p><p>We have added to the text as follows, to make this more clear: “The range of mutation rates that can produce accurate lineage reconstruction fortunately proves to be quite broad for a given tree size; 0.05 to 0.25 mutations per cell division can yield reasonably high levels of accuracy for trees of ~65,000 cells, if the division rates are relatively even (Figure 2C,D). This flexibility will be beneficial in cases where the cell division rates are poorly characterised.“</p><p>Reviewer #2:</p><disp-quote content-type="editor-comment"><p>The manuscript &quot;Is it possible to reconstruct an accurate cell lineage using CRISPR recorders?&quot; uses simulations and some experimental data to conduct a thorough exploration of the parameters governing the accuracy of CRISPR lineage tracing. They define and sweep four key parameters for two types of CRISPR recorders: number of targets, mutation rate, mutational character states, and dropouts. This work is important and valuable to a growing community exploring the potential of CRISPR recorders. It provides a path for future optimization of these type of lineage tracing tools. For the most part, the writing and figures are clear and informative. I have five major concerns listed below.</p><p>1) The provocative title in the form of a question is somewhat misleading – is the answer yes? The manuscript doesn't explicitly answer this question. I would suggest a more accurate title, for example &quot;design specifications for more accurate CRISPR recorders.&quot;</p></disp-quote><p>We think that the title of the manuscript (“Is it possible to reconstruct an accurate cell lineage using CRISPR recorders?”) accurately describes the question that we are addressing in this work. The answer to that question is not a simple yes/no response, but depends on the size and complexity of a lineage, on the design of the recorder, and on the level of accuracy required. Our paper addresses these points.</p><disp-quote content-type="editor-comment"><p>2) I have two concerns with the term &quot;accuracy.&quot;</p><p>First concern: The authors should be explicit upfront about their definition of the term accuracy, which includes both false positives and false negatives. I would argue that false positives (wrong branchpoints) are worse than false negatives (i.e. missing branchpoints). Can't an &quot;accurate&quot; tree have missing branchpoints but no wrong branchpoints? The authors briefly describe this distinction, but only at the very end of the Results section and then calculate these subscores of &quot;accuracy&quot; only for the SOLID sequencing approach. I would appreciate a longer discussion of this definition and scoring at the beginning of the results, and FP/FN calculated and reported for all simulations.</p></disp-quote><p>Please see above our response on this to reviewer 1. As explained in the Materials and methods section and depicted in Figure 9—figure supplement 1, both FP and FN are derived from a mismatch between the true tree and the reconstructed tree. The false negative cells are not missing from the tree, but missing from the reconstructed clade/clone to which they belong (they are incorrectly placed elsewhere in the tree).</p><disp-quote content-type="editor-comment"><p>Second concern: Generally speaking, how accurate do we need CRISPR recorders to be? The authors set a high bar: complete and accurate lineage tracing of a 65,000 cell tree. Is 4% or 14% (the final &quot;scores&quot; given to MEMOIR and GESTALT) good enough for many scientific applications? It is certainly better than nearly all existing lineage tracing techniques, from which we have learned a great deal about biology. I would appreciate a discussion of why 100% complete and accurate trees are such an important goal, and what we can still learn from less accurate trees.</p></disp-quote><p>We agree that different lineaging accuracies are required to address different problems. We discuss and respond to this point at length in our response to reviewer 1 (above).</p><disp-quote content-type="editor-comment"><p>3) I am concerned about three library prep or filtering steps in the sequencing of the Drosophila target site array that are not clearly explained in the text, which may reduce the number of character states used in all following simulations:</p><p>a) To call character states – why only use 9bp flanking the target site instead of simply aligning each read to unedited sites? I would assume that this would eliminate some character states.</p></disp-quote><p>Indeed, mutations sometimes extend beyond the 9 bp window of detection, so it is important to ask whether a larger window would be more useful. As pointed out by reviewer 3, the trade-off for increasing the detection window is that more sequencing errors would be captured and counted as false character states.</p><p>We considered two points in opting for a 9 bp window. First, the nature of CRISPR-induced mutations is such that mutations are centered at the cleavage site. We estimate that mutations falling outside of this detection window have a lower frequency than the sequencing error rate (&lt;0.4% of mutations are missed with a 9 bp window). Second, the mutations that extend beyond 9 bp are deletions (and a few insertions) that would typically bring unique sequences into the 9 bp detection window (see Allen et al. 2018). We expect that all these changes will be detectable as distinct mutations.</p><p>As the reviewer suggests, when we consider only 9 nucleotides we cannot distinguish certain different mutated outcomes from each other. This could add to the level of homoplasy and reduce accuracy.</p><p>Our analysis of the mutations captured when reading 18 bp as opposed to 9 bp showed we are incorrectly grouping 4 pairs of character states. Reading 18 bp, however, introduces additional sequencing errors: by reading 18 bp the sequencing error would increase from 1.1% to 2.2%.</p><p>To quantify the overall effect on lineaging accuracy, we compared the accuracy of lineage reconstruction using 9 bp to what we would obtain using 18bp (both coded as 60 character states). The mean accuracy improves to an insignificant degree, from 72.19% to 72.24%.</p><p>These results are included in the revised manuscript, in Figure 4—figure supplement 1.</p><disp-quote content-type="editor-comment"><p>b) If I understand Figure 4A, the authors use a primer that sits directly on the PAM -mutational outcomes that disrupt any bases within the PAM presumably would not be captured by the PCR and sequencing. Can the authors discuss the impact of this?</p></disp-quote><p>The targets were amplified and sequenced using primers located &gt;40 nucleotides away from each target site. The ‘primer’ indicated in Figure 4A is incorrect and has been removed. We apologise for this mistake.</p><p>In section “DNA extraction, generation of libraries and sequencing” of the Materials and methods, we explain more clearly the use of amplification and sequencing primers.</p><disp-quote content-type="editor-comment"><p>c) Why merge 140 rare character states into a shared state (state 60)? This would obviously lead to tree errors. Why not treat these just as all other character states? The authors write that this was &quot;for convenience,&quot; but I'm not sure why this is convenient and it seems to be a potential source of false positives.</p><p>I believe other papers have shown a higher number of potential character states, and I'm concerned these steps listed above may impact the simulations.</p></disp-quote><p>As we mention in the section “Reconstructing lineage trees using Neighbor Joining (PAUP*)” of Materials and methods, the maximum number of distinct character states that we could use in the analysis programme PAUP* was 64.</p><p>We can show that there are diminishing returns of using a larger diversity of character states; for example, compare the very similar results when considering 16 versus 32 character states in Figure 2C. We have tested this further by comparing our results with 60 mutated character states to the case where we reduce the data to 40 character states (gathering together the lowest frequency outcomes). The accuracy of the optimal reconstruction changes from 72% to 71% (Figure 4—figure supplement 1).</p><disp-quote content-type="editor-comment"><p>4) The authors, as they admit, use &quot;the most pessimistic estimate&quot; of the frequency of dropouts. It is entirely possible to have two cuts within a cell cycle result in two edits instead of a dropout. Have the authors considered explicitly using their own experimental data (even with library prep caveats), or the GESTALT data, to simulate dropout rates? Since this assumption dramatically impacts accuracy, it would seem important to be careful about how to model dropouts.</p></disp-quote><p>We have simulated GESTALT based on the experimental data. When we model the worst case scenario for dropouts we observe a very similar number of alleles to the experimental data suggesting that reality approximates the worst case (see Figure 6—figure supplement 1).</p><p>For <italic>Drosophila</italic>, we do not have experimental data regarding dropouts, but we provide results covering both best and worst case scenarios.</p><disp-quote content-type="editor-comment"><p>5) Choice of tree reconstruction algorithm matters. In their own simulations, Parsimony appears more successful that Neighbor Joining (Figure 2—figure supplement 1). However, this was never stated explicitly in the text, and there is no discussion of algorithm selection and its impact on accuracy. While NJ was selected for obvious reasons (speed), the authors should provide a clear discussion of other options and their impact on tree accuracy.</p></disp-quote><p>We address this point in our response to reviewer 1. We have added new results in Figure 2—figure supplement 1A and B and an explicit statement to the Materials and methods section.</p><disp-quote content-type="editor-comment"><p>Minor Comments:</p><p>1) GESTALT cell culture approach also used a similar strategy of an array of off-targets and 1 guide RNA, and should be cited when discussing the fly array design, along with the caveats associated with this approach (poor editing at many off targets).</p></disp-quote><p>We have added this citation in the revised manuscript:”We chose to adjust the mutation rate by altering the target sequence in order to introduce mismatches in the sgRNA:target pairing (similar to the strategy used on cultured cells by McKenna et al., 2016)”.</p><p>We do not consider poor editing rates at some target variants to be a problem. The purpose of this array was to measure the actual mutation rate on diverse targets, which enabled us to select targets that match the optimal rates for lineage reconstruction. The actual recorders include arrays of the selected target, and no suboptimal targets.</p><disp-quote content-type="editor-comment"><p>2) The MEMOIR paper extensively considers accuracy of tree reconstruction, including comparisons to reference trees. These data and discussions should be mentioned and referenced in this paper.</p></disp-quote><p>We thank the reviewer for pointing this out. We have included references to Frieda et al., 2017 (MEMOIR), Schmidt et al., 2017 and Spanjaard et al., 2018 in the revised manuscript (Introduction paragraph five).</p><p>Reviewer #3:</p><disp-quote content-type="editor-comment"><p>In this manuscript, Salvador-Martínez and Grillo et al. present a simulation study of newly developed CRISPR lineage tracing technologies. The authors do a good job of setting up the problem, explaining their choices of various parameters and assumptions, and adding experimental data in Drosophila to reinforce these choices. This work will be a valuable addition to a quickly advancing field, particularly as a reality check on the extent of organismal engineering that will likely be required to achieve near-complete, accurate trees by this class of methods. Our first major comment is about the tone of the paper, while our our additional major comments primarily relate to alternative measures that should be evaluated that strike more of a balance between strict accuracy and the general conservation of tree topology. Additionally, some basic flaws in the experimental design and analysis of editing outcomes in Drosophila should be addressed before publication.</p><p>1) A first major comment is that the measure of accuracy used throughout the paper is very conservative, and more generally the tone that is struck in many parts of the paper is (we feel) overly conservative. Although strict accuracy and completeness are of course goals worth shooting for, they are not prerequisites these kinds of experiments to achieve biological insights. For example, lineage relationships between cell types might well be accurately inferred from the general topology of a tree that contained inaccuracies or uncertainty near its tips.</p></disp-quote><p>As discussed in our response to reviewer 1, we have tried to be clearer regarding the fact that the required level of accuracy will depend on the application.</p><p>One of the most important messages from our study is the desirability of performing such power analyses as a tool for optimising the design of the experiment and in order to have an estimate how reliable is the final result.</p><disp-quote content-type="editor-comment"><p>For any new technology, proof-of-concept studies are just that -- proof-of-concept, and it's always been clear that significant additional engineering would be (and still is) required to maximize the value of these methods. This point does not detract from the value of the simulations presented in this paper. A more optimistic take on the same results is that it is possible to reconstruct large trees with reasonably high accuracy (great!), but it will require the introduction of at least 50 targets (and ideally several hundred targets), tuning of the mutation rate (although the broad plateau presented in Figure 2D is rather encouraging), and careful consideration of variable cell division rates. These conclusions and other analyses presented in the paper provide important guidance for the field (and a reality check against short term thinking), but the paper often slips into a negative tone that in our view is inconsistent with the results themselves (e.g. the fact that conditions are identified where reconstruction with 99% accuracy is achieved; subsection “Optimising cell lineage reconstruction for in situ sequencing with 2, 4 or 16 character states” paragraph six). We urge the authors to: (a) make it clearer, from the beginning of the paper, the extent to which accuracy as defined here is a highly conservative definition, relative to what might be required to achieve biological insights from trees reconstructed from GESTALT or related methods.</p></disp-quote><p>Please see our response to reviewer 1.</p><disp-quote content-type="editor-comment"><p>(b) strike a more balanced tone, with less emphasis on what is not possible using the systems as reported in their proof-of-concept implementations, and more emphasis on the path forward, i.e. the extent to which further engineering (more targets, reducing inter-site deletion, tuning of mutation rate, etc.) is required to get the most out of these methods.</p></disp-quote><p>The manuscript assesses the accuracy of current methods without commenting on what is possible or not possible to achieve. We explicitly discuss the ways in which CRISPR recorders can be improved and quantify the expected improvements in performance. We conclude that CRISPR-based methods should ultimately allow us generate accurate lineage trees.</p><p>The last paragraph of the manuscript has been revised to give a clear positive answer to the question posed in the title: “This approach should stimulate the development of a new generation of CRISPR recorders whose performance will be assessed explicitly and adapted to match the biological questions at hand. Our study predicts that optimized recorders will ultimately allow the reconstruction of accurate cell lineages of complex multicellular organisms at the level of a single cell.”</p><disp-quote content-type="editor-comment"><p>2) The simulation of CRISPR-based lineage tracing technologies in the first section (Figure 2) focuses on accuracy with Robinson-Foulds, but should include characterization with the clonal reconstruction measurements (FP / FN analysis). These measurements are used later in the MEMOIR simulation section, and many people will be interested in this use of lineage tracing technologies for this purpose. A mention or comparison to other distance metrics might be more appropriate, see https://www.ncbi.nlm.nih.gov/pubmed/21383415 or the review https://www.ncbi.nlm.nih.gov/pubmed/25378436</p></disp-quote><p>As discussed in response to referees 1 and 2 we have now expanded our use of False Positive and False Negatives. While other measures of tree similarity exist we expect that their use would not change our conclusions as to the optimal value for a given parameter.</p><disp-quote content-type="editor-comment"><p>3) You show higher accuracy with maximum parsimony approaches, but use neighbor-joining throughout the paper. A strong justification of this choice is important, as this appears to be a strong bias against the methods you're evaluating.</p></disp-quote><p>We have addressed this in our response to referee 1 (point 3).</p><disp-quote content-type="editor-comment"><p>4) Robinson-Foulds is a distance metric, and here you've normalized it to an accuracy over [0-100%], which is not detailed anywhere in the paper. Details in the Materials and methods section would improve the clarity of the paper.</p></disp-quote><p>We have now made clearer that our measure is related to but distinct from the Robinson Foulds distance metric. We state: “The accuracy of lineage reconstruction of each simulation was determined by comparing the inferred tree with the reference tree using a measure derived from the Robinson-Foulds algorithm (Robinson and Foulds, 1981), which calculates the percentage of splits in the reference tree that are precisely recovered in the inferred tree (Figure 2B). If the inferred tree is identical to the reference tree, the Robinson-Foulds accuracy is 100%.”</p><p>And in the Materials and methods section we state: “The accuracy of each cell-lineage reconstruction was determined by calculating a measure related to the Robinson-Foulds distance (RF) between the reference and the inferred trees. We count the percentage of splits (sets of cells separated into two groups by a node in the tree) in the reference tree that are also found in the inferred tree.”</p><disp-quote content-type="editor-comment"><p>5) Counting 9mers is a bit liberal for determining editing outcomes from the FAST target sequencing. Given the known double-stranded break location and repair outcomes, most mutational outcomes should be centered at, or overlap the cutsite. By including all of the 9 proximal bases, the captured editing diversity will include sequencing errors and PCR errors. This shouldn't affect the overall profile of editing outcomes, but will increase the number of mutations, and should be mentioned. This is made apparent by the elevated mutation rates in the untargered column of Supplementary Table 1 in Supplementary file 1, as some of the more active off-targets have changes in bases believed to strongly obstruct Cas9 binding (bases that are very close the PAM sequence).</p></disp-quote><p>As we acknowledge in our response to reviewer 2 (point 3a), there is a trade-off in setting the size of the detection window, between capturing mutational diversity and excluding sequencing errors.</p><p>We have directly quantified the PCR/sequencing error rate in flies that did not carry Cas9 (shown as “untargeted” in Supplementary Table 1 in Supplementary file 1). For the FAST target, we find this rate to be 1%, compared with CRISPR target mutagenesis of 87% in embryos and 92% in adults.</p><p>We have amended the following text in the Results section to make this more explicit: “As expected, the target that has perfect complementarity with the Emx1.6 sgRNA (target 16, named the “FAST” target) showed the highest mutation rate; having corrected for sequencing errors (~1% of control targets have differences due to PCR or sequencing errors, Supplementary file 1) we observed that 87% of the targets carried a mutation at the end of embryogenesis.”</p><disp-quote content-type="editor-comment"><p>6) Also the location of the primer (Figure 4) precludes find deletions that extend downstream into the PAM sequence. This eliminates the detection of mutations that extend 3' of the cutsite, and will deflate the diversity of editing you see. This is a major bias, and could also affect the FAST off-target results.</p></disp-quote><p>As indicated in our response to reviewer 2 (point 3b), there was a mistake in Figure 4, which we have now corrected. The targets were amplified and sequenced using primers located &gt;40 nucleotides away from each target site so we were able to find all deletions rather than only those in the 9bp window.</p><disp-quote content-type="editor-comment"><p>7) It's been shown that very large deletion frequency decreases with the distance between two cutsites (https://www.ncbi.nlm.nih.gov/pubmed/24907273). it would be worth including in the dropout simulations, or at least mentioning an alternative model with decreasing dropout efficiency at larger distances.</p></disp-quote><p>Indeed, besides the rate of cleavage by CRISPR, dropout frequency will be influenced by the interplay of several parameters – such as the distance between cut sites, the speed of repair, etc. How these parameters influence dropout rates is currently difficult to predict and is likely to vary across species and cell types. The data presented in the cited paper refers to variations in deletion rates over large distances (multiple kb) in mammalian cells. It does not seem particularly relevant for the CRISPR recorders that we simulate, which are much smaller in size (inter-target distances of 100 bp for our FAST target arrays and 26 bp for GESTALT).</p><p>Because dropout rates are difficult to predict, our analysis of 32 targets covered two conditions: a best case scenario with no dropouts and a worst case scenario with dropouts for every predicted double cleavage. For GESTALT the worst case scenario recapitulates the experimental data available.</p><disp-quote content-type="editor-comment"><p>8) It would be good to characterize the accuracy of genotype collapsed trees (https://www.ncbi.nlm.nih.gov/pubmed/29474671) which aim to reduce the number of false branch points (branch points introduced by the tree bifurcation requirement, not mutations).</p></disp-quote><p>This is an interesting idea and one of several that deserve to be considered in the future for accurate reconstruction of lineage data but we feel that this is outside the scope of the current manuscript.</p><disp-quote content-type="editor-comment"><p>9) In the SOLiD simulation section (for Figure 7) it's unclear what sequence would be used for the primer, and how often that binding sequence would be obstructed by deletions in its target sequence. Some more details here would be helpful.</p></disp-quote><p>In our SOLiD simulations we assumed that the sequencing primer would never be lost by mutation, so our simulation represents a best-case scenario. To minimise homoplasy when capturing one or two SOLiD reads, we found that the primer should be optimally placed on the 3’ of the target, overlapping the PAM.</p><p>This experiment simulates the additional constraints imposed by an existing technology for in situ sequencing and highlights the need to consider factors that can affect the quantity and quality of information coming out of the experiment.</p><p>We have clarified the SOLiD experiment by adding the following sentences in Materials and methods: “For the simulation of SOLiD sequencing we used the real distribution of the dinucleotides observed at positions 6-7 and 11-12 upstream of the PAM. We translated these into four different colour states per dinucleotide according to the SOLiD protocol (Figure 7—figure supplement 1).”</p><disp-quote content-type="editor-comment"><p>Minor Comments:</p><p>Fourth sentence of the Abstract should probably say approaches (you profile at least two).</p></disp-quote><p>Changed to “Here, we use computer simulations to estimate the performance of these approaches under different conditions.”</p><disp-quote content-type="editor-comment"><p>Abstract: not all terminal branches are fully differentiated cells.</p></disp-quote><p>Changed to “The divisions that generate these adult cells constitute a genealogical tree with the fertilised egg at its root and each <underline>adult</underline> cell as a terminal branch.“</p><disp-quote content-type="editor-comment"><p>Introduction paragraph two: there's probably a better phase than “simple cases” (it was quite the effort, which you mention further on).</p></disp-quote><p>Changed to “Obtaining high resolution (single-cell level) lineages is a challenging task that has been solved only in animals with relatively few cells, such as the nematode <italic>Caenorhabditis elegans</italic>: its complete lineage (∼1000 cells) was deduced by painstaking observation of each cell division under the microscope.”</p><disp-quote content-type="editor-comment"><p>Introduction paragraph eight is a bit strong. Certainly simulations will inform future synthetic recording systems, but the assumptions and simplifications of simulation might prevent finding the optimal solution without more true biological validation.</p></disp-quote><p>Changed to “Ultimately, these simulations will <underline>help</underline> us to establish a set of criteria for the optimal design of CRISPR-based lineage recorders, as well as to understand the limitations of these techniques when addressing real biological questions.”</p><disp-quote content-type="editor-comment"><p>Subsection “Optimising cell lineage reconstruction for in situ sequencing with 2, 4 or 16 character states” paragraph nine: shouldn't &quot;double the number of reads per target&quot; be &quot;double the read length&quot; or &quot;double the number of cycles&quot;?</p></disp-quote><p>Changed to “Clearly, increasing the number of targets will improve performance, but we wanted to know whether it would be better instead to read double the number of nucleotides per target, which represents the same sequencing effort.”</p><disp-quote content-type="editor-comment"><p>Really beautiful figures all through the supplement, but the most minor change, add &quot; + theme_classic()&quot; or similar to the R command for Figure 2—figure supplement 1.</p></disp-quote><p>The figure has been revised.</p><disp-quote content-type="editor-comment"><p>Additional details are needed in the experimental section about the PCR reaction.</p></disp-quote><p>We have added more details to address this point.</p></body></sub-article></article>