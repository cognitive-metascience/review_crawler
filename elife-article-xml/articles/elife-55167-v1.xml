<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.1 20151215//EN"  "JATS-archivearticle1.dtd"><article article-type="research-article" dtd-version="1.1" xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink"><front><journal-meta><journal-id journal-id-type="nlm-ta">elife</journal-id><journal-id journal-id-type="publisher-id">eLife</journal-id><journal-title-group><journal-title>eLife</journal-title></journal-title-group><issn pub-type="epub" publication-format="electronic">2050-084X</issn><publisher><publisher-name>eLife Sciences Publications, Ltd</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="publisher-id">55167</article-id><article-id pub-id-type="doi">10.7554/eLife.55167</article-id><article-categories><subj-group subj-group-type="display-channel"><subject>Tools and Resources</subject></subj-group><subj-group subj-group-type="heading"><subject>Neuroscience</subject></subj-group></article-categories><title-group><article-title>SpikeForest, reproducible web-facing ground-truth validation of automated neural spike sorters</article-title></title-group><contrib-group><contrib contrib-type="author" corresp="yes" id="author-161121"><name><surname>Magland</surname><given-names>Jeremy</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0002-5286-4375</contrib-id><email>jmagland@flatironinstitute.org</email><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="fn" rid="con1"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" id="author-172156"><name><surname>Jun</surname><given-names>James J</given-names></name><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="fn" rid="con2"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" id="author-172157"><name><surname>Lovero</surname><given-names>Elizabeth</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-2642-603X</contrib-id><xref ref-type="aff" rid="aff2">2</xref><xref ref-type="fn" rid="con3"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" id="author-172158"><name><surname>Morley</surname><given-names>Alexander J</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-4997-4063</contrib-id><xref ref-type="aff" rid="aff3">3</xref><xref ref-type="fn" rid="con4"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" id="author-159990"><name><surname>Hurwitz</surname><given-names>Cole Lincoln</given-names></name><contrib-id authenticated="true" contrib-id-type="orcid">http://orcid.org/0000-0002-2023-1653</contrib-id><xref ref-type="aff" rid="aff4">4</xref><xref ref-type="fn" rid="con5"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" id="author-152252"><name><surname>Buccino</surname><given-names>Alessio Paolo</given-names></name><xref ref-type="aff" rid="aff5">5</xref><xref ref-type="fn" rid="con6"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" id="author-161122"><name><surname>Garcia</surname><given-names>Samuel</given-names></name><xref ref-type="aff" rid="aff6">6</xref><xref ref-type="fn" rid="con7"/><xref ref-type="fn" rid="conf1"/></contrib><contrib contrib-type="author" id="author-172159"><name><surname>Barnett</surname><given-names>Alex H</given-names></name><xref ref-type="aff" rid="aff1">1</xref><xref ref-type="fn" rid="con8"/><xref ref-type="fn" rid="conf1"/></contrib><aff id="aff1"><label>1</label><institution>Center for Computational Mathematics, Flatiron Institute</institution><addr-line><named-content content-type="city">New York</named-content></addr-line><country>United States</country></aff><aff id="aff2"><label>2</label><institution>Scientific Computing Core, Flatiron Institute</institution><addr-line><named-content content-type="city">New York</named-content></addr-line><country>United States</country></aff><aff id="aff3"><label>3</label><institution>Medical Research Council Brain Network Dynamics Unit, University of Oxford</institution><addr-line><named-content content-type="city">Oxford</named-content></addr-line><country>United Kingdom</country></aff><aff id="aff4"><label>4</label><institution>Institute for Adaptive and Neural Computation Informatics, University of Edinburgh</institution><addr-line><named-content content-type="city">Edinburgh</named-content></addr-line><country>United Kingdom</country></aff><aff id="aff5"><label>5</label><institution>Centre for IntegrativeNeuroplasticity (CINPLA), University of Oslo</institution><addr-line><named-content content-type="city">Oslo</named-content></addr-line><country>Norway</country></aff><aff id="aff6"><label>6</label><institution>Centre de Recherche en Neuroscience de Lyon, Université de Lyon</institution><addr-line><named-content content-type="city">Lyon</named-content></addr-line><country>France</country></aff></contrib-group><contrib-group content-type="section"><contrib contrib-type="editor"><name><surname>Meister</surname><given-names>Markus</given-names></name><role>Reviewing Editor</role><aff><institution>California Institute of Technology</institution><country>United States</country></aff></contrib><contrib contrib-type="senior_editor"><name><surname>Calabrese</surname><given-names>Ronald L</given-names></name><role>Senior Editor</role><aff><institution>Emory University</institution><country>United States</country></aff></contrib></contrib-group><pub-date date-type="publication" publication-format="electronic"><day>19</day><month>05</month><year>2020</year></pub-date><pub-date pub-type="collection"><year>2020</year></pub-date><volume>9</volume><elocation-id>e55167</elocation-id><history><date date-type="received" iso-8601-date="2020-01-14"><day>14</day><month>01</month><year>2020</year></date><date date-type="accepted" iso-8601-date="2020-05-05"><day>05</day><month>05</month><year>2020</year></date></history><permissions><copyright-statement>© 2020, Magland et al</copyright-statement><copyright-year>2020</copyright-year><copyright-holder>Magland et al</copyright-holder><ali:free_to_read/><license xlink:href="http://creativecommons.org/licenses/by/4.0/"><ali:license_ref>http://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>This article is distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use and redistribution provided that the original author and source are credited.</license-p></license></permissions><self-uri content-type="pdf" xlink:href="elife-55167-v1.pdf"/><abstract><p>Spike sorting is a crucial step in electrophysiological studies of neuronal activity. While many spike sorting packages are available, there is little consensus about which are most accurate under different experimental conditions. SpikeForest is an open-source and reproducible software suite that benchmarks the performance of automated spike sorting algorithms across an extensive, curated database of ground-truth electrophysiological recordings, displaying results interactively on a continuously-updating website. With contributions from eleven laboratories, our database currently comprises 650 recordings (1.3 TB total size) with around 35,000 ground-truth units. These data include paired intracellular/extracellular recordings and state-of-the-art simulated recordings. Ten of the most popular spike sorting codes are wrapped in a Python package and evaluated on a compute cluster using an automated pipeline. SpikeForest documents community progress in automated spike sorting, and guides neuroscientists to an optimal choice of sorter and parameters for a wide range of probes and brain regions.</p></abstract><kwd-group kwd-group-type="author-keywords"><kwd>spike sorting</kwd><kwd>electrophysiology</kwd><kwd>reproducibility</kwd><kwd>validation</kwd><kwd>ground truth</kwd></kwd-group><kwd-group kwd-group-type="research-organism"><title>Research organism</title><kwd>None</kwd></kwd-group><funding-group><funding-statement>No external funding was received for this work.</funding-statement></funding-group><custom-meta-group><custom-meta specific-use="meta-only"><meta-name>Author impact statement</meta-name><meta-value>Ten popular spike sorting codes are reproducibly benchmarked for accuracy on electrophysiology datasets from eleven laboratories with interactive web-based exploration of thousands of ground-truth units.</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="s1" sec-type="intro"><title>Introduction</title><sec id="s1-1"><title>Background</title><p>Direct electrical recording of extracellular potentials (<xref ref-type="bibr" rid="bib9">Buzsáki, 2004</xref>; <xref ref-type="bibr" rid="bib70">Seymour et al., 2017</xref>) is one of the most popular modalities for studying neural activity since it is possible to determine, with sub-millisecond time resolution, individual firing events from hundreds (potentially thousands) of cells, and to track the activity of individual neurons over hours or days. Recordings are acquired either from within the living animal (in vivo) or from extracted tissue (ex vivo), at electrodes separated by typically 5–25 µm, with baseline noise on the order of 10 µV RMS and 10–30 kHz sampling rate. Probes for in vivo use—which are usually needle-like to minimize tissue damage during insertion—include microwire monotrodes (<xref ref-type="bibr" rid="bib40">Hubel, 1957</xref>; <xref ref-type="bibr" rid="bib59">Nicolelis et al., 1997</xref>), tetrodes (<xref ref-type="bibr" rid="bib29">Gray et al., 1995</xref>; <xref ref-type="bibr" rid="bib31">Harris et al., 2000</xref>; <xref ref-type="bibr" rid="bib18">Dhawale et al., 2017</xref>), and multi-shank probes (with typically 1–4 columns of electrodes per shank) on silicon (<xref ref-type="bibr" rid="bib16">Csicsvari et al., 2003</xref>; <xref ref-type="bibr" rid="bib9">Buzsáki, 2004</xref>; <xref ref-type="bibr" rid="bib42">Jun et al., 2017b</xref>) or polymer (<xref ref-type="bibr" rid="bib44">Kuo et al., 2013</xref>; <xref ref-type="bibr" rid="bib15">Chung et al., 2019</xref>) substrates. Multiple such probes are often combined into arrays to cover a larger volume in tandem. For ex vivo use (e.g., explanted retina), planar, two-dimensional multi-electrode arrays (MEAs) are common, allowing channel counts of up to tens of thousands (<xref ref-type="bibr" rid="bib22">Eversmann et al., 2003</xref>; <xref ref-type="bibr" rid="bib50">Litke et al., 2004</xref>; <xref ref-type="bibr" rid="bib4">Berdondini et al., 2005</xref>; <xref ref-type="bibr" rid="bib79">Yuan et al., 2016</xref>; <xref ref-type="bibr" rid="bib75">Tsai et al., 2017</xref>).</p><p>Spike sorting is an essential computational step needed to isolate the activity of individual neurons, or units, within extracellular recordings which combine noisy signals from many neurons. Historically, this procedure has relied on manual steps (<xref ref-type="bibr" rid="bib33">Hazan et al., 2006</xref>; <xref ref-type="bibr" rid="bib64">Prentice et al., 2011</xref>; <xref ref-type="bibr" rid="bib68">Rossant et al., 2016</xref>): putative waveforms crossing an amplitude threshold are visualized in a low-dimensional space (either using peak amplitudes or dimensionality reduction techniques), then clusters are separated by eye. While manual spike sorting is manageable with small numbers of recording channels, the rapid growth in channel counts and data volume in recent years as well as the requirement for reproducibility and objectivity demand automated approaches.</p><p>Most automated algorithms apply a sequence of steps that include filtering, detection, dimension reduction, and clustering, although these may be combined with (or replaced by) many other approaches such as template matching (<xref ref-type="bibr" rid="bib64">Prentice et al., 2011</xref>; <xref ref-type="bibr" rid="bib62">Pillow et al., 2013</xref>; <xref ref-type="bibr" rid="bib60">Pachitariu et al., 2016</xref>), dictionary learning or basis pursuit (<xref ref-type="bibr" rid="bib11">Carlson et al., 2014</xref>; <xref ref-type="bibr" rid="bib20">Ekanadham et al., 2014</xref>), and independent component analysis (<xref ref-type="bibr" rid="bib74">Takahashi et al., 2002</xref>; <xref ref-type="bibr" rid="bib6">Buccino et al., 2018</xref>). The past 20 years have seen major efforts to improve these algorithms, with recent work focusing on the challenges arising from probe drift (changing spike waveform shapes), spatiotemporally overlapping spikes, and massive data volumes. We will not attempt a full review here, but instead refer the reader to, for example <xref ref-type="bibr" rid="bib23">Fee et al., 1996</xref>; <xref ref-type="bibr" rid="bib48">Lewicki, 1998</xref>; <xref ref-type="bibr" rid="bib66">Quiroga, 2012</xref>; <xref ref-type="bibr" rid="bib19">Einevoll et al., 2012</xref>; <xref ref-type="bibr" rid="bib67">Rey et al., 2015</xref>; <xref ref-type="bibr" rid="bib47">Lefebvre et al., 2016</xref>; <xref ref-type="bibr" rid="bib34">Hennig et al., 2019</xref>; <xref ref-type="bibr" rid="bib12">Carlson and Carin, 2019</xref>.</p><p>In the last few years, many automated spike sorters have been released and are in wide use. Yet, there is little consensus about which is the best choice for a given probe, brain region and experiment type. Often, decisions are based not on evidence of accuracy or performance but rather on the ease of installation or usage, or historical precedent. Thus, the goals of extracting the highest quality results from experiments and of improving reproducibility across laboratories (<xref ref-type="bibr" rid="bib17">Denker et al., 2018</xref>; <xref ref-type="bibr" rid="bib32">Harris et al., 2016</xref>) make objective comparison of the available automated spike sorters a pressing concern.</p></sec><sec id="s1-2"><title>Prior work</title><p>One approach to assessing spike sorter accuracy is to devise intrinsic quality metrics that are applied to each sorted unit, quantifying, for instance, the feature-space isolation of a cluster of firing events (<xref ref-type="bibr" rid="bib63">Pouzat et al., 2002</xref>; <xref ref-type="bibr" rid="bib69">Schmitzer-Torbert et al., 2005</xref>; <xref ref-type="bibr" rid="bib38">Hill et al., 2011</xref>; <xref ref-type="bibr" rid="bib58">Neymotin et al., 2011</xref>; <xref ref-type="bibr" rid="bib3">Barnett et al., 2016</xref>; <xref ref-type="bibr" rid="bib14">Chung et al., 2017</xref>). Another approach is to use biophysical validation methods such as examining cross-correlograms or discovered place fields (<xref ref-type="bibr" rid="bib49">Li et al., 2015</xref>; <xref ref-type="bibr" rid="bib14">Chung et al., 2017</xref>). However, the gold standard, when possible, is to evaluate the sorter by comparing with ground-truth data, that is using recordings where the spike train for one or more units is known a priori. Laboratory acquisition of such recordings is difficult and time-consuming, demanding simultaneous <italic>paired</italic> extracellular and intra-/juxta-cellular probes (<xref ref-type="bibr" rid="bib31">Harris et al., 2000</xref>; <xref ref-type="bibr" rid="bib25">Franke et al., 2015</xref>; <xref ref-type="bibr" rid="bib57">Neto et al., 2016</xref>; <xref ref-type="bibr" rid="bib78">Yger et al., 2018</xref>; <xref ref-type="bibr" rid="bib1">Allen et al., 2018</xref>; <xref ref-type="bibr" rid="bib51">Marques-Smith et al., 2018a</xref>). Since the number of ground-truth units collected in this way is currently small (one per recording), <italic>hybrid</italic> recordings (where known synthetic firing events are added to experimental data) (<xref ref-type="bibr" rid="bib53">Marre et al., 2012</xref>; <xref ref-type="bibr" rid="bib73">Steinmetz, 2015</xref>; <xref ref-type="bibr" rid="bib68">Rossant et al., 2016</xref>; <xref ref-type="bibr" rid="bib60">Pachitariu et al., 2016</xref>; <xref ref-type="bibr" rid="bib77">Wouters et al., 2019</xref>), and biophysically detailed <italic>simulated</italic> recordings (<xref ref-type="bibr" rid="bib10">Camuñas-Mesa and Quiroga, 2013</xref>; <xref ref-type="bibr" rid="bib30">Hagen et al., 2015</xref>; <xref ref-type="bibr" rid="bib28">Gratiy et al., 2018</xref>; <xref ref-type="bibr" rid="bib8">Buccino and Einevoll, 2019</xref>), which can contain 1–2 orders of magnitude more ground-truth units, have also been made available for the purpose of method validation.</p><p>Recently, such ground-truth data have been used to compare new spike sorting algorithms against preexisting ones (<xref ref-type="bibr" rid="bib19">Einevoll et al., 2012</xref>; <xref ref-type="bibr" rid="bib60">Pachitariu et al., 2016</xref>; <xref ref-type="bibr" rid="bib14">Chung et al., 2017</xref>; <xref ref-type="bibr" rid="bib41">Jun et al., 2017a</xref>; <xref ref-type="bibr" rid="bib46">Lee et al., 2017</xref>; <xref ref-type="bibr" rid="bib78">Yger et al., 2018</xref>). However, the choice of accuracy metrics, sorters, data sets, parameters, and code versions varies among studies, making few of the results reproducible, transparent, or comprehensive enough to be of long-term use for the community. To alleviate these issues, a small number of groups initiated web-facing projects to benchmark spike sorter accuracy, notably G-Node (<xref ref-type="bibr" rid="bib24">Franke et al., 2012</xref>), a phy hybrid study (<xref ref-type="bibr" rid="bib73">Steinmetz, 2015</xref>) and spikesortingtest (<xref ref-type="bibr" rid="bib55">Mitelut, 2016</xref>). To our knowledge, these unmaintained projects are either small-scale snapshots or are only partially realized. Yet, in the related area of calcium imaging, leaderboard-style comparison efforts have been more useful for establishing community benchmarks (<xref ref-type="bibr" rid="bib26">Freeman, 2015</xref>; <xref ref-type="bibr" rid="bib5">Berens et al., 2018</xref>).</p></sec><sec id="s1-3"><title>SpikeForest</title><p>We have addressed the above needs by creating and deploying the SpikeForest software suite. SpikeForest comprises a large database of electrophysiological recordings with ground truth (collected from the community), a parallel processing pipeline that benchmarks the performance of many automated spike sorters, and an interactive website that allows for in-depth exploration of the results. At present, the database includes hundreds of recordings, of the types specified above (paired and state-of-the-art biophysical simulation), contributed by eleven laboratories and containing more than 30,000 ground-truth units. Our pipeline runs the various sorters on the recordings, then finds, for each ground-truth unit, the sorted unit whose firing train is the best match, and finally computes metrics involving the numbers of correct, missing, and false positive spikes. A set of accuracy evaluation metrics are then derived per ground-truth unit for each sorter. By averaging results from many units of a similar recording type, we provide high-level accuracy summaries for each sorter in various experimental settings. In order to understand the failure modes of each sorter, SpikeForest further provides various interactive plots.</p><p>A central aim of this project is to maximize the transparency and reproducibility of the analyses. To this end, all data—the set of recordings, their ground-truth firings, and firing outputs from all sorters—are available for public download via our Python API. SpikeForest itself is open-source, as are the wrappers to all sorters, the Docker (<xref ref-type="bibr" rid="bib54">Merkel, 2014</xref>) containers, and all of the parameter settings used in the current study results. In fact, code to rerun any sorting task may be requested via the web interface, and is auto-generated on the fly. Both the code and the formulae (for accuracy, SNR, and other metrics) are documented on the site, with links to the source code repositories.</p></sec><sec id="s1-4"><title>Contribution</title><p>Our work has three main objectives. The primary goal is to aid neuroscientists in selecting the optimal spike sorting software (and algorithm parameters) for their particular probe, brain region, or application. A second goal is to spur improvements in current and future spike sorting software by providing standardized evaluation criteria. This has already begun to happen as developers of some spike sorting algorithms have already made improvements in direct response to this project. As a byproduct, and in collaboration with the SpikeInterface project (<xref ref-type="bibr" rid="bib7">Buccino et al., 2019</xref>), we achieve a third objective of providing a software package which enables laboratories to run a suite of many popular, open-source, automatic spike sorters, on their own recordings via a unified Python interface.</p></sec></sec><sec id="s2" sec-type="results"><title>Results</title><p>In conjunction with the SpikeInterface project (<xref ref-type="bibr" rid="bib7">Buccino et al., 2019</xref>), the SpikeForest Python package provides standardized wrappers for the following popular spike sorters: HerdingSpikes2 (<xref ref-type="bibr" rid="bib37">Hilgen et al., 2017</xref>), IronClust (Jun et al., in preparation), JRCLUST (<xref ref-type="bibr" rid="bib41">Jun et al., 2017a</xref>), KiloSort (<xref ref-type="bibr" rid="bib60">Pachitariu et al., 2016</xref>), KiloSort2 (<xref ref-type="bibr" rid="bib61">Pachitariu et al., 2019</xref>), Klusta (<xref ref-type="bibr" rid="bib68">Rossant et al., 2016</xref>), MountainSort4 (<xref ref-type="bibr" rid="bib14">Chung et al., 2017</xref>), SpyKING CIRCUS (<xref ref-type="bibr" rid="bib78">Yger et al., 2018</xref>), Tridesclous (<xref ref-type="bibr" rid="bib27">Garcia and Pouzat, 2019</xref>), and WaveClus (<xref ref-type="bibr" rid="bib13">Chaure et al., 2018</xref>; <xref ref-type="bibr" rid="bib65">Quiroga et al., 2004</xref>). Details of each of these algorithms are provided in <xref ref-type="table" rid="table1">Table 1</xref>. Since each of these spike sorters operates within a unique computing environment, we utilize Docker (<xref ref-type="bibr" rid="bib54">Merkel, 2014</xref>) and Singularity (<xref ref-type="bibr" rid="bib45">Kurtzer et al., 2017</xref>) containers to rigorously encapsulate the versions and prerequisites for each algorithm, ensuring independent verifiability of results, and circumventing software library conflicts.</p><p>The electrophysiology recordings (together with ground-truth information) registered in SpikeForest are organized into <italic>studies</italic>, and studies are then grouped into <italic>study sets</italic>. <xref ref-type="table" rid="table1">Table 1</xref> details all study sets presently in the system. Recordings within a study set share a common origin (e.g., laboratory) and type (e.g., paired), whereas recordings within the same study are associated with very similar simulation parameters or experimental conditions.</p><table-wrap id="table1" position="float"><label>Table 1.</label><caption><title>Table of spike sorting algorithms currently included in the SpikeForest analysis.</title><p>Each algorithm is registered into the system via a Python wrapper. A Docker recipe defines the operating system and environment where the sorter is run. Algorithms with asterisks were updated and optimized using SpikeForest data. For the other algorithms, we used the default or recommended parameters.</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Sorting algorithm</th><th>Language</th><th>Notes</th></tr></thead><tbody><tr><td>HerdingSpikes2*</td><td>Python</td><td>Designed for large-scale, high-density multielectrode arrays. See <xref ref-type="bibr" rid="bib37">Hilgen et al., 2017</xref>.</td></tr><tr><td>IronClust*</td><td>MATLAB and CUDA</td><td>Derived from JRCLUST. See Jun et al., in preparation.</td></tr><tr><td>JRCLUST</td><td>MATLAB and CUDA</td><td>Designed for high-density silicon probes. See <xref ref-type="bibr" rid="bib41">Jun et al., 2017a</xref>.</td></tr><tr><td>KiloSort</td><td>MATLAB and CUDA</td><td>Template matching. See <xref ref-type="bibr" rid="bib60">Pachitariu et al., 2016</xref>.</td></tr><tr><td>KiloSort2</td><td>MATLAB and CUDA</td><td>Derived from KiloSort. See <xref ref-type="bibr" rid="bib61">Pachitariu et al., 2019</xref>.</td></tr><tr><td>Klusta</td><td>Python</td><td>Expectation-Maximization masked clustering. See <xref ref-type="bibr" rid="bib68">Rossant et al., 2016</xref>.</td></tr><tr><td>MountainSort4</td><td>Python and C++</td><td>Density-based clustering via ISO-SPLIT. See <xref ref-type="bibr" rid="bib14">Chung et al., 2017</xref>.</td></tr><tr><td>SpyKING CIRCUS*</td><td>Python and MPI</td><td>Density-based clustering and template matching. See <xref ref-type="bibr" rid="bib78">Yger et al., 2018</xref>.</td></tr><tr><td>Tridesclous*</td><td>Python and OpenCL</td><td>See <xref ref-type="bibr" rid="bib27">Garcia and Pouzat, 2019</xref>.</td></tr><tr><td>WaveClus</td><td>MATLAB</td><td>Superparamagnetic clustering. See <xref ref-type="bibr" rid="bib13">Chaure et al., 2018</xref>; <xref ref-type="bibr" rid="bib65">Quiroga et al., 2004</xref>.</td></tr></tbody></table></table-wrap><table-wrap id="table2" position="float"><label>Table 2.</label><caption><title>Table of study sets currently included in the SpikeForest analysis.</title><p>Study sets fall into three categories: paired, synthetic, and curated. Each study set comprises one or more studies, which in turn comprise multiple recordings acquired or generated under the same conditions.</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Study set</th><th># Rec. / # Elec. / Dur.</th><th>Source lab.</th><th>Description</th></tr></thead><tbody><tr><td>Paired intra/extracellular</td><td/><td/><td/></tr><tr><td>PAIRED_BOYDEN</td><td>19 / 32ch / 6-10min</td><td>E. Boyden</td><td>Subselected from 64, 128, or 256-ch. probes, mouse cortex</td></tr><tr><td>PAIRED_CRCNS_HC1</td><td>93 / 4-6ch / 6-12min</td><td>G. Buzsaki</td><td>Tetrodes or silicon probe (one shank) in rat hippocampus</td></tr><tr><td>PAIRED_ENGLISH</td><td>29 / 4-32ch / 1-36min</td><td>D. English</td><td>Hybrid juxtacellular-Si probe, behaving mouse, various regions</td></tr><tr><td>PAIRED_KAMPFF</td><td>15 / 32ch / 9-20min</td><td>A. Kampff</td><td>Subselected from 374, 127, or 32-ch. probes, mouse cortex</td></tr><tr><td>PAIRED_MEA64C_YGER</td><td>18 / 64ch / 5min</td><td>O. Marre</td><td>Subselected from 252-ch. MEA, mouse retina</td></tr><tr><td>PAIRED_MONOTRODE</td><td>100 / 1ch / 5-20min</td><td>Boyden, Kampff, Marre, Buzsaki</td><td>Subselected from paired recordings from four labs</td></tr><tr><td>Simulation</td><td/><td/><td/></tr><tr><td>SYNTH_BIONET</td><td>36 / 60ch / 15min</td><td>AIBS</td><td>BioNet simulation containing no drift, monotonic drift, and random jumps; used by JRCLUST, IronClust</td></tr><tr><td>SYNTH_JANELIA</td><td>60 / 4-64ch / 5-20min</td><td>M. Pachitariu</td><td>Distributed with KiloSort2, with and without simulated drift</td></tr><tr><td>SYNTH_MAGLAND</td><td>80 / 8ch / 10min</td><td>Flatiron Inst.</td><td>Synthetic waveforms, Gaussian noise, varying SNR, channel count and unit count</td></tr><tr><td>SYNTH_MEAREC_NEURONEX</td><td>60 / 32ch / 10min</td><td>A. Buccino</td><td>Simulated using MEAREC, varying SNR and unit count</td></tr><tr><td>SYNTH_MEAREC_TETRODE</td><td>40 / 4ch / 10min</td><td>A. Buccino</td><td>Simulated using MEAREC, varying SNR and unit count</td></tr><tr><td>SYNTH_MONOTRODE</td><td>111 / 1ch / 10min</td><td>Q. Quiroga</td><td>Simulated by Quiroga lab by mixing averaged real spike waveforms</td></tr><tr><td>SYNTH_VISAPY</td><td>6 / 30ch / 5min</td><td>G. Einevoll</td><td>Generated using VISAPy simulator</td></tr><tr><td>Human curated</td><td/><td/><td/></tr><tr><td>MANUAL_FRANKLAB</td><td>21 / 4ch / 10-40min</td><td>L. Frank</td><td>Three manual curations of the same recordings</td></tr></tbody></table></table-wrap><p>Each time the collection of spike sorting algorithms and ground-truth datasets are updated, our pipeline, depicted in <xref ref-type="fig" rid="fig1">Figure 1</xref>, reruns the ten sorters on the recordings. It then finds, for each ground-truth unit, the sorted unit whose firing train is the best match, and finally computes metrics involving the numbers of correct, missing, and false positive spikes. A set of accuracy evaluation metrics are then derived per ground-truth unit for each sorter and displayed on the website.</p><fig id="fig1" position="float"><label>Figure 1.</label><caption><title>Simplified flow diagram of the SpikeForest analysis pipeline.</title><p>Each in a collection of spike sorting codes (top) are run on each recording with ground truth (left side) to yield a large matrix of sorting results and accuracy metrics (right). See the section on comparison with ground truth for mathematical notations. Recordings are grouped into ‘studies’, and those into ‘study sets’; these share features such as probe type and laboratory of origin. The web interface summarizes the results table by grouping them into study sets (as in <xref ref-type="fig" rid="fig2">Figure 2</xref>), but also allows drilling down to the single study and recording level. Aspects such as extraction of mean waveforms, representative firing events, and computation of per-unit SNR are not shown, for simplicity.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-55167-fig1-v1.tif"/></fig><fig id="fig2" position="float"><label>Figure 2.</label><caption><title>Main results table from the SpikeForest website showing aggregated results for 10 algorithms applied to 13 registered study sets.</title><p>The left columns of the table show the average accuracy (see (5)) obtained from averaging over all ground-truth units with SNR above an adjustable threshold, here set to 8. The right columns show the number of ground-truth units with accuracy above an adjustable threshold, here set to 0.8. The first five study sets contain paired recordings with simultaneous extracellular and juxta- or intra-cellular ground truth acquisitions. The next six contain simulations from various software packages. The SYNTH_JANELIA, obtained from <xref ref-type="bibr" rid="bib61">Pachitariu et al., 2019</xref>, is simulated noise with realistic spike waveforms superimposed at known times. The last study set is a collection of human-curated tetrode data. An asterisk indicates an incomplete (timed out) or failed sorting on a subset of results; in these cases, missing accuracies are imputed using linear regression as described in the Materials and methods. Empty cells correspond to excluded sorter/study set pairs. These results reflect the analysis run of March 23rd, 2020.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-55167-fig2-v1.tif"/></fig><sec id="s2-1"><title>Web interface</title><p>The results of the latest SpikeForest analysis may be found at <ext-link ext-link-type="uri" xlink:href="https://spikeforest.flatironinstitute.org">https://spikeforest.flatironinstitute.org</ext-link> and are updated on a regular basis as the ground-truth recordings, sorting algorithms, and sorting parameters are adjusted based on community input. The central element of this web page is the main results matrix (<xref ref-type="fig" rid="fig2">Figure 2</xref>) which summarizes results for each sorter listed in <xref ref-type="table" rid="table1">Table 1</xref> (using formulae defined later by <xref ref-type="disp-formula" rid="equ5">Equation 5</xref>). The average accuracies are mapped to a color scale (heat map), with darker blue indicating higher accuracy, using a nonlinear mapping designed to highlight differences at the upper end. For the average accuracy table on the left, only ground-truth units with SNR above a user-adjustable threshold are included in the average accuracy calculations; the user may then explore interactively the effect of unit amplitude on the sorting accuracies of all sorters. If a sorter either crashes or times out (&gt;1 hr run time) on any recording in a study set, an asterisk is appended to that accuracy result, and the missing values are imputed using linear regression as described in the Materials and methods section (there is also an option to simply exclude the missing data from the calculation).</p><p>The right table of <xref ref-type="fig" rid="fig2">Figure 2</xref> displays the number of ground truth units with accuracy above a user-adjustable threshold (0.8 by default), regardless of SNR. This latter table may be useful for determining which sorters should be used for applications that benefit from a high yield of accurately sorted units and where the acceptable accuracy threshold is known. The website also allows easy switching between three evaluation metrics (accuracy, precision, and recall) as described in the section on comparison with ground truth.</p><p>Clicking on any result expands the row into its breakdown across studies. Further breakdowns are possible by clicking on the study names to reveal individual recordings. Clicking on any result brings up a scatter plot of accuracy vs. SNR for each ground-truth unit for that study/sorter pair (e.g., <xref ref-type="fig" rid="fig3">Figure 3</xref>, left side). Additional information can then be obtained by clicking on the markers for individual units, revealing individual spike waveforms (e.g., <xref ref-type="fig" rid="fig3">Figure 3</xref>, right side).</p><fig id="fig3" position="float"><label>Figure 3.</label><caption><title>Screenshots from the SpikeForest website.</title><p>(left) Scatter plot of accuracy vs. SNR for each ground-truth unit, for a particular sorter (KiloSort2) and study (a simulated drift dataset from the SYNTH_JANELIA study set). The SNR threshold for the main table calculation is shown as a dashed line, and the user-selected unit is highlighted. Marker area is proportional to the number of events, and the color indicates the particular recording within the study. (right) A subset of spike waveforms (overlaid) corresponding to the selected ground truth unit, in four categories: ground truth, sorted, false negative, and false positive.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-55167-fig3-v1.tif"/></fig></sec><sec id="s2-2"><title>Parallel operation and run times</title><p>Since neuroscientist users also need to compare the efficiencies (speeds) of algorithms, we measure total computation time for each algorithm on each study, and provide this as an option for display on the website via a heat map. Run times are measured using our cluster pipeline, which allocates a single core to each sorting job on shared-memory multi-core machines (with GPU resources as needed). Since many jobs thus share I/O and RAM bandwidth on a given node, these cannot be taken as accurate indicators of speeds in ideal, or even typical, laboratory settings. We emphasize that our pipeline has been optimized for generation and updating of the accuracy results, not for speed benchmarking. For these reasons, we will not present run time comparisons in this paper, referring the interested reader to the website. Here we only note that older sorters such as Klusta can be over 30 times slower than more recent GPU-enabled sorters such as KiloSort and IronClust.</p><p>At present, the total compute time for the 650 recordings and 10 sorters is 380 core hours, yet it takes only 3–4 hr (excluding failing jobs) to complete this analysis when run in parallel on our compute cluster with up to 100–200 jobs running simultaneously (typically 14 jobs per node). Since the system automatically detects which results require updating, the pipeline may be run on a daily basis utilizing minimal compute resources for the usual situation where few (if any) updates are needed.</p></sec><sec id="s2-3"><title>Sorter accuracy comparison results</title><p>We now draw some initial conclusions about the relative performances of the spike sorters based on the threshold choices in <xref ref-type="fig" rid="fig2">Figure 2</xref>. No single spike sorter emerged as the top performer in all study sets, with IronClust, KiloSort2, MountainSort4, and SpyKING CIRCUS each appearing among the most accurate in at least six of the study sets.</p><p>The higher average accuracy of KiloSort2 over its predecessor KiloSort is evident, especially for paired recordings. However, in synthetic studies, particularly tetrodes, KiloSort finds more units above accuracy 0.8 than KiloSort2. Scatter plots (e.g., <xref ref-type="fig" rid="fig3">Figure 3</xref>, left side) show that KiloSort2 can retain high accuracy down to lower SNR than other sorters, but not for all such low-SNR units. While KiloSort2 was among the best performers for six of the study sets, KiloSort and KiloSort2 had higher numbers of crashes than any of the other sorters, including crashing on every one of the SYNTH_VISAPY recordings. It is likely that modifications to sorting parameters could reduce the number of crashes, but attempts so far, including contacting the author, have not yet fixed this problem. In the synthetic datasets, KiloSort2 had the largest number of <italic>false positive units</italic> (distinct from the false positive rate of a single unit), but this is not currently reported by SpikeForest (see Discussion).</p><p>IronClust appears among the top average accuracies for eight of the study sets, and is especially strong for the simulated and drifting recordings. For most study sets, IronClust has improved accuracy over its predecessor JRCLUST, and is also improved in terms of speed and reliability (no crashes observed). Although a substantial portion of the development of the IronClust software took place while it had access to the SpikeForest ground truth datasets, the same sorting parameters are used across all studies, limiting the potential for overfitting (see Discussion).</p><p>MountainSort4 is among the top performers for six of the study sets (based on the average accuracy table) and does particularly well for the low-channel-count datasets (monotrodes and tetrodes). It is not surprising that MountainSort4 is the top performer for MANUAL_FRANKLAB because that data source was used in development of the algorithm (<xref ref-type="bibr" rid="bib14">Chung et al., 2017</xref>).</p><p>When considering the left table (average accuracy), SpyKING CIRCUS is among the best sorters for ten study sets. However, it ranks a lot lower in the unit count table on the right of <xref ref-type="fig" rid="fig2">Figure 2</xref>. This was an example of a sorter that improved over a period of months as a result of using SpikeForest for benchmarking.</p><p>HerdingSpikes2 was developed for high-density MEA probes and uses a 2D estimate of the spike location, hence was applied only for recordings with a sufficiently planar electrode array structure (this excluded tetrodes and linear probes). For PAIRED_MEA64C_YGER its performance was similar to other top sorters, but in the other study sets, it was somewhat less accurate. One advantage of HerdingSpikes2 not highlighted in the results table is that it is computationally efficient for large arrays, even without using a GPU.</p><p>Tridesclous is among the top performers for both MEAREC study sets and for PAIRED_MEA64C_YGER, but had a substantially lower accuracy for most of the other datasets. This algorithm appears to struggle with lower-SNR units.</p><p>Klusta is substantially less accurate than other sorters in most of the study sets, apart from MANUAL_FRANKLAB where, surprisingly, it found the most units above accuracy 0.8 of any sorter. It also has one of the highest crash/timeout rates.</p><p>The version of WaveClus used in SpikeForest is only suited for (and only run on) monotrodes; a new version of WaveClus now supports polytrodes, but we have not yet integrated it. We included both paired and synthetic monotrode study sets with studies taken from selected single electrodes of other recordings. Four sorters (HerdingSpikes2, JRCLUST, KiloSort, and KiloSort2) were unable to sort this type of data. Of those that could, MountainSort4 was the most accurate, with accuracies slightly higher than WaveClus.</p><p>An eleventh algorithm, Yet Another Spike Sorter (YASS) (<xref ref-type="bibr" rid="bib46">Lee et al., 2017</xref>), was not included in the comparison because, even after considerable effort and reaching out to the authors, its performance was too poor, leading us to suspect an installation or configuration problem. We plan to include YASS in a future version of the analysis.</p></sec><sec id="s2-4"><title>Precision and recall results</title><p>Depending on the scientific question being asked, researchers may want to place a greater importance on maximizing either precision or recall. Precision is the complement of the false positives rate which corresponds to spikes incorrectly labeled as coming from some true neuron. A low precision (high number of false positives) may result in illusory correlations between units and a potentially false conclusion that the neurons are interacting, or may result in a false correlation between a unit firing and some stimulus or task. A low recall, on the other hand, means a large fraction of the true firing events are missed, causing a general reduction in putative firing rates, and also possibly introducing false correlations.</p><p><xref ref-type="fig" rid="fig4">Figure 4</xref> shows aggregated precision and recall scores for the results in the main SpikeForest table, again using the SNR threshold of 8 (keep in mind that conclusions can depend strongly on this threshold). We will not attempt to summarize the entire set of results, only to make two observations. For the paired studies, the sorters that have the highest precisions are IronClust, KiloSort2, MountainSort4, and SpyKING CIRCUS. For the paired and manual studies, precisions are generally a lot lower than recalls, across most sorters. Interestingly, this is <italic>not</italic> generally true for the synthetic studies (where often the precision is higher than recall), indicating that, despite the sophistication of many of these simulations, they may not yet be duplicating the firing and noise statistics of real-world electrophysiology recordings.</p><fig id="fig4" position="float"><label>Figure 4.</label><caption><title>Results table from the SpikeForest website, similar to the left side of <xref ref-type="fig" rid="fig2">Figure 2</xref> except showing aggregated precision and recall scores rather than accuracy.</title><p>Precision measures how well the algorithm avoids false positives, whereas recall is the complement of the false negative rate. An asterisk indicates an incomplete (timed out) or failed sorting on a subset of results; in these cases, missing accuracies are imputed using linear regression as described in the Materials and methods. Empty cells correspond to excluded sorter/study set pairs. These results reflect the analysis run of March 23rd, 2020.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-55167-fig4-v1.tif"/></fig></sec><sec id="s2-5"><title>How well can quality metrics predict accuracy?</title><p>In addition to informing the selection of a spike sorter, our SpikeForest analysis provides an unprecedented opportunity to compare various quality metrics that can be used to accept or reject sorted units when ground truth is not available (i.e., in a laboratory setting). For each sorter, what is the quality metric (or combination thereof) most predictive of actual accuracy? <xref ref-type="fig" rid="fig5">Figure 5</xref> is based on the SYNTH_JANELIA tetrode study and shows the relationships between ground-truth accuracy and three metrics of the sorted units: SNR, mean firing rate, and inter-spike interval violation rate (ISI-vr) (<xref ref-type="bibr" rid="bib38">Hill et al., 2011</xref>). The latter is the ratio between the number of refractory period violations (2.5 ms threshold) and the expected number of violations under a Poisson spiking assumption. We observe that these relationships are <italic>highly dependent</italic> on the spike sorter. For IronClust, the SNR and log ISI-vr are predictive of accuracy, whereas firing rate is much less predictive. For KiloSort and SpyKING CIRCUS, firing rate and SNR are both predictive, but log ISI-vr does not appear to correlate. For KiloSort2 and MountainSort4, firing rate is the only predictive metric of the three. The final column in this plot shows that a linear combination of metrics is a better predictor than any metric alone. We note that this predictive ability will also depend on the recording type, and, in this case, fidelity of the simulation. For these reasons it is an important future task to extend this type of study across the entire database; see the discussion below.</p><fig id="fig5" position="float"><label>Figure 5.</label><caption><title>Relationship between ground-truth accuracy and three quality metrics for all sorted units (with SNR ≥5), for the SYNTH_JANELIA tetrode study and five spike sorting algorithms.</title><p>Each marker represents a sorted unit. The x-axis of the plots in the final column is the predicted accuracy via linear regression using all three predictors (SNR, firing rate, and log ISI-vr).</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-55167-fig5-v1.tif"/></fig></sec></sec><sec id="s3" sec-type="discussion"><title>Discussion</title><p>We have introduced a Python framework and public website for evaluating and comparing many popular spike sorting algorithms by running them on a large and diverse set of curated electrophysiology datasets with ground truth. We have described the principal features of the website. The Materials and methods section details how we prepared ground truth data of varying types (paired, synthetic, and manually-curated) and apply the algorithms in a uniform, transparent, and unbiased manner. We have summarized initial findings comparing sorter accuracies, and invite the reader to explore the continually updating results on the live site.</p><p>One conclusion is that (as of this time) there is no single sorter that is the most accurate across a diversity of probe types, experimental conditions, metric types and SNR cut-offs. Rather, several different sorters are optimal in different settings. For example, MountainSort4 performs especially well for low channel counts (tetrodes and monotrodes), IronClust excels in the simulated and drifting datasets, while KiloSort2 retains higher accuracy (for units that are found) at lower SNR than other sorters.</p><p>Our contribution also helps to overcome some practical issues with neurophysiology research in the laboratory. Traditionally, spike sorting codes bring special requirements for installation and custom input/output file formats, and also require expertise in sorting parameter selection and using visualization and curation utilities intimately tied to that code. This problem has been exacerbated by the use of GPU computing to improve performance in recently developed codes. It is therefore challenging, and unusual, for a laboratory to have more than one or two installed sorters for in-house evaluation. Part of this obstacle is overcome by the SpikeInterface project (<xref ref-type="bibr" rid="bib7">Buccino et al., 2019</xref>), which SpikeForest utilizes, but another part is solved by the Docker and Singularity containers that we have developed to fully capture the operating system environments needed by each sorter.</p><p>In the past, comparisons between spike sorting algorithms have been biased or limited. Almost all have been presented in the context of a new or improved method, and so the choice of simulations used for evaluation can often be (unintentionally) biased toward showing that the new method is superior. Given only such reports, it is impractical for readers to verify that the various sorters were used properly and with sensible parameters. The openness and reproducibility of SpikeForest in part remedies this situation.</p><sec id="s3-1"><title>Validation approach and challenges</title><p>There are many ongoing challenges to the validation of spike sorters. Although human curation is still part of the spike sorting analysis pipeline in most labs, the increase in the potential yield from recently developed high-density recording devices will soon make this step infeasible. We therefore have adopted the philosophy that spike sorting algorithms should be evaluated in an automated reproducible fashion on recordings that we make publicly available, and that, when used for benchmarking purposes, the algorithms should be wrapped and run server-side without the possibility of human curation of their output. This follows evaluation efforts for automated clustering algorithms such as ClustEval (<xref ref-type="bibr" rid="bib76">Wiwie et al., 2015</xref>). We constrast this to ‘competition’-style efforts (<xref ref-type="bibr" rid="bib24">Franke et al., 2012</xref>; <xref ref-type="bibr" rid="bib26">Freeman, 2015</xref>; <xref ref-type="bibr" rid="bib5">Berens et al., 2018</xref>) which allow contributions of (potentially non-reproducible) sorting results, and which report accuracy on held-out data whose ground truth is necessarily private, and thus cannot be interrogated by the community.</p><p>Although some effort has been made to choose good parameters for each sorter, optimal choices are not guaranteed. We anticipate that a use case for SpikeForest will be finding the best combination of sorter and parameters for a particular recording type. However, automated parameter optimization (as in ClustEval by <xref ref-type="bibr" rid="bib76">Wiwie et al., 2015</xref>) has not yet been implemented, since it would multiply the total CPU cost by a large factor. For now, we encourage the community to contact us with improved settings or algorithms. Indeed, we reached out to the developers of all ten tested sorters in mid-2019 with preliminary results, and several developers (including at least those of SpyKING CIRCUS, HerdingSpikes2, IronClust, and Tridesclous; see <xref ref-type="table" rid="table1">Table 1</xref>) have already used SpikeForest to improve their software. We emphasize that, for reproducibility, sorter versions and parameter choices used for each date-stamped analysis are available in the downloadable analysis archives linked from the website.</p><p>This raises the issue of potential <italic>overfitting</italic>. Because all SpikeForest data are public, the community may continue to optimize sorters using SpikeForest as a benchmark, so one might wonder if this will lead to SpikeForest metrics which overestimate true real-world performance. We believe that such bias will be small, and certainly smaller than the bias of studies conducted in order to propose a single sorting algorithm, for the following reasons. 1) Our database is large and diverse, comprising 13 different types of study sets. It is difficult to imagine overfitting to 650 different recordings by optimizing even dozens of parameters, and, while we allow the potential (as yet unused) for different parameter choices for different studies, multiple recordings would still have to be overfit by one parameter set. 2) All code and parameter settings are available for public inspection, making the above style of parameter and algorithm hacking obvious, were it to occur. We feel that the benefit to the community of improved, validated sorters far outweighs the risk of overfitting. Naturally, SpikeForest results <italic>are</italic> biased towards the types of neurons and conditions for which ground-truth data exist; by keeping results for different study sets separate we expose such biases as much as possible. In the long run, we appreciate that <italic>both</italic> held-out and open data benchmarks will play a useful role in comparison and standardization.</p><p>Another issue is the paucity of paired ground-truth units in the database, a consequence of the time-consuming nature of their collection. For instance the study set PAIRED_KAMPFF has 15 units, of which only 11 have sufficient SNR to be sortable by any of the sorters. Therefore a <italic>single</italic> false split or merge by a sorter can lead to variations in reported study-averaged accuracy as large as ±0.05, and dictate the most accurate sorter for that study set. In (small-scale) laboratory pipelines it is possible that such splits or merges would be detected by expert human curation; the point of SpikeForest is to measure the performance of purely automated algorithms. Such variance will be reduced as the size of the ground-truth studies increases.</p></sec><sec id="s3-2"><title>Future work</title><p>The above issues help inform several specific future goals:</p><list list-type="order"><list-item><p>We plan to report false positive units. Currently only the one sorted unit which best matches each ground-truth unit is assessed for accuracy. Thus, there is no penalty for a sorter which generates many spurious units that are not present in the data (this is necessarily true for KiloSort in most cases, since the number of returned units is set in advance by the user). Results from such a sorter would of course then be less credible, and, even if examined by an expert, much harder to curate. This failure mode is <italic>not</italic> revealed by paired recordings; however, in simulations (where every single firing is ground truth) a new metric capturing the fraction of such spurious units will be included (see <xref ref-type="bibr" rid="bib7">Buccino et al., 2019</xref>).</p></list-item><list-item><p>SpikeForest does not directly address the common laboratory task of deciding, given a new sorting of electrophysiology recordings, which neural units are to be trusted and which discarded. Assessing the credibility of putative neural units output by spike sorters remains a crucial question, and many quality metrics are used in practice, including SNR, firing rate, metrics of cluster isolation or separation from the ‘noise cluster’, stability, and cross-correlograms (<xref ref-type="bibr" rid="bib63">Pouzat et al., 2002</xref>; <xref ref-type="bibr" rid="bib69">Schmitzer-Torbert et al., 2005</xref>; <xref ref-type="bibr" rid="bib38">Hill et al., 2011</xref>; <xref ref-type="bibr" rid="bib58">Neymotin et al., 2011</xref>; <xref ref-type="bibr" rid="bib3">Barnett et al., 2016</xref>; <xref ref-type="bibr" rid="bib14">Chung et al., 2017</xref>). Yet, because of its scale, the SpikeForest database provides a unique opportunity to tabulate such quality metrics for multiple sorter outputs, then correlate each to the actual ground-truth accuracy, with the goal of assessing the <italic>predictive power</italic> of each metric, or combinations thereof. <xref ref-type="fig" rid="fig5">Figure 5</xref> showed such a metric comparison for just one of the SpikeForest studies. We are now poised to scale this up to the entire database and a wider set of metrics.</p></list-item><list-item><p>Most of the ground truth recordings in our database have a relatively short duration, on the order of 10 min. When waveform drift is not a factor, this duration usually yields enough events per unit to satisfy the requirements of clustering algorithms. However, when waveform drift is present, it is important to assess the performance of spike sorters for a greater range of recording durations. We plan to provide examples of longer duration datasets (on the order of 1–2 hr) in future iterations.</p></list-item><list-item><p>It is currently not as easy as it could be to identify common failure modes such as false merges and false splits. We plan to display <italic>confusion matrices</italic> (see, e.g., <xref ref-type="bibr" rid="bib3">Barnett et al., 2016</xref>) between ground-truth and a given sorting; this would also allow comparison between two different sorter outputs.</p></list-item><list-item><p>We plan to add accuracy evaluations taylored to specific tasks, such as the ability to handle probe drift and/or long recording durations (currently only three synthetic studies explicitly test drift). The website could, for instance, visualize successful tracking as a function of time.</p></list-item><list-item><p>The comparison of CPU time for each sorter is currently sub-optimal, because multiple sorters may be running on one node. We plan to include special timing comparisons on dedicated nodes in order to reflect actual laboratory use cases.</p></list-item><list-item><p>The number of sorter job crashes and time-outs needs be reduced, which requires detailed diagnosis on many sorter-recording pairs. For instance, currently KiloSort2 has a larger proportion of crashes or time-outs than many other sorters, yet this is not fully understood and not quantified in accuracy summary results.</p></list-item><list-item><p>Finally, we envision that the machinery of SpikeForest could be used for a <italic>web-based</italic> spike sorting platform, to which users would upload their data (which becomes public), run possibly more than one sorter, visualize, curate, and download the results. This could render all spike sorting and human curation affecting the downstream science analysis accessible and reproducible.</p></list-item></list><p>We anticipate that, as the use and scale of spike sorting as a tool continues to grow, SpikeForest will become a resource for comparison and validation of sorter codes and encourage more rigorous reproducibility in neuroscience. To this end, we seek contributions and input from the electrophysiology community, both to optimize parameter settings for existing algorithms, and to further expand the set of algorithms and ground-truth recordings included in the analysis.</p></sec></sec><sec id="s4" sec-type="materials|methods"><title>Materials and methods</title><sec id="s4-1"><title>Ground-truth recordings</title><p>The thirteen study sets included in the SpikeForest analysis are detailed in <xref ref-type="table" rid="table2">Table 2</xref> and are grouped according to type (paired, simulated, curated).</p><sec id="s4-1-1"><title>Paired recordings</title><p>We selected 145 paired recordings from raw extracellular recordings that were publicly released or otherwise provided to us by four laboratories (<xref ref-type="bibr" rid="bib35">Henze et al., 2000</xref>; <xref ref-type="bibr" rid="bib31">Harris et al., 2000</xref>; <xref ref-type="bibr" rid="bib36">Henze et al., 2009</xref>; <xref ref-type="bibr" rid="bib57">Neto et al., 2016</xref>; <xref ref-type="bibr" rid="bib1">Allen et al., 2018</xref>; <xref ref-type="bibr" rid="bib51">Marques-Smith et al., 2018a</xref>; <xref ref-type="bibr" rid="bib52">Marques-Smith et al., 2018b</xref>; <xref ref-type="bibr" rid="bib78">Yger et al., 2018</xref>; <xref ref-type="bibr" rid="bib72">Spampinato et al., 2018</xref>). The intracellular spike times were taken from the author-reported values unless they were not provided (<xref ref-type="bibr" rid="bib36">Henze et al., 2009</xref>). 93 of these we prepared from raw Buzsáki laboratory recordings (<xref ref-type="bibr" rid="bib35">Henze et al., 2000</xref>; <xref ref-type="bibr" rid="bib31">Harris et al., 2000</xref>; <xref ref-type="bibr" rid="bib36">Henze et al., 2009</xref>) with ground truth based on the intracellular traces, after excluding time segments containing artifacts due to movement and current injection. The other 52 were obtained from tetrodes or conventional silicon probes in rat hippocampus (PAIRED_CRCNS_HC1) (<xref ref-type="bibr" rid="bib35">Henze et al., 2000</xref>; <xref ref-type="bibr" rid="bib31">Harris et al., 2000</xref>; <xref ref-type="bibr" rid="bib36">Henze et al., 2009</xref>), high-density silicon probes in mice cortex (PAIRED_KAMPFF and PAIRED_BOYDEN) (<xref ref-type="bibr" rid="bib57">Neto et al., 2016</xref>; <xref ref-type="bibr" rid="bib1">Allen et al., 2018</xref>; <xref ref-type="bibr" rid="bib51">Marques-Smith et al., 2018a</xref>), and high-density MEAs in mice retina (PAIRED_MEA64C_YGER) (<xref ref-type="bibr" rid="bib78">Yger et al., 2018</xref>; <xref ref-type="bibr" rid="bib72">Spampinato et al., 2018</xref>). We also include 29 new paired recordings in awake behaving mice (PAIRED_ENGLISH), from a hybrid probe comprising a juxtacellular electrode glued on top of a Neuronexus silicon probe (similar to <xref ref-type="bibr" rid="bib21">English et al., 2017</xref> but with only ∼20 µm separation). These come from the hippocampus, neocortex and thalamus. We generated a monotrode version (PAIRED_MONOTRODE) of various paired recordings by randomly sampling one channel from each recording session to uniformly span the SNR range (25 units per study).</p></sec><sec id="s4-1-2"><title>Synthetic recordings</title><p><xref ref-type="table" rid="table1">Table 1</xref> provides details on the ten algorithms included in the SpikeForest analysis. To overcome the limited number of units offered by the paired ground truth, we added simulated ground-truth study sets that were independently generated by five laboratories (<xref ref-type="bibr" rid="bib10">Camuñas-Mesa and Quiroga, 2013</xref>; <xref ref-type="bibr" rid="bib30">Hagen et al., 2015</xref>; <xref ref-type="bibr" rid="bib14">Chung et al., 2017</xref>; <xref ref-type="bibr" rid="bib28">Gratiy et al., 2018</xref>; <xref ref-type="bibr" rid="bib8">Buccino and Einevoll, 2019</xref>). The simulators vary in their biophysical details, computational speeds, and configurable parameters. Simulations based on phenomenological models tend to be fast and easily configurable (e.g., SYNTH_MAGLAND, identical to the simulations in <xref ref-type="bibr" rid="bib14">Chung et al., 2017</xref> except with iid Gaussian noise), while biophysical simulators such as SYNTH_VISAPY (<xref ref-type="bibr" rid="bib30">Hagen et al., 2015</xref>) and SYNTH_BIONET (<xref ref-type="bibr" rid="bib28">Gratiy et al., 2018</xref>) use synaptically connected, morphologically detailed neurons to achieve high fidelity at the expense of computational speed. SYNTH_MONOTRODE (<xref ref-type="bibr" rid="bib10">Camuñas-Mesa and Quiroga, 2013</xref>) and SYNTH_MEAREC (<xref ref-type="bibr" rid="bib8">Buccino and Einevoll, 2019</xref>) take an intermediate approach by generating spike waveform templates based on single-neuron simulations and randomly placing the spike waveforms conforming to pre-specified ISI distributions.</p><p>SYNTH_BIONET was generated from the Allen Institute’s BioNet simulator (<xref ref-type="bibr" rid="bib28">Gratiy et al., 2018</xref>; <xref ref-type="bibr" rid="bib41">Jun et al., 2017a</xref>) running on the computing resources provided by the Neuroscience Gateway (<xref ref-type="bibr" rid="bib71">Sivagnanam et al., 2013</xref>). We simulated a column of synaptically connected neurons (<inline-formula><mml:math id="inf1"><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mn>708</mml:mn></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="inf2"><mml:mrow><mml:mrow><mml:mn>200</mml:mn><mml:mo>×</mml:mo><mml:mn>200</mml:mn><mml:mo>×</mml:mo><mml:mpadded width="+1.7pt"><mml:mn>600</mml:mn></mml:mpadded></mml:mrow><mml:mo>⁢</mml:mo><mml:mi>μ</mml:mi><mml:mo>⁢</mml:mo><mml:msup><mml:mtext>m</mml:mtext><mml:mn>3</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula>) based on the rat cortical NEURON models (<xref ref-type="bibr" rid="bib39">Hines and Carnevale, 1997</xref>; <xref ref-type="bibr" rid="bib2">Ascoli et al., 2007</xref>; <xref ref-type="bibr" rid="bib56">Mitelut, 2017</xref>; <xref ref-type="bibr" rid="bib41">Jun et al., 2017a</xref>) by capturing the spike waveforms at four vertical columns of densely-spaced electrodes (2 µm vertical, 16 µm horizontal pitch, 600 channels). Linear probe drift was simulated by subsampling the electrodes to match the Neuropixels site layout (20–25 µm pitch) and vertically shifting the electrode positions as a function of time. To achieve smooth linear motion, a 2D-interpolation based on a Gaussian kernel was applied (0.5 µm vertical spacing, 16 µm total displacement for 16 min). Based on the linear probe drift simulation, we generated a ’shuffled’ version to mimic the fast probe displacements during animal movement by subdividing the recordings into 32 time segments and randomly shuffling (30 s per segment).</p><p>The simulation entitled SYNTH_JANELIA was developed by J. Colonell (<xref ref-type="bibr" rid="bib61">Pachitariu et al., 2019</xref>) and uses average unit waveforms from a densely spaced electrode array (5 µm pitch, 15 × 17 layout) collected by the <xref ref-type="bibr" rid="bib43">Kampff, 2018</xref> laboratory. The waveform templates were inserted at randomly selected channels and time points after being multiplied by an amplitude-scaling factor drawn from a Gamma distribution. The baseline noise was randomly generated to match the power spectrum observed from a Neuropixels recording, and a spatiotemporal smoothing was applied to induce correlation between nearby channels and time samples. The original simulation generated either static or sinusoidal drift (±10 µm displacement, 600 s period) with 1200s duration (30 KS/s) on the Neuropixels layout (64 channels, 25 µm pitch, staggered four columns). We trimmed the original simulations to generate shorter recording durations (600, 1200s) and channel counts (4, 16, 32, 64 channels) to study the effects of these parameters on sorting accuracy.</p></sec><sec id="s4-1-3"><title>Manually sorted recordings</title><p>Based on the requests of the electrophysiology community, we included a single study set of <italic>manually</italic> curated tetrode sortings (MANUAL_FRANKLAB) (<xref ref-type="bibr" rid="bib14">Chung et al., 2017</xref>); we emphasize that, for this study set only, <italic>there is no ground-truth data</italic>. Accuracies are reported relative to three independent manual sortings of the same tetrode recording session in a chronically implanted rat hippocampus. We subdivided the entire recording duration to generate three different durations (600, 1200, 2400 s) to study the effect of duration on sorting accuracy, but did not find a consistent relationship across all sorters.</p></sec><sec id="s4-1-4"><title>Registration</title><p>A content-addressable storage database is used to store the file content of each recording, and all data is available for public download via our Python API. Since these files are indexed according to their SHA-1 hashes, their content is guaranteed not to have changed even when the mechanism for retrieving the data evolves over time, ensuring long-term repeatability of the analysis.</p></sec></sec><sec id="s4-2"><title>Sorting algorithms and wrappers</title><p><xref ref-type="table" rid="table2">Table 2</xref> provides details on the ten algorithms included in the SpikeForest analysis. For each spike sorter, SpikeForest contains a Python wrapper and a Docker (and Singularity) container defining the exact execution environment including all necessary dependencies. For the sorters that are implemented in MATLAB, the MATLAB Compiler tool was used to generate standalone binary files inserted into the containers so that a MATLAB license is not required to run spike sorting. The SpikeForest framework flexibly allows running of each sorter either within the native operating system or within the container. The former method is useful during development or in an environment where the spike sorting software is already installed. The latter is crucial for ensuring reproducibility and for avoiding conflicts between sorters due to incompatible dependencies. The Python wrappers make use of the spikesorters package of the SpikeInterface project (<xref ref-type="bibr" rid="bib7">Buccino et al., 2019</xref>) for passing the parameters and executing the sorter. All sorters operate on the raw (unfiltered) recordings.</p><p>An eleventh algorithm, YASS, was incorporated into the Python package, but was not included in the comparison, as discussed in the Results section.</p></sec><sec id="s4-3"><title>Comparison with ground truth</title><p>Depending on the experimental context, false negatives (missed events) and false positives may have different relative importance for the researcher. Thus the SpikeForest website allows switching between three evaluation metrics for the comparison with ground truth: precision (which penalizes only false positives), recall (which penalizes only false negatives), and an overall accuracy metric (which balances the two). For each sorter-recording pair these are computed by comparing the output of spike sorting (spike times and labels) with the ground-truth timings associated with the recording, as follows.</p><p>We first consider a sorted unit <inline-formula><mml:math id="inf3"><mml:mi>k</mml:mi></mml:math></inline-formula> and a ground-truth unit <inline-formula><mml:math id="inf4"><mml:mi>l</mml:mi></mml:math></inline-formula>, and describe how the events in the spike train for <inline-formula><mml:math id="inf5"><mml:mi>k</mml:mi></mml:math></inline-formula> are matched to ground-truth events of <inline-formula><mml:math id="inf6"><mml:mi>l</mml:mi></mml:math></inline-formula>. Let <inline-formula><mml:math id="inf7"><mml:mrow><mml:msubsup><mml:mi>s</mml:mi><mml:mn>1</mml:mn><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msubsup><mml:mi>s</mml:mi><mml:msub><mml:mi>M</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula> be the spike train (timestamps) associated with sorted unit <inline-formula><mml:math id="inf8"><mml:mi>k</mml:mi></mml:math></inline-formula>, and let <inline-formula><mml:math id="inf9"><mml:mrow><mml:msubsup><mml:mi>t</mml:mi><mml:mn>1</mml:mn><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:mi mathvariant="normal">…</mml:mi><mml:mo>,</mml:mo><mml:msubsup><mml:mi>t</mml:mi><mml:msub><mml:mi>N</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula> be the spike train for ground-truth unit <inline-formula><mml:math id="inf10"><mml:mi>l</mml:mi></mml:math></inline-formula> (see <xref ref-type="fig" rid="fig1">Figure 1</xref>). Let Δ be an acceptable firing time error, which we assume is shorter than half the refractory period of any true neuron. We set <inline-formula><mml:math id="inf11"><mml:mi mathvariant="normal">Δ</mml:mi></mml:math></inline-formula> to one millisecond; the results are rather insensitive to its exact value. The number of matches of sorted unit <inline-formula><mml:math id="inf12"><mml:mi>k</mml:mi></mml:math></inline-formula> to the ground-truth unit <inline-formula><mml:math id="inf13"><mml:mi>l</mml:mi></mml:math></inline-formula> is<disp-formula id="equ1"><label>(1)</label><mml:math id="m1"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>n</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mtext>match</mml:mtext></mml:msubsup><mml:mo>:=</mml:mo><mml:mrow><mml:mi mathvariant="normal">#</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mi>i</mml:mi><mml:mo>:</mml:mo><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:msubsup><mml:mi>t</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup><mml:mo>-</mml:mo><mml:msubsup><mml:mi>s</mml:mi><mml:mi>j</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msubsup></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>≤</mml:mo><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>⁢</mml:mo> <mml:mtext>for some </mml:mtext><mml:mo>⁢</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>Note that even if more than one sorted event falls within ±Δ of a true event, at most one is counted in this matching. The reverse situation—more than one ground-truth event from the same neuron matching to a given sorted event—cannot happen by our assumption about the refractory period. The number of missed events and false positives are then, respectively,<disp-formula id="equ2"><label>(2)</label><mml:math id="m2"><mml:mrow><mml:mrow><mml:mrow><mml:msubsup><mml:mi>n</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mtext>miss</mml:mtext></mml:msubsup><mml:mo>:=</mml:mo><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mpadded width="+5pt"><mml:msubsup><mml:mi>n</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mtext>match</mml:mtext></mml:msubsup></mml:mpadded></mml:mrow></mml:mrow><mml:mo rspace="74.8pt">,</mml:mo><mml:mrow><mml:msubsup><mml:mi>n</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mtext>fp</mml:mtext></mml:msubsup><mml:mo>:=</mml:mo><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mpadded width="+5pt"><mml:msubsup><mml:mi>n</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mtext>match</mml:mtext></mml:msubsup></mml:mpadded></mml:mrow></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>where <inline-formula><mml:math id="inf14"><mml:msub><mml:mi>N</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:math></inline-formula> is the total number of firings of ground-truth unit <inline-formula><mml:math id="inf15"><mml:mi>l</mml:mi></mml:math></inline-formula>, and <inline-formula><mml:math id="inf16"><mml:msub><mml:mi>M</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:math></inline-formula> is the total number of found events of sorted unit <inline-formula><mml:math id="inf17"><mml:mi>k</mml:mi></mml:math></inline-formula>. Following <xref ref-type="bibr" rid="bib42">Jun et al., 2017b</xref> we define the <italic>accuracy</italic> for this pair as<disp-formula id="equ3"><label>(3)</label><mml:math id="m3"><mml:mrow><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>:=</mml:mo><mml:mpadded width="+5pt"><mml:mfrac><mml:msubsup><mml:mi>n</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mtext>match</mml:mtext></mml:msubsup><mml:mrow><mml:msubsup><mml:mi>n</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mtext>match</mml:mtext></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>n</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mtext>miss</mml:mtext></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>n</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mtext>fp</mml:mtext></mml:msubsup></mml:mrow></mml:mfrac></mml:mpadded></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>Note that this definition of accuracy is a balance between precision and recall, and is similar, but not identical, to the <inline-formula><mml:math id="inf18"><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math></inline-formula> metric (<xref ref-type="bibr" rid="bib80">Zaki and Meira Jr, 2014</xref>, Eq. (17.1)) used to evaluate clustering methods.</p><p>Fixing the ground-truth unit <inline-formula><mml:math id="inf19"><mml:mi>l</mml:mi></mml:math></inline-formula>, we define its <italic>best matching sorted unit</italic><inline-formula><mml:math id="inf20"><mml:msub><mml:mover accent="true"><mml:mi>k</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mi>l</mml:mi></mml:msub></mml:math></inline-formula> as the sorted unit <inline-formula><mml:math id="inf21"><mml:mi>k</mml:mi></mml:math></inline-formula> with highest accuracy,<disp-formula id="equ4"><label>(4)</label><mml:math id="m4"><mml:mrow><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>k</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mi>l</mml:mi></mml:msub><mml:mo>:=</mml:mo><mml:mrow><mml:mi>arg</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mpadded width="+2.8pt"><mml:munder><mml:mi>max</mml:mi><mml:mi>k</mml:mi></mml:munder></mml:mpadded><mml:mo>⁡</mml:mo><mml:mpadded width="+5pt"><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mpadded></mml:mrow></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>Now restricting to this best match, we define the accuracy for ground-truth unit <inline-formula><mml:math id="inf22"><mml:mi>l</mml:mi></mml:math></inline-formula> by<disp-formula id="equ5"><label>(5)</label><mml:math id="m5"><mml:mrow><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>:=</mml:mo><mml:mpadded width="+5pt"><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>k</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mi>l</mml:mi></mml:msub></mml:mrow></mml:msub></mml:mpadded></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>and the corresponding precision and recall for this unit by<disp-formula id="equ6"><label>(6)</label><mml:math id="m6"><mml:mrow><mml:mrow><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>:=</mml:mo><mml:mfrac><mml:msubsup><mml:mi>n</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>k</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mi>l</mml:mi></mml:msub></mml:mrow><mml:mtext>match</mml:mtext></mml:msubsup><mml:mrow><mml:msubsup><mml:mi>n</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>k</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mi>l</mml:mi></mml:msub></mml:mrow><mml:mtext>match</mml:mtext></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>n</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>k</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mi>l</mml:mi></mml:msub></mml:mrow><mml:mtext>fp</mml:mtext></mml:msubsup></mml:mrow></mml:mfrac></mml:mrow><mml:mo mathvariant="italic" separator="true"> </mml:mo><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>:=</mml:mo><mml:mpadded width="+5pt"><mml:mfrac><mml:msubsup><mml:mi>n</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>k</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mi>l</mml:mi></mml:msub></mml:mrow><mml:mtext>match</mml:mtext></mml:msubsup><mml:mrow><mml:msubsup><mml:mi>n</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>k</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mi>l</mml:mi></mml:msub></mml:mrow><mml:mtext>match</mml:mtext></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>n</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>k</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mi>l</mml:mi></mml:msub></mml:mrow><mml:mtext>miss</mml:mtext></mml:msubsup></mml:mrow></mml:mfrac></mml:mpadded></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p><p>Averages of these metrics are then computed for all units <inline-formula><mml:math id="inf23"><mml:mi>l</mml:mi></mml:math></inline-formula> within each study, without weighting by their numbers of events (i.e., treating all units equally). Note that, in the case of a recording with more than one ground-truth unit, it is possible that more than one such unit could share a common best-matching sorted unit, but this could only happen if these ground-truth units had extremely correlated events or if the sorting was highly inaccurate.</p><p>The spike sorted units that are considered in the computation of these metrics are only those that are matched to ground-truth units. Therefore, the results shown in the main table do not account for false positive units, that is units found by the spike sorters that are not present in the recording.</p></sec><sec id="s4-4"><title>Compensating for missing data</title><p>As described above, when a sorting run fails (either crashes or times out), an asterisk is appended to the corresponding table cell, and the average accuracy is calculated based on imputed data using linear regression. There is also an option to simply exclude the missing values, but the problem with this method (which we have encountered) is that sometimes an algorithm will happen to crash on recordings with relatively difficult units, resulting in artificially elevated scores. Imputing by zero has the problem of yielding deceptively low values. We have thus opted to use linear regression to fill in the missing data using values predicted based on the accuracies of other sorters. Specifically, for a given sorter with missing data and a given study set (or study, depending on the level of aggregation), a linear model is estimated for fitting the non-missing values based on the values of all sorters with no missing data. That model is then applied to estimate the missing data. To give some intuition, if a sorter typically has somewhat lower scores than the other sorters and crashes on one recording, then for the purpose of computing average accuracy, the accuracy for that recording will be filled in with a value that is also somewhat lower than the other sorters.</p><p>In constrast, when reporting total numbers of units found above an accuracy cut-off (e.g., <xref ref-type="fig" rid="fig2">Figure 2</xref>, right side), we do not impute, but simply sum the number of non-missing units.</p></sec><sec id="s4-5"><title>Signal-to-noise ratio per unit</title><p>We define SNR as a property of a single neural unit, either a ground-truth unit or a unit as output by a sorter. It is reported on the website and is used as a cut-off for selection of a subset of ground-truth units for computing average accuracy. SNR is computed on the bandpass-filtered timeseries data.</p><p>We first describe our filter used to compute SNR (noting that this is distinct from various filters used internally by the spike sorters). This filter is a bandpass from <inline-formula><mml:math id="inf24"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mtext>min</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mn>300</mml:mn></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="inf25"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mtext>max</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mn>6000</mml:mn></mml:mrow></mml:math></inline-formula>, in Hz units. It is applied to each channel by taking the FFT, multiplying by the real-valued frequency filter function<disp-formula id="equ7"><label>(7)</label><mml:math id="m7"><mml:mrow><mml:mrow><mml:mrow><mml:mi>A</mml:mi><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mo>⁢</mml:mo><mml:msqrt><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mrow><mml:mtext>erf</mml:mtext><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>-</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mtext>min</mml:mtext></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>/</mml:mo><mml:mn>100</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:msqrt><mml:mo>⁢</mml:mo><mml:mpadded width="+5pt"><mml:msqrt><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mrow><mml:mtext>erf</mml:mtext><mml:mo>⁢</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>-</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mtext>max</mml:mtext></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>/</mml:mo><mml:mn>1000</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:msqrt></mml:mpadded></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>where erf is the error function, then taking the inverse FFT. Here, the parameters 100 and 1000 control the roll-off widths in Hz at the low and high ends respectively. From this filtered timeseries and the set of firing times of a unit, the average spike waveform is extracted. SNR is then defined as the ratio between the peak absolute amplitude of this average spike waveform and the estimated noise on the channel where this peak amplitude occurs. The noise is estimated as the median absolute deviation of the filtered timeseries data divided by 0.6745, which gives a robust estimate of the standard deviation of the noise (<xref ref-type="bibr" rid="bib65">Quiroga et al., 2004</xref>, Sec. 3.1).</p></sec><sec id="s4-6"><title>Analysis pipeline</title><p>The analysis pipeline of SpikeForest depicted in <xref ref-type="fig" rid="fig6">Figure 6</xref> is built using Python utilities developed by the authors for creating shareable and reproducible scientific workflows. This system provides a formal method for creating well-defined Python procedures that operate on input parameters and files and produce output files. These are known as <italic>processors</italic>. SpikeForest defines processors for running the spike sorters, computing properties of ground-truth units (e.g., SNR), comparing the spike sorting outputs with ground truth, and computing summary data for the plots shown on the website. Once these processors are set up, the framework provides several advantages including: (a) automatic execution of processing inside Singularity or Docker containers; (b) automatic caching of processing results; and (c) job management and queueing mechanisms for running batches of processing on a compute cluster. This allows the analysis pipeline to be defined as a standard Python script, with a simple nested loop iterating through the sorters and ground-truth datasets (as in <xref ref-type="fig" rid="fig1">Figure 1</xref>). The script may then be configured to run in a variety of settings: on a standard workstation for development, testing, or reproducing of a subset of results; a shared computer with large memory and many cores; or on a compute cluster.</p><fig id="fig6" position="float"><label>Figure 6.</label><caption><title>Interaction of software and hardware components of the SpikeForest system, showing the flow of data from the server-side analysis (left) to the user’s web browser (right).</title><p>The processing pipeline automatically detects which sorting jobs need to be updated and runs these in parallel as needed on a compute cluster. Processing results are uploaded to two databases, one for relatively small JSON files and the other for large binary content. A NodeJS application pulls data from these databases in order to show the most up-to-date results on the front-end website.</p></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-55167-fig6-v1.tif"/></fig><p>A crucial and novel feature of our framework is that all files (both input and output) are represented by SHA-1 URIs, for example of the form: <monospace>sha1://88b62db6fc467b83ba0693453c59c5f538e20d5c/firings_true.mda</monospace>.</p><p>The hexadecimal code embedded in the URI is the SHA-1 hash of the content of the file, and therefore this URI uniquely identifies the desired file (in this case the ground-truth firing data for one of the SpikeForest recordings) without specifying the actual location of the data. In contrast, explicit location references (e.g., a path on the local computer, an IP address, or a web URL) can be problematic because over time data archives may stop being maintained, may change locations, or files may be renamed or updated with new content. The SHA-1 URI system alleviates these difficulties by separating the mechanism for storing archives of files from the representation of these files, via universal hash strings within scripts.</p><p>All SpikeForest input recordings, ground-truth data, sorting outputs, and other processing data are stored in a public content-addressable storage (CAS) system called <italic>kachery</italic>. The API of a kachery database simply allows downloading of files referenced only by their SHA-1 hashes (or URIs). Therefore, as long as the environment is configured to point to a kachery database with the relevant files available, the SpikeForest pipeline may be executed (in whole or in part) on any computer connected to the internet.</p><p>The automatic caching capability we developed is also crucial for the SpikeForest system. If updates are made to either the database of ground-truth recordings or to the sorting algorithms and parameters, the system can automatically detect which processing needs to be rerun. In this way, the pipeline can simply be executed in full at regular intervals, and the website will continuously update with the latest changes. This facilitates a conceptually simple method for adding new datasets or sorting algorithms because changes are represented by modifications to pipeline configuration files.</p><p>A limitation of the reliance on caching is the implicit assumption that the sorting algorithms are deterministic, that is given the same inputs, parameters, and code, the outputs should be exactly the same. However, this assumption can be violated by unfixed random seeds or even differences between implementations of floating-point arithmetic on different hardware. Controlling these factors is currently out of scope for SpikeForest, but we aim to measure the degree of stability (<xref ref-type="bibr" rid="bib3">Barnett et al., 2016</xref>) with respect to repeated runs of each sorting task in future versions.</p><p>To ensure that all results may be reproduced at a later date and/or independently verified by a third party, the Python wrapper for each spike sorter includes a reference to a Docker image containing the entire operating system and environment where the sorter is installed. Our system handles the automatic download of these images (if not already on the local computer) and the execution of the sorting inside Docker or Singularity containers. For development and testing purposes, it is also possible to configure the pipeline to run outside the container, provided that the sorter software is installed on the operating system.</p><p>The output of processing is a single JSON file (only around 15 MB at this time) containing SHA-1 URI references to all recording files, ground-truth data, containers, spike sorting parameters, sorting outputs, comparisons with ground truth, and other information used by the website. It also contains meta-information about the sorting runs such as the execution times and console outputs. This JSON file is itself uploaded to the kachery database and is represented by a SHA-1 URI accessible on the website. The archive section of the website contains references to these files for all past analyses, allowing tracking of sorter performance over time.</p><p>Finally, the data from this JSON output file is loaded into a MongoDB database for efficient access by the website’s front end.</p></sec><sec id="s4-7"><title>Website front end</title><p>The primary user interface for the SpikeForest platform is an isomorphic JavaScript web application with overall structure as shown on the right side of <xref ref-type="fig" rid="fig6">Figure 6</xref>. Built from reusable React components, the front end utilizes the D3 library to render the interactive tables and plots. A Node.JS backend, organized using the Redux state container, queries a MongoDB database to retrieve JSON files for each datatype and generate the comparative visualizations. For more detailed plots, like the spike sprays, larger data objects are retrieved via the content-addressable storage database.</p><p>We optimized the interface for efficient hierarchical navigation through the results and rapid loading and interactive response (for instance, when a user adjusts the SNR or accuracy cut-off slider bar). When the user clicks on results at the individual recording or unit level, they are taken to a page (with an auto-generated, shareable URL) specific to the study in question. This page allows one-click comparison of the sorters on this study. Clicking on individual units in the scatter plot for a given sorter-study pair brings up spike waveforms for that unit (<xref ref-type="fig" rid="fig3">Figure 3</xref>) and a link to a sub-page with details specific to the particular sorter-recording run. This latter page includes sorter parameters used, the console output of the run and a link to an auto-generated Python script with human-readable documentation to reproduce that sorter run within SpikeForest. A permanent top-level menu bar allows access to all meta-data about sorters (as in <xref ref-type="table" rid="table1">Table 1</xref>), study sets (as in <xref ref-type="table" rid="table2">Table 2</xref>, also allowing hierarchical drilling down to the individual recording level), historical snapshots, metrics used, and an explanation of the project. All of the website data and results sub-pages are automatically generated from the SpikeForest databases.</p></sec><sec id="s4-8"><title>Enabling users to run all spike sorters locally on their own data</title><p>The benefit of having wrappers and Docker images for these ten spike sorting algorithms extends beyond usage within the SpikeForest pipeline. Researchers may also utilize these wrappers and images to spike sort their own data without needing to install and configure the individual sorting packages. As mentioned in the previous subsection, the website provides, for each sorting result, a self-contained Python script for reproducing that result offline. This script may easily be modified to operate on datasets that are not registered within the SpikeForest database. Here is an excerpt of the auto-generated script for running SpyKING CIRCUS on a dataset:<code xml:space="preserve"># Run the spike sorting 
with hither.config(container=’docker://magland/sf-spykingcircus:0.9.2’, gpu=False): 
  sorting_result=sorter.run( 
       recording_path=recording_path, 
       sorting_out=hither.File(), 
       **params 
  ) 
assert sorting_result.success 
sorting_path=sorting_result.outputs.sorting_out</code></p><p>This is compatible with all three OS platforms: Linux, MacOS and Windows (although, currently, the last of these cannot use GPU-based sorters). Here, hither is a utility within SpikeForest; note that the Docker container and version (located on Docker Hub) is specified in the configuration line. Because we use SpikeInterface, it is easy to switch between a variety of different file formats for the input and output data. The SpikeForest website provides further instructions and examples.</p></sec></sec></body><back><ack id="ack"><title>Acknowledgements</title><p>We have benefited from discussions with Leslie Greengard, Eftychios Pnevmatikakis, Andrea Giovannucci, Karel Svoboda, Loren Frank, and the developers of several of the sorting codes, and from the comments of the anonymous reviewers. The BioNet simulations were made possible by Catalin Mitelut and the Neuroscience Gateway Portal. We thank Dan English and colleagues for making their hybrid paired recordings available. We are grateful to the organizers of the Janelia spike sorting workshop, held in March 2018, which helped to inspire this project. The Flatiron Institute is a division of the Simons Foundation.</p></ack><sec id="s5" sec-type="additional-information"><title>Additional information</title><fn-group content-type="competing-interest"><title>Competing interests</title><fn fn-type="COI-statement" id="conf1"><p>No competing interests declared</p></fn></fn-group><fn-group content-type="author-contribution"><title>Author contributions</title><fn fn-type="con" id="con1"><p>Conceptualization, Data curation, Software, Investigation, Visualization, Methodology, Writing - original draft, Writing - review and editing</p></fn><fn fn-type="con" id="con2"><p>Conceptualization, Data curation, Software, Investigation, Methodology, Writing - original draft, Writing - review and editing</p></fn><fn fn-type="con" id="con3"><p>Software, Investigation, Visualization, Methodology, Writing - original draft, Writing - review and editing</p></fn><fn fn-type="con" id="con4"><p>Software, Methodology, Writing - review and editing</p></fn><fn fn-type="con" id="con5"><p>Software, Writing - review and editing</p></fn><fn fn-type="con" id="con6"><p>Software, Writing - review and editing</p></fn><fn fn-type="con" id="con7"><p>Software, Writing - review and editing</p></fn><fn fn-type="con" id="con8"><p>Conceptualization, Supervision, Investigation, Methodology, Writing - original draft, Project administration, Writing - review and editing</p></fn></fn-group></sec><sec id="s6" sec-type="supplementary-material"><title>Additional files</title><supplementary-material id="transrepform"><label>Transparent reporting form</label><media mime-subtype="pdf" mimetype="application" xlink:href="elife-55167-transrepform-v1.pdf"/></supplementary-material></sec><sec id="s7" sec-type="data-availability"><title>Data availability</title><p>All data, including 1.3 TB of raw data and all result files, are publicly available through the SpikeForest API.</p><p>The following previously published datasets were used:</p><p><element-citation id="dataset2" publication-type="data" specific-use="references"><person-group person-group-type="author"><name><surname>Henze</surname><given-names>DA</given-names></name><name><surname>Borhegyi</surname><given-names>Z</given-names></name><name><surname>Csicsvari</surname><given-names>J</given-names></name><name><surname>Mamiya</surname><given-names>A</given-names></name><name><surname>Harris</surname><given-names>D</given-names></name><name><surname>Buzsáki</surname><given-names>G</given-names></name></person-group><year iso-8601-date="2009">2009</year><data-title>Simultaneous intracellular and extracellular recordings from hippocampus region CA1 of anesthetized rats</data-title><source>Collaborative Research in Computational Neuroscience</source><pub-id assigning-authority="other" pub-id-type="doi">10.6080/K02Z13FP</pub-id></element-citation></p><p><element-citation id="dataset4" publication-type="data" specific-use="references"><person-group person-group-type="author"><name><surname>Spampinato</surname><given-names>LBG</given-names></name><name><surname>Esposito</surname><given-names>E</given-names></name><name><surname>Yger</surname><given-names>P</given-names></name><name><surname>Duebel</surname><given-names>J</given-names></name><name><surname>Picaud</surname><given-names>S</given-names></name><name><surname>Marre</surname><given-names>O</given-names></name></person-group><year iso-8601-date="2018">2018</year><data-title>Ground truth recordings for validation of spike sorting algorithms</data-title><source>Zenodo</source><pub-id assigning-authority="Zenodo" pub-id-type="doi">10.5281/zenodo.1205233</pub-id></element-citation></p><p><element-citation id="dataset6" publication-type="data" specific-use="references"><person-group person-group-type="author"><name><surname>Jason</surname><given-names>EC</given-names></name><name><surname>Jeremy</surname><given-names>FM</given-names></name><name><surname>Alex</surname><given-names>HB</given-names></name><name><surname>Vanessa</surname><given-names>MT</given-names></name><name><surname>Angela</surname><given-names>CT</given-names></name><name><surname>Kye</surname><given-names>YL</given-names></name><name><surname>Kedar</surname><given-names>GS</given-names></name><name><surname>Sarah</surname><given-names>HF</given-names></name><name><surname>Loren</surname><given-names>MF</given-names></name><name><surname>Leslie</surname><given-names>FG</given-names></name></person-group><year iso-8601-date="2017">2017</year><data-title>A Fully Automated Approach to Spike Sorting</data-title><source>Mendeley Data</source><pub-id assigning-authority="other" pub-id-type="doi">10.17632/kmmndvycx8.1</pub-id></element-citation></p></sec><ref-list><title>References</title><ref id="bib1"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Allen</surname> <given-names>BD</given-names></name><name><surname>Moore-Kochlacs</surname> <given-names>C</given-names></name><name><surname>Bernstein</surname> <given-names>JG</given-names></name><name><surname>Kinney</surname> <given-names>JP</given-names></name><name><surname>Scholvin</surname> <given-names>J</given-names></name><name><surname>Seoane</surname> <given-names>LF</given-names></name><name><surname>Chronopoulos</surname> <given-names>C</given-names></name><name><surname>Lamantia</surname> <given-names>C</given-names></name><name><surname>Kodandaramaiah</surname> <given-names>SB</given-names></name><name><surname>Tegmark</surname> <given-names>M</given-names></name><name><surname>Boyden</surname> <given-names>ES</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Automated in vivo patch-clamp evaluation of extracellular multielectrode array spike recording capability</article-title><source>Journal of Neurophysiology</source><volume>120</volume><fpage>2182</fpage><lpage>2200</lpage><pub-id pub-id-type="doi">10.1152/jn.00650.2017</pub-id><pub-id pub-id-type="pmid">29995597</pub-id></element-citation></ref><ref id="bib2"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ascoli</surname> <given-names>GA</given-names></name><name><surname>Donohue</surname> <given-names>DE</given-names></name><name><surname>Halavi</surname> <given-names>M</given-names></name></person-group><year iso-8601-date="2007">2007</year><article-title>NeuroMorpho.Org: a central resource for neuronal morphologies</article-title><source>Journal of Neuroscience</source><volume>27</volume><fpage>9247</fpage><lpage>9251</lpage><pub-id pub-id-type="doi">10.1523/JNEUROSCI.2055-07.2007</pub-id><pub-id pub-id-type="pmid">17728438</pub-id></element-citation></ref><ref id="bib3"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Barnett</surname> <given-names>AH</given-names></name><name><surname>Magland</surname> <given-names>JF</given-names></name><name><surname>Greengard</surname> <given-names>LF</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Validation of neural spike sorting algorithms without ground-truth information</article-title><source>Journal of Neuroscience Methods</source><volume>264</volume><fpage>65</fpage><lpage>77</lpage><pub-id pub-id-type="doi">10.1016/j.jneumeth.2016.02.022</pub-id><pub-id pub-id-type="pmid">26930629</pub-id></element-citation></ref><ref id="bib4"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Berdondini</surname> <given-names>L</given-names></name><name><surname>van der Wal</surname> <given-names>PD</given-names></name><name><surname>Guenat</surname> <given-names>O</given-names></name><name><surname>de Rooij</surname> <given-names>NF</given-names></name><name><surname>Koudelka-Hep</surname> <given-names>M</given-names></name><name><surname>Seitz</surname> <given-names>P</given-names></name><name><surname>Kaufmann</surname> <given-names>R</given-names></name><name><surname>Metzler</surname> <given-names>P</given-names></name><name><surname>Blanc</surname> <given-names>N</given-names></name><name><surname>Rohr</surname> <given-names>S</given-names></name></person-group><year iso-8601-date="2005">2005</year><article-title>High-density electrode array for imaging in vitro electrophysiological activity</article-title><source>Biosensors and Bioelectronics</source><volume>21</volume><fpage>167</fpage><lpage>174</lpage><pub-id pub-id-type="doi">10.1016/j.bios.2004.08.011</pub-id><pub-id pub-id-type="pmid">15967365</pub-id></element-citation></ref><ref id="bib5"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Berens</surname> <given-names>P</given-names></name><name><surname>Freeman</surname> <given-names>J</given-names></name><name><surname>Deneux</surname> <given-names>T</given-names></name><name><surname>Chenkov</surname> <given-names>N</given-names></name><name><surname>McColgan</surname> <given-names>T</given-names></name><name><surname>Speiser</surname> <given-names>A</given-names></name><name><surname>Macke</surname> <given-names>JH</given-names></name><name><surname>Turaga</surname> <given-names>SC</given-names></name><name><surname>Mineault</surname> <given-names>P</given-names></name><name><surname>Rupprecht</surname> <given-names>P</given-names></name><name><surname>Gerhard</surname> <given-names>S</given-names></name><name><surname>Friedrich</surname> <given-names>RW</given-names></name><name><surname>Friedrich</surname> <given-names>J</given-names></name><name><surname>Paninski</surname> <given-names>L</given-names></name><name><surname>Pachitariu</surname> <given-names>M</given-names></name><name><surname>Harris</surname> <given-names>KD</given-names></name><name><surname>Bolte</surname> <given-names>B</given-names></name><name><surname>Machado</surname> <given-names>TA</given-names></name><name><surname>Ringach</surname> <given-names>D</given-names></name><name><surname>Stone</surname> <given-names>J</given-names></name><name><surname>Rogerson</surname> <given-names>LE</given-names></name><name><surname>Sofroniew</surname> <given-names>NJ</given-names></name><name><surname>Reimer</surname> <given-names>J</given-names></name><name><surname>Froudarakis</surname> <given-names>E</given-names></name><name><surname>Euler</surname> <given-names>T</given-names></name><name><surname>Román Rosón</surname> <given-names>M</given-names></name><name><surname>Theis</surname> <given-names>L</given-names></name><name><surname>Tolias</surname> <given-names>AS</given-names></name><name><surname>Bethge</surname> <given-names>M</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Community-based benchmarking improves spike rate inference from two-photon calcium imaging data</article-title><source>PLOS Computational Biology</source><volume>14</volume><elocation-id>e1006157</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pcbi.1006157</pub-id><pub-id pub-id-type="pmid">29782491</pub-id></element-citation></ref><ref id="bib6"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Buccino</surname> <given-names>AP</given-names></name><name><surname>Hagen</surname> <given-names>E</given-names></name><name><surname>Einevoll</surname> <given-names>GT</given-names></name><name><surname>Häfliger</surname> <given-names>PD</given-names></name><name><surname>Cauwenbergh</surname> <given-names>G</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>Independent component analysis for FullyAutomated Multi-Electrode array spike sorting. in: 2018</article-title><conf-name>40th Annual International Conference of the IEEE Engineering in Medicine and Biology Society (EMBC) IEEE</conf-name><fpage>2018</fpage><lpage>2040</lpage><pub-id pub-id-type="doi">10.1109/EMBC.2018.8512788</pub-id></element-citation></ref><ref id="bib7"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Buccino</surname> <given-names>AP</given-names></name><name><surname>Hurwitz</surname> <given-names>CL</given-names></name><name><surname>Magland</surname> <given-names>J</given-names></name><name><surname>Garcia</surname> <given-names>S</given-names></name><name><surname>Siegle</surname> <given-names>JH</given-names></name><name><surname>Hurwitz</surname> <given-names>R</given-names></name><name><surname>Hennig</surname> <given-names>MH</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Spikeinterface <italic>a unified framework for spike sorting</italic></article-title><source>bioRxiv</source><pub-id pub-id-type="doi">10.1101/796599</pub-id></element-citation></ref><ref id="bib8"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Buccino</surname> <given-names>AP</given-names></name><name><surname>Einevoll</surname> <given-names>GT</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Mearec: a fast and customizable testbench simulator for ground-truth extracellular spiking activity</article-title><source>bioRxiv</source><pub-id pub-id-type="doi">10.1101/691642</pub-id></element-citation></ref><ref id="bib9"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Buzsáki</surname> <given-names>G</given-names></name></person-group><year iso-8601-date="2004">2004</year><article-title>Large-scale recording of neuronal ensembles</article-title><source>Nature Neuroscience</source><volume>7</volume><fpage>446</fpage><lpage>451</lpage><pub-id pub-id-type="doi">10.1038/nn1233</pub-id><pub-id pub-id-type="pmid">15114356</pub-id></element-citation></ref><ref id="bib10"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Camuñas-Mesa</surname> <given-names>LA</given-names></name><name><surname>Quiroga</surname> <given-names>RQ</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>A detailed and fast model of extracellular recordings</article-title><source>Neural Computation</source><volume>25</volume><fpage>1191</fpage><lpage>1212</lpage><pub-id pub-id-type="doi">10.1162/NECO_a_00433</pub-id><pub-id pub-id-type="pmid">23470125</pub-id></element-citation></ref><ref id="bib11"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Carlson</surname> <given-names>DE</given-names></name><name><surname>Vogelstein</surname> <given-names>JT</given-names></name><name><surname>Wu</surname> <given-names>Q</given-names></name><name><surname>Lian</surname> <given-names>W</given-names></name><name><surname>Zhou</surname> <given-names>M</given-names></name><name><surname>Stoetzner</surname> <given-names>CR</given-names></name><name><surname>Kipke</surname> <given-names>D</given-names></name><name><surname>Weber</surname> <given-names>D</given-names></name><name><surname>Dunson</surname> <given-names>DB</given-names></name><name><surname>Carin</surname> <given-names>L</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Multichannel electrophysiological spike sorting via joint dictionary learning and mixture modeling</article-title><source>IEEE Transactions on Biomedical Engineering</source><volume>61</volume><fpage>41</fpage><lpage>54</lpage><pub-id pub-id-type="doi">10.1109/TBME.2013.2275751</pub-id><pub-id pub-id-type="pmid">23912463</pub-id></element-citation></ref><ref id="bib12"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Carlson</surname> <given-names>D</given-names></name><name><surname>Carin</surname> <given-names>L</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Continuing progress of spike sorting in the era of big data</article-title><source>Current Opinion in Neurobiology</source><volume>55</volume><fpage>90</fpage><lpage>96</lpage><pub-id pub-id-type="doi">10.1016/j.conb.2019.02.007</pub-id><pub-id pub-id-type="pmid">30856552</pub-id></element-citation></ref><ref id="bib13"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chaure</surname> <given-names>FJ</given-names></name><name><surname>Rey</surname> <given-names>HG</given-names></name><name><surname>Quian Quiroga</surname> <given-names>R</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>A novel and fully automatic spike-sorting implementation with variable number of features</article-title><source>Journal of Neurophysiology</source><volume>120</volume><fpage>1859</fpage><lpage>1871</lpage><pub-id pub-id-type="doi">10.1152/jn.00339.2018</pub-id><pub-id pub-id-type="pmid">29995603</pub-id></element-citation></ref><ref id="bib14"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chung</surname> <given-names>JE</given-names></name><name><surname>Magland</surname> <given-names>JF</given-names></name><name><surname>Barnett</surname> <given-names>AH</given-names></name><name><surname>Tolosa</surname> <given-names>VM</given-names></name><name><surname>Tooker</surname> <given-names>AC</given-names></name><name><surname>Lee</surname> <given-names>KY</given-names></name><name><surname>Shah</surname> <given-names>KG</given-names></name><name><surname>Felix</surname> <given-names>SH</given-names></name><name><surname>Frank</surname> <given-names>LM</given-names></name><name><surname>Greengard</surname> <given-names>LF</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>A fully automated approach to spike sorting</article-title><source>Neuron</source><volume>95</volume><fpage>1381</fpage><lpage>1394</lpage><pub-id pub-id-type="doi">10.1016/j.neuron.2017.08.030</pub-id><pub-id pub-id-type="pmid">28910621</pub-id></element-citation></ref><ref id="bib15"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chung</surname> <given-names>JE</given-names></name><name><surname>Joo</surname> <given-names>HR</given-names></name><name><surname>Fan</surname> <given-names>JL</given-names></name><name><surname>Liu</surname> <given-names>DF</given-names></name><name><surname>Barnett</surname> <given-names>AH</given-names></name><name><surname>Chen</surname> <given-names>S</given-names></name><name><surname>Geaghan-Breiner</surname> <given-names>C</given-names></name><name><surname>Karlsson</surname> <given-names>MP</given-names></name><name><surname>Karlsson</surname> <given-names>M</given-names></name><name><surname>Lee</surname> <given-names>KY</given-names></name><name><surname>Liang</surname> <given-names>H</given-names></name><name><surname>Magland</surname> <given-names>JF</given-names></name><name><surname>Pebbles</surname> <given-names>JA</given-names></name><name><surname>Tooker</surname> <given-names>AC</given-names></name><name><surname>Greengard</surname> <given-names>LF</given-names></name><name><surname>Tolosa</surname> <given-names>VM</given-names></name><name><surname>Frank</surname> <given-names>LM</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>High-Density, Long-Lasting, and Multi-region electrophysiological recordings using polymer electrode arrays</article-title><source>Neuron</source><volume>101</volume><fpage>21</fpage><lpage>31</lpage><pub-id pub-id-type="doi">10.1016/j.neuron.2018.11.002</pub-id><pub-id pub-id-type="pmid">30502044</pub-id></element-citation></ref><ref id="bib16"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Csicsvari</surname> <given-names>J</given-names></name><name><surname>Henze</surname> <given-names>DA</given-names></name><name><surname>Jamieson</surname> <given-names>B</given-names></name><name><surname>Harris</surname> <given-names>KD</given-names></name><name><surname>Sirota</surname> <given-names>A</given-names></name><name><surname>Barthó</surname> <given-names>P</given-names></name><name><surname>Wise</surname> <given-names>KD</given-names></name><name><surname>Buzsáki</surname> <given-names>G</given-names></name></person-group><year iso-8601-date="2003">2003</year><article-title>Massively parallel recording of unit and local field potentials with silicon-based electrodes</article-title><source>Journal of Neurophysiology</source><volume>90</volume><fpage>1314</fpage><lpage>1323</lpage><pub-id pub-id-type="doi">10.1152/jn.00116.2003</pub-id><pub-id pub-id-type="pmid">12904510</pub-id></element-citation></ref><ref id="bib17"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Denker</surname> <given-names>M</given-names></name><name><surname>Einevoll</surname> <given-names>GT</given-names></name><name><surname>Franke</surname> <given-names>F</given-names></name><name><surname>Grün</surname> <given-names>S</given-names></name><name><surname>Hagen</surname> <given-names>E</given-names></name><name><surname>Kerr</surname> <given-names>JND</given-names></name><name><surname>Nawrot</surname> <given-names>MP</given-names></name><name><surname>Ness</surname> <given-names>TV</given-names></name><name><surname>Ritz</surname> <given-names>R</given-names></name><name><surname>Smith</surname> <given-names>LS</given-names></name><name><surname>Wachtler</surname> <given-names>T</given-names></name><name><surname>Wójcik</surname> <given-names>DK</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>1st incf workshop on validation of analysis methods</article-title><source>F1000Research</source><elocation-id>1115887.1</elocation-id><pub-id pub-id-type="doi">10.7490/f1000research.1115887.1</pub-id></element-citation></ref><ref id="bib18"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Dhawale</surname> <given-names>AK</given-names></name><name><surname>Poddar</surname> <given-names>R</given-names></name><name><surname>Wolff</surname> <given-names>SB</given-names></name><name><surname>Normand</surname> <given-names>VA</given-names></name><name><surname>Kopelowitz</surname> <given-names>E</given-names></name><name><surname>Ölveczky</surname> <given-names>BP</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Automated long-term recording and analysis of neural activity in behaving animals</article-title><source>eLife</source><volume>6</volume><elocation-id>e27702</elocation-id><pub-id pub-id-type="doi">10.7554/eLife.27702</pub-id><pub-id pub-id-type="pmid">28885141</pub-id></element-citation></ref><ref id="bib19"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Einevoll</surname> <given-names>GT</given-names></name><name><surname>Franke</surname> <given-names>F</given-names></name><name><surname>Hagen</surname> <given-names>E</given-names></name><name><surname>Pouzat</surname> <given-names>C</given-names></name><name><surname>Harris</surname> <given-names>KD</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>Towards reliable spike-train recordings from thousands of neurons with multielectrodes</article-title><source>Current Opinion in Neurobiology</source><volume>22</volume><fpage>11</fpage><lpage>17</lpage><pub-id pub-id-type="doi">10.1016/j.conb.2011.10.001</pub-id><pub-id pub-id-type="pmid">22023727</pub-id></element-citation></ref><ref id="bib20"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ekanadham</surname> <given-names>C</given-names></name><name><surname>Tranchina</surname> <given-names>D</given-names></name><name><surname>Simoncelli</surname> <given-names>EP</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>A unified framework and method for automatic neural spike identification</article-title><source>Journal of Neuroscience Methods</source><volume>222</volume><fpage>47</fpage><lpage>55</lpage><pub-id pub-id-type="doi">10.1016/j.jneumeth.2013.10.001</pub-id><pub-id pub-id-type="pmid">24184059</pub-id></element-citation></ref><ref id="bib21"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>English</surname> <given-names>DF</given-names></name><name><surname>McKenzie</surname> <given-names>S</given-names></name><name><surname>Evans</surname> <given-names>T</given-names></name><name><surname>Kim</surname> <given-names>K</given-names></name><name><surname>Yoon</surname> <given-names>E</given-names></name><name><surname>Buzsáki</surname> <given-names>G</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Pyramidal Cell-Interneuron circuit architecture and dynamics in hippocampal networks</article-title><source>Neuron</source><volume>96</volume><fpage>505</fpage><lpage>520</lpage><pub-id pub-id-type="doi">10.1016/j.neuron.2017.09.033</pub-id><pub-id pub-id-type="pmid">29024669</pub-id></element-citation></ref><ref id="bib22"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Eversmann</surname> <given-names>B</given-names></name><name><surname>Jenkner</surname> <given-names>M</given-names></name><name><surname>Hofmann</surname> <given-names>F</given-names></name><name><surname>Paulus</surname> <given-names>C</given-names></name><name><surname>Brederlow</surname> <given-names>R</given-names></name><name><surname>Holzapfl</surname> <given-names>B</given-names></name><name><surname>Fromherz</surname> <given-names>P</given-names></name><name><surname>Merz</surname> <given-names>M</given-names></name><name><surname>Brenner</surname> <given-names>M</given-names></name><name><surname>Schreiter</surname> <given-names>M</given-names></name><name><surname>Gabl</surname> <given-names>R</given-names></name><name><surname>Plehnert</surname> <given-names>K</given-names></name><name><surname>Steinhauser</surname> <given-names>M</given-names></name><name><surname>Eckstein</surname> <given-names>G</given-names></name><name><surname>Schmitt-Landsiedel</surname> <given-names>D</given-names></name><name><surname>Thewes</surname> <given-names>R</given-names></name></person-group><year iso-8601-date="2003">2003</year><article-title>A 128 x 128 cmos biosensor array for extracellular recording of neural activity</article-title><source>IEEE Journal of Solid-State Circuits</source><volume>38</volume><fpage>2306</fpage><lpage>2317</lpage><pub-id pub-id-type="doi">10.1109/JSSC.2003.819174</pub-id></element-citation></ref><ref id="bib23"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fee</surname> <given-names>MS</given-names></name><name><surname>Mitra</surname> <given-names>PP</given-names></name><name><surname>Kleinfeld</surname> <given-names>D</given-names></name></person-group><year iso-8601-date="1996">1996</year><article-title>Automatic sorting of multiple unit neuronal signals in the presence of anisotropic and non-Gaussian variability</article-title><source>Journal of Neuroscience Methods</source><volume>69</volume><fpage>175</fpage><lpage>188</lpage><pub-id pub-id-type="doi">10.1016/S0165-0270(96)00050-7</pub-id><pub-id pub-id-type="pmid">8946321</pub-id></element-citation></ref><ref id="bib24"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Franke</surname> <given-names>F</given-names></name><name><surname>Meier</surname> <given-names>P</given-names></name><name><surname>Obermayer</surname> <given-names>KH</given-names></name><name><surname>Watchler</surname> <given-names>T</given-names></name><name><surname>Sobolev</surname> <given-names>A</given-names></name><name><surname>Tiziano</surname> <given-names>Z</given-names></name><name><surname>Einevoll</surname> <given-names>G</given-names></name><name><surname>Hagen</surname> <given-names>E</given-names></name><name><surname>Ness</surname> <given-names>TV</given-names></name><name><surname>Khosrowshahi</surname> <given-names>A</given-names></name><name><surname>Teleńczuk</surname> <given-names>B</given-names></name><name><surname>Bielievtsov</surname> <given-names>D</given-names></name><name><surname>Kadir</surname> <given-names>S</given-names></name></person-group><year iso-8601-date="2012">2012</year><data-title>G-Node spikesorting evaluation project</data-title><source>Github</source><ext-link ext-link-type="uri" xlink:href="http://spike.g-node.org/">http://spike.g-node.org/</ext-link></element-citation></ref><ref id="bib25"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Franke</surname> <given-names>F</given-names></name><name><surname>Pröpper</surname> <given-names>R</given-names></name><name><surname>Alle</surname> <given-names>H</given-names></name><name><surname>Meier</surname> <given-names>P</given-names></name><name><surname>Geiger</surname> <given-names>JR</given-names></name><name><surname>Obermayer</surname> <given-names>K</given-names></name><name><surname>Munk</surname> <given-names>MH</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Spike sorting of synchronous spikes from local neuron ensembles</article-title><source>Journal of Neurophysiology</source><volume>114</volume><fpage>2535</fpage><lpage>2549</lpage><pub-id pub-id-type="doi">10.1152/jn.00993.2014</pub-id><pub-id pub-id-type="pmid">26289473</pub-id></element-citation></ref><ref id="bib26"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Freeman</surname> <given-names>J</given-names></name></person-group><year iso-8601-date="2015">2015</year><data-title>Neurofinder</data-title><source>Codeneuro</source><ext-link ext-link-type="uri" xlink:href="http://neurofinder.codeneuro.org">http://neurofinder.codeneuro.org</ext-link></element-citation></ref><ref id="bib27"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Garcia</surname> <given-names>S</given-names></name><name><surname>Pouzat</surname> <given-names>C</given-names></name></person-group><year iso-8601-date="2019">2019</year><data-title>Tridesclous (software)</data-title><source>Github</source><ext-link ext-link-type="uri" xlink:href="https://github.com/tridesclous/tridesclous">https://github.com/tridesclous/tridesclous</ext-link></element-citation></ref><ref id="bib28"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gratiy</surname> <given-names>SL</given-names></name><name><surname>Billeh</surname> <given-names>YN</given-names></name><name><surname>Dai</surname> <given-names>K</given-names></name><name><surname>Mitelut</surname> <given-names>C</given-names></name><name><surname>Feng</surname> <given-names>D</given-names></name><name><surname>Gouwens</surname> <given-names>NW</given-names></name><name><surname>Cain</surname> <given-names>N</given-names></name><name><surname>Koch</surname> <given-names>C</given-names></name><name><surname>Anastassiou</surname> <given-names>CA</given-names></name><name><surname>Arkhipov</surname> <given-names>A</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>BioNet: a Python interface to NEURON for modeling large-scale networks</article-title><source>PLOS ONE</source><volume>13</volume><elocation-id>e0201630</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pone.0201630</pub-id><pub-id pub-id-type="pmid">30071069</pub-id></element-citation></ref><ref id="bib29"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gray</surname> <given-names>CM</given-names></name><name><surname>Maldonado</surname> <given-names>PE</given-names></name><name><surname>Wilson</surname> <given-names>M</given-names></name><name><surname>McNaughton</surname> <given-names>B</given-names></name></person-group><year iso-8601-date="1995">1995</year><article-title>Tetrodes markedly improve the reliability and yield of multiple single-unit isolation from multi-unit recordings in cat striate cortex</article-title><source>Journal of Neuroscience Methods</source><volume>63</volume><fpage>43</fpage><lpage>54</lpage><pub-id pub-id-type="doi">10.1016/0165-0270(95)00085-2</pub-id><pub-id pub-id-type="pmid">8788047</pub-id></element-citation></ref><ref id="bib30"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hagen</surname> <given-names>E</given-names></name><name><surname>Ness</surname> <given-names>TV</given-names></name><name><surname>Khosrowshahi</surname> <given-names>A</given-names></name><name><surname>Sørensen</surname> <given-names>C</given-names></name><name><surname>Fyhn</surname> <given-names>M</given-names></name><name><surname>Hafting</surname> <given-names>T</given-names></name><name><surname>Franke</surname> <given-names>F</given-names></name><name><surname>Einevoll</surname> <given-names>GT</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>ViSAPy: a Python tool for biophysics-based generation of virtual spiking activity for evaluation of spike-sorting algorithms</article-title><source>Journal of Neuroscience Methods</source><volume>245</volume><fpage>182</fpage><lpage>204</lpage><pub-id pub-id-type="doi">10.1016/j.jneumeth.2015.01.029</pub-id><pub-id pub-id-type="pmid">25662445</pub-id></element-citation></ref><ref id="bib31"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Harris</surname> <given-names>KD</given-names></name><name><surname>Henze</surname> <given-names>DA</given-names></name><name><surname>Csicsvari</surname> <given-names>J</given-names></name><name><surname>Hirase</surname> <given-names>H</given-names></name><name><surname>Buzsáki</surname> <given-names>G</given-names></name></person-group><year iso-8601-date="2000">2000</year><article-title>Accuracy of tetrode spike separation as determined by simultaneous intracellular and extracellular measurements</article-title><source>Journal of Neurophysiology</source><volume>84</volume><fpage>401</fpage><lpage>414</lpage><pub-id pub-id-type="doi">10.1152/jn.2000.84.1.401</pub-id><pub-id pub-id-type="pmid">10899214</pub-id></element-citation></ref><ref id="bib32"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Harris</surname> <given-names>KD</given-names></name><name><surname>Quiroga</surname> <given-names>RQ</given-names></name><name><surname>Freeman</surname> <given-names>J</given-names></name><name><surname>Smith</surname> <given-names>SL</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Improving data quality in neuronal population recordings</article-title><source>Nature Neuroscience</source><volume>19</volume><fpage>1165</fpage><lpage>1174</lpage><pub-id pub-id-type="doi">10.1038/nn.4365</pub-id><pub-id pub-id-type="pmid">27571195</pub-id></element-citation></ref><ref id="bib33"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hazan</surname> <given-names>L</given-names></name><name><surname>Zugaro</surname> <given-names>M</given-names></name><name><surname>Buzsáki</surname> <given-names>G</given-names></name></person-group><year iso-8601-date="2006">2006</year><article-title>Klusters, NeuroScope, NDManager: a free software suite for neurophysiological data processing and visualization</article-title><source>Journal of Neuroscience Methods</source><volume>155</volume><fpage>207</fpage><lpage>216</lpage><pub-id pub-id-type="doi">10.1016/j.jneumeth.2006.01.017</pub-id><pub-id pub-id-type="pmid">16580733</pub-id></element-citation></ref><ref id="bib34"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Hennig</surname> <given-names>MH</given-names></name><name><surname>Hurwitz</surname> <given-names>C</given-names></name><name><surname>Sorbaro</surname> <given-names>M</given-names></name></person-group><year iso-8601-date="2019">2019</year><chapter-title>Scaling spike detection and sorting for next-generation electrophysiology</chapter-title><source>In Vitro Neuronal Networks</source><publisher-name>Springer</publisher-name><fpage>171</fpage><lpage>184</lpage><pub-id pub-id-type="doi">10.1007/978-3-030-11135-9</pub-id></element-citation></ref><ref id="bib35"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Henze</surname> <given-names>DA</given-names></name><name><surname>Borhegyi</surname> <given-names>Z</given-names></name><name><surname>Csicsvari</surname> <given-names>J</given-names></name><name><surname>Mamiya</surname> <given-names>A</given-names></name><name><surname>Harris</surname> <given-names>KD</given-names></name><name><surname>Buzsáki</surname> <given-names>G</given-names></name></person-group><year iso-8601-date="2000">2000</year><article-title>Intracellular features predicted by extracellular recordings in the Hippocampus in vivo</article-title><source>Journal of Neurophysiology</source><volume>84</volume><fpage>390</fpage><lpage>400</lpage><pub-id pub-id-type="doi">10.1152/jn.2000.84.1.390</pub-id><pub-id pub-id-type="pmid">10899213</pub-id></element-citation></ref><ref id="bib36"><element-citation publication-type="data"><person-group person-group-type="author"><name><surname>Henze</surname> <given-names>D</given-names></name><name><surname>Harris</surname> <given-names>K</given-names></name><name><surname>Borhegyi</surname> <given-names>Z</given-names></name><name><surname>Csicsvari</surname> <given-names>J</given-names></name><name><surname>Mamiya</surname> <given-names>A</given-names></name><name><surname>Hirase</surname> <given-names>H</given-names></name><name><surname>Sirota</surname> <given-names>A</given-names></name><name><surname>Buzsáki</surname> <given-names>G</given-names></name></person-group><year iso-8601-date="2009">2009</year><data-title>Simultaneous intracellular and extracellular recordings from Hippocampus region ca1 of anesthetized rats data</data-title><source>Collaborative Research in Computational Neuroscience</source><pub-id assigning-authority="other" pub-id-type="doi">10.6080/K02Z13FP</pub-id></element-citation></ref><ref id="bib37"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hilgen</surname> <given-names>G</given-names></name><name><surname>Sorbaro</surname> <given-names>M</given-names></name><name><surname>Pirmoradian</surname> <given-names>S</given-names></name><name><surname>Muthmann</surname> <given-names>JO</given-names></name><name><surname>Kepiro</surname> <given-names>IE</given-names></name><name><surname>Ullo</surname> <given-names>S</given-names></name><name><surname>Ramirez</surname> <given-names>CJ</given-names></name><name><surname>Puente Encinas</surname> <given-names>A</given-names></name><name><surname>Maccione</surname> <given-names>A</given-names></name><name><surname>Berdondini</surname> <given-names>L</given-names></name><name><surname>Murino</surname> <given-names>V</given-names></name><name><surname>Sona</surname> <given-names>D</given-names></name><name><surname>Cella Zanacchi</surname> <given-names>F</given-names></name><name><surname>Sernagor</surname> <given-names>E</given-names></name><name><surname>Hennig</surname> <given-names>MH</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Unsupervised spike sorting for Large-Scale, High-Density multielectrode arrays</article-title><source>Cell Reports</source><volume>18</volume><fpage>2521</fpage><lpage>2532</lpage><pub-id pub-id-type="doi">10.1016/j.celrep.2017.02.038</pub-id><pub-id pub-id-type="pmid">28273464</pub-id></element-citation></ref><ref id="bib38"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hill</surname> <given-names>DN</given-names></name><name><surname>Mehta</surname> <given-names>SB</given-names></name><name><surname>Kleinfeld</surname> <given-names>D</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>Quality metrics to accompany spike sorting of extracellular signals</article-title><source>Journal of Neuroscience</source><volume>31</volume><fpage>8699</fpage><lpage>8705</lpage><pub-id pub-id-type="doi">10.1523/JNEUROSCI.0971-11.2011</pub-id><pub-id pub-id-type="pmid">21677152</pub-id></element-citation></ref><ref id="bib39"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hines</surname> <given-names>ML</given-names></name><name><surname>Carnevale</surname> <given-names>NT</given-names></name></person-group><year iso-8601-date="1997">1997</year><article-title>The NEURON simulation environment</article-title><source>Neural Computation</source><volume>9</volume><fpage>1179</fpage><lpage>1209</lpage><pub-id pub-id-type="doi">10.1162/neco.1997.9.6.1179</pub-id><pub-id pub-id-type="pmid">9248061</pub-id></element-citation></ref><ref id="bib40"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hubel</surname> <given-names>DH</given-names></name></person-group><year iso-8601-date="1957">1957</year><article-title>Tungsten microelectrode for recording from single units</article-title><source>Science</source><volume>125</volume><fpage>549</fpage><lpage>550</lpage><pub-id pub-id-type="doi">10.1126/science.125.3247.549</pub-id><pub-id pub-id-type="pmid">17793797</pub-id></element-citation></ref><ref id="bib41"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Jun</surname> <given-names>JJ</given-names></name><name><surname>Mitelut</surname> <given-names>C</given-names></name><name><surname>Lai</surname> <given-names>C</given-names></name><name><surname>Gratiy</surname> <given-names>S</given-names></name><name><surname>Anastassiou</surname> <given-names>C</given-names></name><name><surname>Harris</surname> <given-names>TD</given-names></name></person-group><year iso-8601-date="2017">2017a</year><article-title>Real-time spike sorting platform for high-density extracellular probes with ground-truth validation and drift correction</article-title><source>bioRxiv</source><pub-id pub-id-type="doi">10.1101/101030</pub-id></element-citation></ref><ref id="bib42"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Jun</surname> <given-names>JJ</given-names></name><name><surname>Steinmetz</surname> <given-names>NA</given-names></name><name><surname>Siegle</surname> <given-names>JH</given-names></name><name><surname>Denman</surname> <given-names>DJ</given-names></name><name><surname>Bauza</surname> <given-names>M</given-names></name><name><surname>Barbarits</surname> <given-names>B</given-names></name><name><surname>Lee</surname> <given-names>AK</given-names></name><name><surname>Anastassiou</surname> <given-names>CA</given-names></name><name><surname>Andrei</surname> <given-names>A</given-names></name><name><surname>Aydın</surname> <given-names>Ç</given-names></name><name><surname>Barbic</surname> <given-names>M</given-names></name><name><surname>Blanche</surname> <given-names>TJ</given-names></name><name><surname>Bonin</surname> <given-names>V</given-names></name><name><surname>Couto</surname> <given-names>J</given-names></name><name><surname>Dutta</surname> <given-names>B</given-names></name><name><surname>Gratiy</surname> <given-names>SL</given-names></name><name><surname>Gutnisky</surname> <given-names>DA</given-names></name><name><surname>Häusser</surname> <given-names>M</given-names></name><name><surname>Karsh</surname> <given-names>B</given-names></name><name><surname>Ledochowitsch</surname> <given-names>P</given-names></name><name><surname>Lopez</surname> <given-names>CM</given-names></name><name><surname>Mitelut</surname> <given-names>C</given-names></name><name><surname>Musa</surname> <given-names>S</given-names></name><name><surname>Okun</surname> <given-names>M</given-names></name><name><surname>Pachitariu</surname> <given-names>M</given-names></name><name><surname>Putzeys</surname> <given-names>J</given-names></name><name><surname>Rich</surname> <given-names>PD</given-names></name><name><surname>Rossant</surname> <given-names>C</given-names></name><name><surname>Sun</surname> <given-names>WL</given-names></name><name><surname>Svoboda</surname> <given-names>K</given-names></name><name><surname>Carandini</surname> <given-names>M</given-names></name><name><surname>Harris</surname> <given-names>KD</given-names></name><name><surname>Koch</surname> <given-names>C</given-names></name><name><surname>O'Keefe</surname> <given-names>J</given-names></name><name><surname>Harris</surname> <given-names>TD</given-names></name></person-group><year iso-8601-date="2017">2017b</year><article-title>Fully integrated silicon probes for high-density recording of neural activity</article-title><source>Nature</source><volume>551</volume><fpage>232</fpage><lpage>236</lpage><pub-id pub-id-type="doi">10.1038/nature24636</pub-id><pub-id pub-id-type="pmid">29120427</pub-id></element-citation></ref><ref id="bib43"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Kampff</surname> <given-names>A</given-names></name></person-group><year iso-8601-date="2018">2018</year><data-title>Ultra Dense Extracellular Survey</data-title><source>Kampff</source><ext-link ext-link-type="uri" xlink:href="http://www.kampff-lab.org/ultra-dense-survey">http://www.kampff-lab.org/ultra-dense-survey</ext-link></element-citation></ref><ref id="bib44"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kuo</surname> <given-names>JT</given-names></name><name><surname>Kim</surname> <given-names>BJ</given-names></name><name><surname>Hara</surname> <given-names>SA</given-names></name><name><surname>Lee</surname> <given-names>CD</given-names></name><name><surname>Gutierrez</surname> <given-names>CA</given-names></name><name><surname>Hoang</surname> <given-names>TQ</given-names></name><name><surname>Meng</surname> <given-names>E</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Novel flexible parylene neural probe with 3D sheath structure for enhancing tissue integration</article-title><source>Lab Chip</source><volume>13</volume><fpage>554</fpage><lpage>561</lpage><pub-id pub-id-type="doi">10.1039/C2LC40935F</pub-id><pub-id pub-id-type="pmid">23160191</pub-id></element-citation></ref><ref id="bib45"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kurtzer</surname> <given-names>GM</given-names></name><name><surname>Sochat</surname> <given-names>V</given-names></name><name><surname>Bauer</surname> <given-names>MW</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Singularity: scientific containers for mobility of compute</article-title><source>PLOS ONE</source><volume>12</volume><elocation-id>e0177459</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pone.0177459</pub-id><pub-id pub-id-type="pmid">28494014</pub-id></element-citation></ref><ref id="bib46"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Lee</surname> <given-names>JH</given-names></name><name><surname>Carlson</surname> <given-names>DE</given-names></name><name><surname>Razaghi</surname> <given-names>HS</given-names></name><name><surname>Yao</surname> <given-names>W</given-names></name><name><surname>Goetz</surname> <given-names>GA</given-names></name><name><surname>Hagen</surname> <given-names>E</given-names></name><name><surname>Batty</surname> <given-names>E</given-names></name><name><surname>Chichilnisky</surname> <given-names>EJ</given-names></name><name><surname>Einevoll</surname> <given-names>GT</given-names></name><name><surname>Paninski</surname> <given-names>L</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>YASS:yet another spike sorter</article-title><conf-name>Adv. Neural. Inf. Process. Syst. (NeurIPS)</conf-name><fpage>4002</fpage><lpage>4012</lpage></element-citation></ref><ref id="bib47"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lefebvre</surname> <given-names>B</given-names></name><name><surname>Yger</surname> <given-names>P</given-names></name><name><surname>Marre</surname> <given-names>O</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Recent progress in multi-electrode spike sorting methods</article-title><source>Journal of Physiology-Paris</source><volume>110</volume><fpage>327</fpage><lpage>335</lpage><pub-id pub-id-type="doi">10.1016/j.jphysparis.2017.02.005</pub-id><pub-id pub-id-type="pmid">28263793</pub-id></element-citation></ref><ref id="bib48"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lewicki</surname> <given-names>MS</given-names></name></person-group><year iso-8601-date="1998">1998</year><article-title>A review of methods for spike sorting: the detection and classification of neural action potentials</article-title><source>Network: Computation in Neural Systems</source><volume>9</volume><fpage>R53</fpage><lpage>R78</lpage><pub-id pub-id-type="doi">10.1088/0954-898X_9_4_001</pub-id></element-citation></ref><ref id="bib49"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Li</surname> <given-names>PH</given-names></name><name><surname>Gauthier</surname> <given-names>JL</given-names></name><name><surname>Schiff</surname> <given-names>M</given-names></name><name><surname>Sher</surname> <given-names>A</given-names></name><name><surname>Ahn</surname> <given-names>D</given-names></name><name><surname>Field</surname> <given-names>GD</given-names></name><name><surname>Greschner</surname> <given-names>M</given-names></name><name><surname>Callaway</surname> <given-names>EM</given-names></name><name><surname>Litke</surname> <given-names>AM</given-names></name><name><surname>Chichilnisky</surname> <given-names>EJ</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Anatomical identification of extracellularly recorded cells in Large-Scale multielectrode recordings</article-title><source>The Journal of Neuroscience</source><volume>35</volume><fpage>4663</fpage><lpage>4675</lpage><pub-id pub-id-type="doi">10.1523/JNEUROSCI.3675-14.2015</pub-id><pub-id pub-id-type="pmid">25788683</pub-id></element-citation></ref><ref id="bib50"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Litke</surname> <given-names>AM</given-names></name><name><surname>Bezayiff</surname> <given-names>N</given-names></name><name><surname>Chichilnisky</surname> <given-names>EJ</given-names></name><name><surname>Cunningham</surname> <given-names>W</given-names></name><name><surname>Dabrowski</surname> <given-names>W</given-names></name><name><surname>Grillo</surname> <given-names>AA</given-names></name><name><surname>Grivich</surname> <given-names>M</given-names></name><name><surname>Grybos</surname> <given-names>P</given-names></name><name><surname>Hottowy</surname> <given-names>P</given-names></name><name><surname>Kachiguine</surname> <given-names>S</given-names></name><name><surname>Kalmar</surname> <given-names>RS</given-names></name><name><surname>Mathieson</surname> <given-names>K</given-names></name><name><surname>Petrusca</surname> <given-names>D</given-names></name><name><surname>Rahman</surname> <given-names>M</given-names></name><name><surname>Sher</surname> <given-names>A</given-names></name></person-group><year iso-8601-date="2004">2004</year><article-title>What does the eye tell the brain?: development of a system for the large-scale recording of retinal output activity</article-title><source>IEEE Transactions on Nuclear Science</source><volume>51</volume><fpage>1434</fpage><lpage>1440</lpage><pub-id pub-id-type="doi">10.1109/TNS.2004.832706</pub-id></element-citation></ref><ref id="bib51"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Marques-Smith</surname> <given-names>A</given-names></name><name><surname>Neto</surname> <given-names>JP</given-names></name><name><surname>Lopes</surname> <given-names>G</given-names></name><name><surname>Nogueira</surname> <given-names>J</given-names></name><name><surname>Calcaterra</surname> <given-names>L</given-names></name><name><surname>Frazão</surname> <given-names>J</given-names></name><name><surname>Kim</surname> <given-names>D</given-names></name><name><surname>Phillips</surname> <given-names>MG</given-names></name><name><surname>Dimitriadis</surname> <given-names>G</given-names></name><name><surname>Kampff</surname> <given-names>A</given-names></name></person-group><year iso-8601-date="2018">2018a</year><article-title>Recording from the same neuron with high-density cmos probes and patch-clamp: a ground-truth dataset and an experiment in collaboration</article-title><source>bioRxiv</source><pub-id pub-id-type="doi">10.1101/370080</pub-id></element-citation></ref><ref id="bib52"><element-citation publication-type="data"><person-group person-group-type="author"><name><surname>Marques-Smith</surname> <given-names>A</given-names></name><name><surname>Neto</surname> <given-names>JP</given-names></name><name><surname>Lopes</surname> <given-names>G</given-names></name><name><surname>Nogueira</surname> <given-names>J</given-names></name><name><surname>Calcaterra</surname> <given-names>L</given-names></name><name><surname>Frazão</surname> <given-names>J</given-names></name><name><surname>Kim</surname> <given-names>D</given-names></name><name><surname>Phillips</surname> <given-names>MG</given-names></name><name><surname>Dimitriadis</surname> <given-names>G</given-names></name><name><surname>Kampff</surname> <given-names>A</given-names></name></person-group><year iso-8601-date="2018">2018b</year><data-title>Simultaneous Patch-Clamp and dense cmos probe extracellular recordings from the same cortical neuron in anaesthetized rats</data-title><source>Collaborative Research in Computational Neuroscience</source><pub-id pub-id-type="doi">10.6080/K0J67F4T</pub-id></element-citation></ref><ref id="bib53"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Marre</surname> <given-names>O</given-names></name><name><surname>Amodei</surname> <given-names>D</given-names></name><name><surname>Deshmukh</surname> <given-names>N</given-names></name><name><surname>Sadeghi</surname> <given-names>K</given-names></name><name><surname>Soo</surname> <given-names>F</given-names></name><name><surname>Holy</surname> <given-names>TE</given-names></name><name><surname>Berry</surname> <given-names>MJ</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>Mapping a complete neural population in the retina</article-title><source>Journal of Neuroscience</source><volume>32</volume><fpage>14859</fpage><lpage>14873</lpage><pub-id pub-id-type="doi">10.1523/JNEUROSCI.0723-12.2012</pub-id><pub-id pub-id-type="pmid">23100409</pub-id></element-citation></ref><ref id="bib54"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Merkel</surname> <given-names>D</given-names></name></person-group><year iso-8601-date="2014">2014</year><article-title>Docker: lightweight linux containers for consistent development and deployment</article-title><source> Linux Journal</source><volume>2</volume><elocation-id>62479797</elocation-id></element-citation></ref><ref id="bib55"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Mitelut</surname> <given-names>CC</given-names></name></person-group><year iso-8601-date="2016">2016</year><data-title>Spikesortingtest</data-title><source>Internet Archive</source><ext-link ext-link-type="uri" xlink:href="https://web.archive.org/web/20190511041642/http://spikesortingtest.com">https://web.archive.org/web/20190511041642/http://spikesortingtest.com</ext-link></element-citation></ref><ref id="bib56"><element-citation publication-type="thesis"><person-group person-group-type="author"><name><surname>Mitelut</surname> <given-names>CC</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>Characterizing single neuron activity patterns and dynamics using multi-scale spontaneous neuronal activity recordings of cat and mouse cortex</article-title><publisher-name>University of British Columbia</publisher-name></element-citation></ref><ref id="bib57"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Neto</surname> <given-names>JP</given-names></name><name><surname>Lopes</surname> <given-names>G</given-names></name><name><surname>Frazão</surname> <given-names>J</given-names></name><name><surname>Nogueira</surname> <given-names>J</given-names></name><name><surname>Lacerda</surname> <given-names>P</given-names></name><name><surname>Baião</surname> <given-names>P</given-names></name><name><surname>Aarts</surname> <given-names>A</given-names></name><name><surname>Andrei</surname> <given-names>A</given-names></name><name><surname>Musa</surname> <given-names>S</given-names></name><name><surname>Fortunato</surname> <given-names>E</given-names></name><name><surname>Barquinha</surname> <given-names>P</given-names></name><name><surname>Kampff</surname> <given-names>AR</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Validating silicon polytrodes with paired juxtacellular recordings: method and dataset</article-title><source>Journal of Neurophysiology</source><volume>116</volume><fpage>892</fpage><lpage>903</lpage><pub-id pub-id-type="doi">10.1152/jn.00103.2016</pub-id><pub-id pub-id-type="pmid">27306671</pub-id></element-citation></ref><ref id="bib58"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Neymotin</surname> <given-names>SA</given-names></name><name><surname>Lytton</surname> <given-names>WW</given-names></name><name><surname>Olypher</surname> <given-names>AV</given-names></name><name><surname>Fenton</surname> <given-names>AA</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>Measuring the quality of neuronal identification in ensemble recordings</article-title><source>Journal of Neuroscience</source><volume>31</volume><fpage>16398</fpage><lpage>16409</lpage><pub-id pub-id-type="doi">10.1523/JNEUROSCI.4053-11.2011</pub-id><pub-id pub-id-type="pmid">22072690</pub-id></element-citation></ref><ref id="bib59"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Nicolelis</surname> <given-names>MA</given-names></name><name><surname>Ghazanfar</surname> <given-names>AA</given-names></name><name><surname>Faggin</surname> <given-names>BM</given-names></name><name><surname>Votaw</surname> <given-names>S</given-names></name><name><surname>Oliveira</surname> <given-names>LM</given-names></name></person-group><year iso-8601-date="1997">1997</year><article-title>Reconstructing the Engram: simultaneous, multisite, many single neuron recordings</article-title><source>Neuron</source><volume>18</volume><fpage>529</fpage><lpage>537</lpage><pub-id pub-id-type="doi">10.1016/S0896-6273(00)80295-0</pub-id><pub-id pub-id-type="pmid">9136763</pub-id></element-citation></ref><ref id="bib60"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Pachitariu</surname> <given-names>M</given-names></name><name><surname>Steinmetz</surname> <given-names>NA</given-names></name><name><surname>Kadir</surname> <given-names>SN</given-names></name><name><surname>Carandini</surname> <given-names>M</given-names></name><name><surname>Harris</surname> <given-names>KD</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Fast and accurate spike sorting of high-channel count probes with kilosort</article-title><conf-name>Advances in Neural Information Processing Systems 29 (NIPS 2016)</conf-name><fpage>4448</fpage><lpage>4456</lpage></element-citation></ref><ref id="bib61"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Pachitariu</surname> <given-names>M</given-names></name><name><surname>Steinmetz</surname> <given-names>NA</given-names></name><name><surname>Colonell</surname> <given-names>J</given-names></name></person-group><year iso-8601-date="2019">2019</year><data-title>Kilosort2</data-title><source>Github</source><ext-link ext-link-type="uri" xlink:href="https://github.com/MouseLand/Kilosort2">https://github.com/MouseLand/Kilosort2</ext-link></element-citation></ref><ref id="bib62"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pillow</surname> <given-names>JW</given-names></name><name><surname>Shlens</surname> <given-names>J</given-names></name><name><surname>Chichilnisky</surname> <given-names>EJ</given-names></name><name><surname>Simoncelli</surname> <given-names>EP</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>A model-based spike sorting algorithm for removing correlation artifacts in multi-neuron recordings</article-title><source>PLOS ONE</source><volume>8</volume><elocation-id>e62123</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pone.0062123</pub-id><pub-id pub-id-type="pmid">23671583</pub-id></element-citation></ref><ref id="bib63"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pouzat</surname> <given-names>C</given-names></name><name><surname>Mazor</surname> <given-names>O</given-names></name><name><surname>Laurent</surname> <given-names>G</given-names></name></person-group><year iso-8601-date="2002">2002</year><article-title>Using noise signature to optimize spike-sorting and to assess neuronal classification quality</article-title><source>Journal of Neuroscience Methods</source><volume>122</volume><fpage>43</fpage><lpage>57</lpage><pub-id pub-id-type="doi">10.1016/S0165-0270(02)00276-5</pub-id><pub-id pub-id-type="pmid">12535763</pub-id></element-citation></ref><ref id="bib64"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Prentice</surname> <given-names>JS</given-names></name><name><surname>Homann</surname> <given-names>J</given-names></name><name><surname>Simmons</surname> <given-names>KD</given-names></name><name><surname>Tkačik</surname> <given-names>G</given-names></name><name><surname>Balasubramanian</surname> <given-names>V</given-names></name><name><surname>Nelson</surname> <given-names>PC</given-names></name></person-group><year iso-8601-date="2011">2011</year><article-title>Fast, scalable, bayesian spike identification for multi-electrode arrays</article-title><source>PLOS ONE</source><volume>6</volume><elocation-id>e19884</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pone.0019884</pub-id><pub-id pub-id-type="pmid">21799725</pub-id></element-citation></ref><ref id="bib65"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Quiroga</surname> <given-names>RQ</given-names></name><name><surname>Nadasdy</surname> <given-names>Z</given-names></name><name><surname>Ben-Shaul</surname> <given-names>Y</given-names></name></person-group><year iso-8601-date="2004">2004</year><article-title>Unsupervised spike detection and sorting with wavelets and superparamagnetic clustering</article-title><source>Neural Computation</source><volume>16</volume><fpage>1661</fpage><lpage>1687</lpage><pub-id pub-id-type="doi">10.1162/089976604774201631</pub-id><pub-id pub-id-type="pmid">15228749</pub-id></element-citation></ref><ref id="bib66"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Quiroga</surname> <given-names>RQ</given-names></name></person-group><year iso-8601-date="2012">2012</year><article-title>Spike sorting</article-title><source>Current Biology</source><volume>22</volume><fpage>R45</fpage><lpage>R46</lpage><pub-id pub-id-type="doi">10.1016/j.cub.2011.11.005</pub-id><pub-id pub-id-type="pmid">22280903</pub-id></element-citation></ref><ref id="bib67"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rey</surname> <given-names>HG</given-names></name><name><surname>Pedreira</surname> <given-names>C</given-names></name><name><surname>Quian Quiroga</surname> <given-names>R</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Past, present and future of spike sorting techniques</article-title><source>Brain Research Bulletin</source><volume>119</volume><fpage>106</fpage><lpage>117</lpage><pub-id pub-id-type="doi">10.1016/j.brainresbull.2015.04.007</pub-id><pub-id pub-id-type="pmid">25931392</pub-id></element-citation></ref><ref id="bib68"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rossant</surname> <given-names>C</given-names></name><name><surname>Kadir</surname> <given-names>SN</given-names></name><name><surname>Goodman</surname> <given-names>DFM</given-names></name><name><surname>Schulman</surname> <given-names>J</given-names></name><name><surname>Hunter</surname> <given-names>MLD</given-names></name><name><surname>Saleem</surname> <given-names>AB</given-names></name><name><surname>Grosmark</surname> <given-names>A</given-names></name><name><surname>Belluscio</surname> <given-names>M</given-names></name><name><surname>Denfield</surname> <given-names>GH</given-names></name><name><surname>Ecker</surname> <given-names>AS</given-names></name><name><surname>Tolias</surname> <given-names>AS</given-names></name><name><surname>Solomon</surname> <given-names>S</given-names></name><name><surname>Buzsaki</surname> <given-names>G</given-names></name><name><surname>Carandini</surname> <given-names>M</given-names></name><name><surname>Harris</surname> <given-names>KD</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>Spike sorting for large, dense electrode arrays</article-title><source>Nature Neuroscience</source><volume>19</volume><fpage>634</fpage><lpage>641</lpage><pub-id pub-id-type="doi">10.1038/nn.4268</pub-id><pub-id pub-id-type="pmid">26974951</pub-id></element-citation></ref><ref id="bib69"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Schmitzer-Torbert</surname> <given-names>N</given-names></name><name><surname>Jackson</surname> <given-names>J</given-names></name><name><surname>Henze</surname> <given-names>D</given-names></name><name><surname>Harris</surname> <given-names>K</given-names></name><name><surname>Redish</surname> <given-names>AD</given-names></name></person-group><year iso-8601-date="2005">2005</year><article-title>Quantitative measures of cluster quality for use in extracellular recordings</article-title><source>Neuroscience</source><volume>131</volume><fpage>1</fpage><lpage>11</lpage><pub-id pub-id-type="doi">10.1016/j.neuroscience.2004.09.066</pub-id><pub-id pub-id-type="pmid">15680687</pub-id></element-citation></ref><ref id="bib70"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Seymour</surname> <given-names>JP</given-names></name><name><surname>Wu</surname> <given-names>F</given-names></name><name><surname>Wise</surname> <given-names>KD</given-names></name><name><surname>Yoon</surname> <given-names>E</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>State-of-the-art MEMS and microsystem tools for brain research</article-title><source>Microsystems &amp; Nanoengineering</source><volume>3</volume><elocation-id>16066</elocation-id><pub-id pub-id-type="doi">10.1038/micronano.2016.66</pub-id><pub-id pub-id-type="pmid">31057845</pub-id></element-citation></ref><ref id="bib71"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Sivagnanam</surname> <given-names>S</given-names></name><name><surname>Majumdar</surname> <given-names>A</given-names></name><name><surname>Yoshimoto</surname> <given-names>K</given-names></name><name><surname>Astakhov</surname> <given-names>V</given-names></name><name><surname>Bandrowski</surname> <given-names>A</given-names></name><name><surname>Martone</surname> <given-names>ME</given-names></name><name><surname>Carnevale</surname> <given-names>NT</given-names></name></person-group><year iso-8601-date="2013">2013</year><article-title>Introducing the neuroscience gateway</article-title><conf-name>IWSG, Volume 993 of CEUR Workshop Proceedings</conf-name></element-citation></ref><ref id="bib72"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Spampinato</surname> <given-names>G</given-names></name><name><surname>Esposito</surname> <given-names>E</given-names></name><name><surname>Yger</surname> <given-names>P</given-names></name><name><surname>Duebel</surname> <given-names>J</given-names></name><name><surname>Picaud</surname> <given-names>S</given-names></name><name><surname>Marre</surname> <given-names>O</given-names></name></person-group><year iso-8601-date="2018">2018</year><data-title>Ground truth recordings for validation of spike sorting algorithms. data</data-title><source>Zenodo</source><ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo/record/1205233#.Xc8fdTJKh3k">https://doi.org/10.5281/zenodo/record/1205233#.Xc8fdTJKh3k</ext-link></element-citation></ref><ref id="bib73"><element-citation publication-type="software"><person-group person-group-type="author"><name><surname>Steinmetz</surname> <given-names>N</given-names></name></person-group><year iso-8601-date="2015">2015</year><data-title>Sorting Comparison</data-title><source>Cortexlab</source><ext-link ext-link-type="uri" xlink:href="http://phy.cortexlab.net/data/sortingComparison">http://phy.cortexlab.net/data/sortingComparison</ext-link></element-citation></ref><ref id="bib74"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Takahashi</surname> <given-names>S</given-names></name><name><surname>Sakurai</surname> <given-names>Y</given-names></name><name><surname>Tsukada</surname> <given-names>M</given-names></name><name><surname>Anzai</surname> <given-names>Y</given-names></name></person-group><year iso-8601-date="2002">2002</year><article-title>Classification of neuronal activities from tetrode recordings using independent component analysis</article-title><source>Neurocomputing</source><volume>49</volume><fpage>289</fpage><lpage>298</lpage><pub-id pub-id-type="doi">10.1016/S0925-2312(02)00528-3</pub-id></element-citation></ref><ref id="bib75"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tsai</surname> <given-names>D</given-names></name><name><surname>Sawyer</surname> <given-names>D</given-names></name><name><surname>Bradd</surname> <given-names>A</given-names></name><name><surname>Yuste</surname> <given-names>R</given-names></name><name><surname>Shepard</surname> <given-names>KL</given-names></name></person-group><year iso-8601-date="2017">2017</year><article-title>A very large-scale microelectrode array for cellular-resolution electrophysiology</article-title><source>Nature Communications</source><volume>8</volume><elocation-id>1802</elocation-id><pub-id pub-id-type="doi">10.1038/s41467-017-02009-x</pub-id><pub-id pub-id-type="pmid">29176752</pub-id></element-citation></ref><ref id="bib76"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wiwie</surname> <given-names>C</given-names></name><name><surname>Baumbach</surname> <given-names>J</given-names></name><name><surname>Röttger</surname> <given-names>R</given-names></name></person-group><year iso-8601-date="2015">2015</year><article-title>Comparing the performance of biomedical clustering methods</article-title><source>Nature Methods</source><volume>12</volume><fpage>1033</fpage><lpage>1038</lpage><pub-id pub-id-type="doi">10.1038/nmeth.3583</pub-id><pub-id pub-id-type="pmid">26389570</pub-id></element-citation></ref><ref id="bib77"><element-citation publication-type="preprint"><person-group person-group-type="author"><name><surname>Wouters</surname> <given-names>J</given-names></name><name><surname>Kloosterman</surname> <given-names>F</given-names></name><name><surname>Bertrand</surname> <given-names>A</given-names></name></person-group><year iso-8601-date="2019">2019</year><article-title>Shybrid: a graphical tool for generating hybrid ground-truth spiking data for evaluating spike sorting performance</article-title><source>bioRxiv</source><pub-id pub-id-type="doi">10.1101/734061</pub-id></element-citation></ref><ref id="bib78"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yger</surname> <given-names>P</given-names></name><name><surname>Spampinato</surname> <given-names>GL</given-names></name><name><surname>Esposito</surname> <given-names>E</given-names></name><name><surname>Lefebvre</surname> <given-names>B</given-names></name><name><surname>Deny</surname> <given-names>S</given-names></name><name><surname>Gardella</surname> <given-names>C</given-names></name><name><surname>Stimberg</surname> <given-names>M</given-names></name><name><surname>Jetter</surname> <given-names>F</given-names></name><name><surname>Zeck</surname> <given-names>G</given-names></name><name><surname>Picaud</surname> <given-names>S</given-names></name><name><surname>Duebel</surname> <given-names>J</given-names></name><name><surname>Marre</surname> <given-names>O</given-names></name></person-group><year iso-8601-date="2018">2018</year><article-title>A spike sorting toolbox for up to thousands of electrodes validated with ground truth recordings in vitro and in vivo</article-title><source>eLife</source><volume>7</volume><elocation-id>e34518</elocation-id><pub-id pub-id-type="doi">10.7554/eLife.34518</pub-id><pub-id pub-id-type="pmid">29557782</pub-id></element-citation></ref><ref id="bib79"><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Yuan</surname> <given-names>X</given-names></name><name><surname>Kim</surname> <given-names>S</given-names></name><name><surname>Juyon</surname> <given-names>J</given-names></name><name><surname>D’Urbino</surname> <given-names>M</given-names></name><name><surname>Bullmann</surname> <given-names>T</given-names></name><name><surname>Chen</surname> <given-names>Y</given-names></name><name><surname>Stettler</surname> <given-names>A</given-names></name><name><surname>Hierlemann</surname> <given-names>A</given-names></name><name><surname>Frey</surname> <given-names>U</given-names></name></person-group><year iso-8601-date="2016">2016</year><article-title>A microelectrode array with 8,640 electrodes enabling simultaneous Full-Frame readout at 6.5 kfps and 112-Channel Switch-Matrix readout at 20 ks/s</article-title><conf-name>IEEE Symposium on VLSI Circuits (VLSI-Circuits)</conf-name><pub-id pub-id-type="doi">10.1109/VL-SIC.2016.7573558</pub-id></element-citation></ref><ref id="bib80"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Zaki</surname> <given-names>MJ</given-names></name><name><surname>Meira Jr</surname> <given-names>W</given-names></name></person-group><year iso-8601-date="2014">2014</year><source>Data Mining and Analysis: Fundamental Concepts and Algorithms</source><publisher-loc>New York, NY</publisher-loc><publisher-name>Cambridge University Press</publisher-name><pub-id pub-id-type="doi">10.1017/CBO9780511810114</pub-id></element-citation></ref></ref-list></back><sub-article article-type="decision-letter" id="sa1"><front-stub><article-id pub-id-type="doi">10.7554/eLife.55167.sa1</article-id><title-group><article-title>Decision letter</article-title></title-group><contrib-group><contrib contrib-type="editor"><name><surname>Meister</surname><given-names>Markus</given-names></name><role>Reviewing Editor</role><aff><institution>California Institute of Technology</institution><country>United States</country></aff></contrib></contrib-group><contrib-group><contrib contrib-type="reviewer"><name><surname>Meister</surname><given-names>Markus</given-names> </name><role>Reviewer</role><aff><institution>California Institute of Technology</institution><country>United States</country></aff></contrib></contrib-group></front-stub><body><boxed-text><p>In the interests of transparency, eLife publishes the most substantive revision requests and the accompanying author responses.</p></boxed-text><p><bold>Acceptance summary:</bold></p><p>This paper introduces an online web site focused on evaluating different methods of spike sorting: the computational process that extracts the spiking of single neurons from a raw electrical recording of brain signals. The authors set themselves three goals: to aid scientists in selecting a spike sorter; to spur improvements to sorting algorithms; and to provide easy-to-use software packages. In an area that has been crying out for standardization this web site promises to be an invaluable resource.</p><p><bold>Decision letter after peer review:</bold></p><p>Thank you for submitting your article &quot;SpikeForest: reproducible web-facing ground-truth validation of automated neural spike sorters&quot; for consideration by <italic>eLife</italic>. Your article has been reviewed by three peer reviewers including Markus Meister as the Reviewing Editor and Reviewer #1, and the evaluation has been overseen by a Reviewing Editor and Ronald Calabrese as the Senior Editor.</p><p>The reviewers have discussed the reviews with one another and the Reviewing Editor has drafted this decision to help you prepare a revised submission.</p><p>Summary:</p><p>This paper introduces an online resource focused on evaluating different methods of spike sorting. Spike sorting is an indispensable step in analyzing extracellularly recorded neuronal data, and there have been large advances in the software that performs this task over the past few years. The result is a large number of algorithms and no general consensus as to which of these algorithms works best in each circumstance. Add to that the large number of different recording configurations and brain regions, and the result is substantial uncertainty about which sorter to use in any given situation. The SpikeForest website and comparison framework presented here represents a major step toward addressing that problem. The site maintains data from many extracellular recordings that include ground truth spike times of single units. And it implements about a dozen different spike sorting algorithms that can be applied to the same data sets. The results are analyzed by various quality metrics and compared across spike sorters and data sets in tabular form. The site also offers a dive into the results down to the waveforms of individual sorted units. It is live and extensible both with regards to new data sets and new sorters.</p><p>The authors set themselves three goals: to aid scientists in selecting a spike sorter; to spur improvements to sorting algorithms; and to provide easy-to-use software packages. Based on experience in our research groups and some polling of some colleagues, these goals have been achieved already. The paper is very well written and offers an indispensable complement to the website. Here is the consensus review:</p><p>Essential revisions:</p><p>The paper offers little guidance for how to interpret the output of each sorter. Each of these sorters will produce a number of clusters which do not correspond to single units. Some set of quality metrics must be applied when the user decides how to interpret the sorter's output, and the authors have the opportunity to provide some guidance on that critical topic. This is mentioned as the first future direction, and we would encourage the authors to make a first effort at this in the current manuscript.</p><p>The Introduction is quite long and reads more like a review article. Please distil this section down to the key facts that a reader needs to know and move other material to Results section or Discussion section. The first figure, for example, would be better placed at the beginning of the Results section.</p><p>All of the ground truth datasets are quite short (~10 min), but standard recordings from neuronal populations can span hours. It seems likely that the number of spikes from a given ground truth unit and the number of spikes from other units has an effect on sorting accuracy. Can this impact be quantified for each sorter? Please comment on whether the results will generalize to longer data sets.</p><p>Figure 2: Given that there is space for figures, it would be helpful to show not just the overall accuracy metric, but also the false positive and negatives for each sorter. Of course, this is available on the website, but readers may want this information right away. The caption should explain the meaning of empty cells in the table.</p><p>Please add some guidance for why one might choose one performance metric versus another. False positives, for example, can be particularly problematic when assessing correlations between units, while false negatives lead to underestimates of firing rates.</p><p>The process whereby a user might take advantage of the containerized sorters could be explained more clearly. This is not the main thrust of the manuscript, but creation of these standard software environments greatly furthers the goal of reproducibility.</p><p>Results section, Discussion section and elsewhere: Which of the spike sorters have been optimized on these specific test data? This is mentioned in context of IronClust and SpyKING CIRCUS. Maybe spell out in Table 2 for each sorter how the parameters were chosen and whether they were adapted to the test sets.</p></body></sub-article><sub-article article-type="reply" id="sa2"><front-stub><article-id pub-id-type="doi">10.7554/eLife.55167.sa2</article-id><title-group><article-title>Author response</article-title></title-group></front-stub><body><disp-quote content-type="editor-comment"><p>Essential revisions:</p><p>The paper offers little guidance for how to interpret the output of each sorter. Each of these sorters will produce a number of clusters which do not correspond to single units. Some set of quality metrics must be applied when the user decides how to interpret the sorter's output, and the authors have the opportunity to provide some guidance on that critical topic. This is mentioned as the first future direction, and we would encourage the authors to make a first effort at this in the current manuscript.</p></disp-quote><p>We agree. This encouragement led to us performing a preliminary offline analysis that uses one of the SpikeForest study sets to predict accuracy on the basis of three quality metrics of sorted units: SNR, firing rate, and inter-spike-interval violation rate (ISI-vr). We chose these metrics as a starting point since they are commonly used, unambiguous, and straightforward to compute. There are other metrics used in the field that require, e.g. access to the clustering feature space, making their extraction purely from the sorted spike trains much more complicated.</p><p>A new subsection entitled &quot;How well can quality metrics predict accuracy?&quot; and a new figure (Figure 6) has been added to the Results section showing some of the results of this analysis. We decided to focus on the SYNTH_JANELIA study set because it contains many units with varying degrees of accuracies. As seen in the new Figure 6 in the revised manuscript, the relationship between accuracy and these three metrics is highly dependent on the spike sorting algorithm used (it also depends to some extent on the type of recording). For IronClust, the SNR and ISI-vr are predictive of accuracy, whereas firing rate is much less predictive. For KiloSort and SpykingCircus, firing rate and SNR are both predictive, but ISI-vr does not appear to correlate strongly. For KiloSort2 and MountainSort4, firing rate is the only predictive metric of the three.</p><p>There is a subtle but crucial issue that prevents the immediate expansion of such a correlation analysis to other recording types, as follows. The analysis can only be performed using simulated recordings because there all of the true units are known. For the real (paired) recordings the ground truth timing information is available for only one of the units. Say that we wish to show that a certain per-unit metric value is a good predictor of real-world inaccuracy. We can collect this metric for all sorted units, but we cannot prove that any sorted unit is inaccurate. For instance, while there may be no sorted units that match the ground-truth unit well, each may be an accurate sorting of some other legitimate unit. If the reviewers have any solution to this issue, we would appreciate any suggestions as we move to the next phase.</p><p>Here is another way to explain the issue: our current website displays accuracies for each ground truth unit by reporting the extent of matching with the most similar sorted unit. In contrast, the proposed metric exploration requires reporting the accuracy for each sorted unit relative to the best matching ground truth. Therefore, while each marker in the website scatterplot corresponds to a ground truth unit, each marker in the new plots (Figure 6) corresponds to a sorted unit.</p><p>Adding such metric comparisons to the website interface, addressing the above issue, and expanding the set of metrics, is a larger undertaking that we expect to start shortly, as we indicate in the future work section.</p><disp-quote content-type="editor-comment"><p>The Introduction is quite long and reads more like a review article. Please distil this section down to the key facts that a reader needs to know and move other material to Results section or Discussion section. The first figure, for example, would be better placed at the beginning of the Results section.</p></disp-quote><p>In response to this suggestion, we have improved the readability by breaking the introduction into subsections and shortening it by three paragraphs (one moved to Results section, one moved to Discussion section, and one removed entirely). The first subsection &quot;Background&quot; and comprises four paragraphs that the reader may skim over if they are already familiar with the field. The next subsection &quot;Prior work&quot; containing two paragraphs that we consider crucial for presenting this work within a larger context of validation efforts. The third subsection, &quot;SpikeForest&quot;, gives a high-level overview of the approach presented in the paper. We moved two of the more technical paragraphs from this part of the writeup to Results section and Discussion section and removed one other paragraph entirely. Finally, we have subsection &quot;Contribution&quot; that has the paragraph describing the three main objectives of our work. All references to figures have been removed from the Introduction so that, as suggested by the reviewers, the first figure appears as part of the Results section.</p><disp-quote content-type="editor-comment"><p>All of the ground truth datasets are quite short (~10 min), but standard recordings from neuronal populations can span hours. It seems likely that the number of spikes from a given ground truth unit and the number of spikes from other units has an effect on sorting accuracy. Can this impact be quantified for each sorter? Please comment on whether the results will generalize to longer data sets.</p></disp-quote><p>A new 'future direction' item has been added to the Discussion section addressing our plans to add longer duration recordings with drifting spike waveforms.</p><p>We selected relatively short datasets partly because of compute time considerations. Multiple algorithms are run on every dataset and some of these sorters are very slow for longer recordings. We also believe that, when waveform drift is not a factor, around 10 minutes usually yields enough events per unit to satisfy typical clustering algorithms (even a 1 Hz average firing rate gives 600 events over 10 minutes).</p><p>To support this claim (for the reviewers but not in the paper), we simulated some additional recordings with varying durations (300, 600, 1200, 2400, and 4800 seconds). Technical details of how these were generated are provided below. <xref ref-type="fig" rid="sa2fig1">Author response image 1</xref> shows that for these simulations, accuracy remains steady with increasing duration across all of the sorters.</p><fig id="sa2fig1"><label>Author response image 1.</label><caption><title>Accuracy vs. duration for nine sorters applied to a study set of simulated recordings.</title></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-55167-resp-fig1-v1.tif"/></fig><p>Another issue associated with longer recordings is waveform drift, which varies quite a bit depending on the probe type and experimental setup. To give an indication of how the different sorters perform in the presence of this type of drift over longer recordings, we regenerated the recordings used above, except adding simulated spike waveform drift. In this case (<xref ref-type="fig" rid="sa2fig2">Author response image 2</xref>) we see that there is generally a falloff in accuracy with increasing duration, except for three sorters which appear to be more robust with respect to drift: IronClust, KiloSort, and KiloSort2.</p><fig id="sa2fig2"><label>Author response image 2.</label><caption><title>Same as Author response image 1, except that the simulations included synthetic drift.</title></caption><graphic mime-subtype="tiff" mimetype="image" xlink:href="elife-55167-resp-fig2-v1.tif"/></fig><p>Technical details on how these simulations were generated: We modified the Kilosort2 eMouse simulator developed by J. Colonell and M. Pachitariu. This simulator uses averaged unit waveforms from the recordings taken from the Kampff laboratory using a densely spaced electrode array (15 x 17 layout spanning 100 x 102 micrometers). In the drift simulation case, a linear probe motion was generated by uniformly translating a 64-channel probe (Neuropixels layout) by 20 micrometers over 80 min. To study the effect of time duration and channel count on the sorting accuracy, we extracted 16 channels from the original output (64 channels, 80 minutes) by taking contiguous neighboring channels at various time durations (5, 10, 20, 40, 80 min) starting at t=0. Ten recordings were sampled from each channel count and time duration by uniformly varying the channel offsets. The simulation inserted waveform templates at random channels and time points after multiplying them by a random scaling factor drawn from a Gamma distribution. The baseline noise was randomly generated to match the power spectrum observed from a Neuropixels recording, and a spatiotemporal smoothing was applied to induce a correlation between nearby channels and time samples.</p><disp-quote content-type="editor-comment"><p>Figure 2: Given that there is space for figures, it would be helpful to show not just the overall accuracy metric, but also the false positive and negatives for each sorter. Of course, this is available on the website, but readers may want this information right away. The caption should explain the meaning of empty cells in the table.</p></disp-quote><p>A new figure (Figure 5) has been added showing aggregated precision and recall for the main results. A new subsection summarizes and motivates this figure, at the end of the Results section. This led to the interesting observation that generally precision is lower than recall for paired recordings, but more often higher than recall for synthetic, showing that the simulations do not yet capture all of the statistics of real-world recordings.</p><p>We have also now added an explanation of empty cells to the captions of the two main result figures.</p><disp-quote content-type="editor-comment"><p>Please add some guidance for why one might choose one performance metric versus another. False positives, for example, can be particularly problematic when assessing correlations between units, while false negatives lead to underestimates of firing rates.</p></disp-quote><p>We have added a paragraph to the Results section, which explains when one might prefer to consider precision or recall over accuracy. The paragraph also refers to the new Figure 5 in the previous response.</p><disp-quote content-type="editor-comment"><p>The process whereby a user might take advantage of the containerized sorters could be explained more clearly. This is not the main thrust of the manuscript, but creation of these standard software environments greatly furthers the goal of reproducibility.</p></disp-quote><p>We have added a new subsection &quot;Running spike sorting on a local machine&quot; which explains this.</p><disp-quote content-type="editor-comment"><p>Results section, Discussion section and elsewhere: Which of the spike sorters have been optimized on these specific test data? This is mentioned in context of IronClust and SpyKING CIRCUS. Maybe spell out in Table 2 for each sorter how the parameters were chosen and whether they were adapted to the test sets.</p></disp-quote><p>Asterisks were added to four of the algorithms in the table, and the following was added to the caption:</p><p>&quot;Algorithms with asterisks were updated and optimized using SpikeForest data. For the other algorithms, we used the default or recommended parameters.&quot;</p></body></sub-article></article>